const e=JSON.parse('{"key":"v-0255c768","path":"/code/%E7%90%86%E8%A7%A3PHP%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86.html","title":"理解PHP内存管理","lang":"zh-CN","frontmatter":{"title":"理解PHP内存管理","date":"2016-06-28T11:11:12.000Z","category":["代码学习"],"tag":["PHP","内存管理"],"order":9998,"description":"内存管理概述 内存管理，是指软件运行时对计算机内存资源的分配和使用的技术。其最主要的目的是如何高效，快速的分配，并且在适当的时候释放和回收内存资源。 在使用C/C++开发程序的时候，需要格外注意内存管理，申请了内存再使用完后要记得释放，否则可能会造成内存泄漏。如果程序需要常驻内存，那么内存泄漏问题会把机器的内存耗光。所以在PHP这种需要常驻内存的程序来说，内存管理非常重要，它决定了程序的稳定性和执行效率。另外，应用程序向系统申请内存，释放内存的时候会引发系统调用，系统调用提供用户程序与操作系统之间的接口，他会触发0x80 号中断（int 0x80）将CPU从用户态切换到内核态，执行完毕再切换回用户态。在PHP这种对性能要求较高的程序来说，频繁在用户态和内核态切换会带来很大的性能消耗。","head":[["meta",{"property":"og:url","content":"https://mars.run/code/%E7%90%86%E8%A7%A3PHP%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"Mars’ Blog | 记录·分享·回顾"}],["meta",{"property":"og:title","content":"理解PHP内存管理"}],["meta",{"property":"og:description","content":"内存管理概述 内存管理，是指软件运行时对计算机内存资源的分配和使用的技术。其最主要的目的是如何高效，快速的分配，并且在适当的时候释放和回收内存资源。 在使用C/C++开发程序的时候，需要格外注意内存管理，申请了内存再使用完后要记得释放，否则可能会造成内存泄漏。如果程序需要常驻内存，那么内存泄漏问题会把机器的内存耗光。所以在PHP这种需要常驻内存的程序来说，内存管理非常重要，它决定了程序的稳定性和执行效率。另外，应用程序向系统申请内存，释放内存的时候会引发系统调用，系统调用提供用户程序与操作系统之间的接口，他会触发0x80 号中断（int 0x80）将CPU从用户态切换到内核态，执行完毕再切换回用户态。在PHP这种对性能要求较高的程序来说，频繁在用户态和内核态切换会带来很大的性能消耗。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-19T09:10:18.000Z"}],["meta",{"property":"article:tag","content":"PHP"}],["meta",{"property":"article:tag","content":"内存管理"}],["meta",{"property":"article:published_time","content":"2016-06-28T11:11:12.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-19T09:10:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"理解PHP内存管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-06-28T11:11:12.000Z\\",\\"dateModified\\":\\"2023-02-19T09:10:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"内存管理概述","slug":"内存管理概述","link":"#内存管理概述","children":[]},{"level":2,"title":"ZendMM","slug":"zendmm","link":"#zendmm","children":[]},{"level":2,"title":"存储层（storage）","slug":"存储层-storage","link":"#存储层-storage","children":[]},{"level":2,"title":"堆层（heap）","slug":"堆层-heap","link":"#堆层-heap","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1676797818000,"updatedTime":1676797818000,"contributors":[{"name":"MarsAuthority","email":"chinamarsmail@gmail.com","commits":1}]},"readingTime":{"minutes":14.71,"words":4414},"filePathRelative":"code/理解PHP内存管理.md","localizedDate":"2016年6月28日","excerpt":"<h2> 内存管理概述</h2>\\n<p>内存管理，是指软件运行时对计算机内存资源的分配和使用的技术。其最主要的目的是如何高效，快速的分配，并且在适当的时候释放和回收内存资源。</p>\\n<p>在使用C/C++开发程序的时候，需要格外注意内存管理，申请了内存再使用完后要记得释放，否则可能会造成内存泄漏。如果程序需要常驻内存，那么内存泄漏问题会把机器的内存耗光。所以在PHP这种需要常驻内存的程序来说，内存管理非常重要，它决定了程序的稳定性和执行效率。另外，应用程序向系统申请内存，释放内存的时候会引发系统调用，系统调用提供用户程序与操作系统之间的接口，他会触发0x80 号中断（int 0x80）将CPU从用户态切换到内核态，执行完毕再切换回用户态。在PHP这种对性能要求较高的程序来说，频繁在用户态和内核态切换会带来很大的性能消耗。</p>","autoDesc":true}');export{e as data};
