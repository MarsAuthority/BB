import{ad as e,H as o,I as c,F as n,U as s,O as p,ae as t,X as i}from"./framework-d186cff1.js";const u={},l=n("h2",{id:"介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),s(" 介绍")],-1),r=n("p",null,"如果你没有听过Kaggle，那你一定要来了解一下它：",-1),k=n("blockquote",null,[n("p",null,"Kaggle 为全球顶尖数据科学家举办竞赛活动。那些有着科学难题的公司（比如 NASA）可以通过网络将数据和问题提交给 Kaggle，任何顶尖科学家都可以提交问题解决方案，网站会通过对每位科学家的贡献进行排名。到目前为止，在一场竞赛中至少有 30000 人提交至少一种模型。")],-1),d=n("p",null,"简单来说就是一个数据科学竞赛网站，非常有趣。接下来让我们一起学习机器学习吧。",-1),m={href:"https://www.kaggle.com/c/titanic",target:"_blank",rel:"noopener noreferrer"},v={href:"http://scikit-learn.org/stable/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://pandas.pydata.org/",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"pandas 是基于 Numpy 构建的含有更高级数据结构和工具的数据分析包",-1),f=n("code",null,"matplotlib",-1),h=n("code",null,"Seaborn",-1),y=t(`<p>我们先写一段代码来看看原始数据吧。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

input_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data/raw/train.csv&#39;</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
submit_df  <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">&#39;data/raw/test.csv&#39;</span><span class="token punctuation">,</span>  header<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 合并他们</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>input_df<span class="token punctuation">,</span> submit_df<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 重建index</span>
df<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 删除reset_index()产生的index column</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token string">&#39;index&#39;</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">print</span> df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;columns:&quot;</span><span class="token punctuation">,</span> df<span class="token punctuation">.</span>columns<span class="token punctuation">.</span>values
<span class="token keyword">print</span> <span class="token string">&quot;Row count:&quot;</span><span class="token punctuation">,</span> df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>我们把training data 和 test data合并到了一起，因为在提取特征的时候，需要获取value的范围和分布。所以需要将他们合在一起处理。</li><li>Pandas合并data sets非常灵活，不会影响合并之前的原始数据，使用方便。</li></ul><p>输出如下，共有1309条数据，12个feature：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">12</span> columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;PassengerId&#39;</span> <span class="token string">&#39;Survived&#39;</span> <span class="token string">&#39;Pclass&#39;</span> <span class="token string">&#39;Name&#39;</span> <span class="token string">&#39;Sex&#39;</span> <span class="token string">&#39;Age&#39;</span> <span class="token string">&#39;SibSp&#39;</span> <span class="token string">&#39;Parch&#39;</span>
 <span class="token string">&#39;Ticket&#39;</span> <span class="token string">&#39;Fare&#39;</span> <span class="token string">&#39;Cabin&#39;</span> <span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span>
Row count<span class="token punctuation">:</span> <span class="token number">1309</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据预处理" tabindex="-1"><a class="header-anchor" href="#数据预处理" aria-hidden="true">#</a> 数据预处理</h2><p>拿到数据第一步是观察一下数据，看看是否有缺失数据，分析一下相关特征等等。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">observe</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">print</span> <span class="token string">&quot;column: &quot;</span><span class="token punctuation">,</span> df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
	columns <span class="token operator">=</span> df<span class="token punctuation">.</span>columns
	<span class="token keyword">for</span> i <span class="token keyword">in</span> columns<span class="token punctuation">:</span>
		<span class="token keyword">print</span> i<span class="token punctuation">,</span> <span class="token string">&quot;missing &quot;</span><span class="token punctuation">,</span>pd<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span>df<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot; type:&quot;</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>dtypes

<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
column<span class="token punctuation">:</span>  <span class="token number">12</span>
Age missing  <span class="token number">263</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> float64
Cabin missing  <span class="token number">1014</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token builtin">object</span>
Embarked missing  <span class="token number">2</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token builtin">object</span>
Fare missing  <span class="token number">1</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> float64
Name missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token builtin">object</span>
Parch missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> int64
PassengerId missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> int64
Pclass missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> int64
Sex missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token builtin">object</span>
SibSp missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> int64
Survived missing  <span class="token number">418</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> float64
Ticket missing  <span class="token number">0</span>  <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token builtin">object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到：</p><ol><li>Survived 的缺失可以忽略，因为<code>test.csv</code>中的数据本来就是没有Survived的。</li><li>Cabin 缺失很严重，我想可以忽略这一个特征了。</li><li>Age 缺失的并不多，而且Age是一个重要的特征，应该保留。</li></ol><p>再看看数据的内容吧：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span> df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
Age Cabin Embarked     Fare  \\\\
<span class="token number">0</span>   <span class="token number">22</span>   NaN        S   <span class="token number">7.2500</span>   
<span class="token number">1</span>   <span class="token number">38</span>   C85        C  <span class="token number">71.2833</span>   
<span class="token number">2</span>   <span class="token number">26</span>   NaN        S   <span class="token number">7.9250</span>   
<span class="token number">3</span>   <span class="token number">35</span>  C123        S  <span class="token number">53.1000</span>   
<span class="token number">4</span>   <span class="token number">35</span>   NaN        S   <span class="token number">8.0500</span>   

                                                Name  Parch  PassengerId  \\\\
<span class="token number">0</span>                            Braund<span class="token punctuation">,</span> Mr<span class="token punctuation">.</span> Owen Harris      <span class="token number">0</span>            <span class="token number">1</span>   
<span class="token number">1</span>  Cumings<span class="token punctuation">,</span> Mrs<span class="token punctuation">.</span> John Bradley <span class="token punctuation">(</span>Florence Briggs Th<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>      <span class="token number">0</span>            <span class="token number">2</span>   
<span class="token number">2</span>                             Heikkinen<span class="token punctuation">,</span> Miss<span class="token punctuation">.</span> Laina      <span class="token number">0</span>            <span class="token number">3</span>   
<span class="token number">3</span>       Futrelle<span class="token punctuation">,</span> Mrs<span class="token punctuation">.</span> Jacques Heath <span class="token punctuation">(</span>Lily May Peel<span class="token punctuation">)</span>      <span class="token number">0</span>            <span class="token number">4</span>   
<span class="token number">4</span>                           Allen<span class="token punctuation">,</span> Mr<span class="token punctuation">.</span> William Henry      <span class="token number">0</span>            <span class="token number">5</span>   

   Pclass     Sex  SibSp  Survived            Ticket  
<span class="token number">0</span>       <span class="token number">3</span>    male      <span class="token number">1</span>         <span class="token number">0</span>         A<span class="token operator">/</span><span class="token number">5</span> <span class="token number">21171</span>  
<span class="token number">1</span>       <span class="token number">1</span>  female      <span class="token number">1</span>         <span class="token number">1</span>          PC <span class="token number">17599</span>  
<span class="token number">2</span>       <span class="token number">3</span>  female      <span class="token number">0</span>         <span class="token number">1</span>  STON<span class="token operator">/</span>O2<span class="token punctuation">.</span> <span class="token number">3101282</span>  
<span class="token number">3</span>       <span class="token number">1</span>  female      <span class="token number">1</span>         <span class="token number">1</span>            <span class="token number">113803</span>  
<span class="token number">4</span>       <span class="token number">3</span>    male      <span class="token number">0</span>         <span class="token number">0</span>            <span class="token number">373450</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先看看每个特征的含义：</p><ul><li>Age （年龄）</li><li>Cabin（客舱位置）</li><li>Embarked（港口编号）</li><li>Fare（票价）</li><li>Name（姓名）</li><li>Parch（父母/孩子的数量）</li><li>PassengerId</li><li>Pclass（客舱等级）</li><li>Sex（性别）</li><li>SibSp（配偶的数量）</li><li>Survived(存活与否)</li><li>Ticket（船票编号）</li></ul><p>直观的看，<code>PassengerId</code>，<code>Ticket</code>没什么用，先忽略他们。</p><h2 id="处理缺失数据" tabindex="-1"><a class="header-anchor" href="#处理缺失数据" aria-hidden="true">#</a> 处理缺失数据</h2><p>在数据中出现缺失或者错误的Value是很正常的事，一些预测模型可以很好的处理缺失数据 <code>如神经网络(neural networks)</code>，有些则需要单独处理他们。我们使用随机森林(Random Forest)来做预测模型，它自身并不能对付缺失数据，所以需要单独进行处理。有两种方法：</p><ol><li>直接扔掉出现缺失Value的数据：只有少量的数据出现缺失Value的情况，这样做比较简单快捷。</li><li>给缺失的Value赋特殊值来表明它是缺失的：比较适用于分类变量，因为缺失Value就是不存在的数据，如果给他分配平均值之类的数值并没有什么意义。除非是某些潜在原因使某些缺失值会影响其与另外一个值的关联(correlation)。并且这种方法不适用于连续变量。不过对于二元变量(binary variables)，我们可以把他的缺失值赋为0，正常情况下True为1，False为-1。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Cabin<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;U0&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>给缺失的Value赋平均值：这种简单的做法很普遍，对于不重要的特征来说用这种方法足矣。还可以结合其他变量来算平均值。对于分类变量，使用最常见的值或许比平均值更好。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>平均值：
df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span> np<span class="token punctuation">.</span>isnan<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span>
最常见的值：
df<span class="token punctuation">.</span>Embarked<span class="token punctuation">[</span> df<span class="token punctuation">.</span>Embarked<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>Embarked<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>使用机器学习算法/模型来预测缺失数据：感觉只有数据量很大的情况下这样做才有效。</li></ol><h2 id="变量转换" tabindex="-1"><a class="header-anchor" href="#变量转换" aria-hidden="true">#</a> 变量转换</h2><p>变量转换的目的是将数据转换为模型适用的格式，不同方法实现的随机森林(Random Forest)接受不同类型的数据，Scikit-learn要求数据都是数字型<code>numeric</code>，所以我们要将原始数据转换为数字型<code>numeric</code>。</p><p>所有的数据可以分为两类：1.定性(Quantitative)变量可以以某种方式排序，Age就是一个很好的列子。2.定量(Qualitative)变量描述了物体的某一（不能被数学表示的）方面，Embarked就是一个例子。</p><h3 id="定性-qualitative-转换" tabindex="-1"><a class="header-anchor" href="#定性-qualitative-转换" aria-hidden="true">#</a> 定性(Qualitative)转换</h3><ol><li>Dummy Variables：就是类别变量或者二元变量，当qualitative variable是一些频繁出现的几个独立变量时，Dummy Variables比较适合使用。我们以Embarked为例，Embarked只包含三个值<code>&#39;S&#39;,&#39;C&#39;,&#39;Q&#39;</code>，我们可以使用下面的代码将其转换为dummies:</li><li>Factorizing：dummy不好处理Cabin（船舱号）这种标称属性，因为他出现的变量比较多。所以Pandas有一个方法叫做<code>factorize()</code>，它可以创建一些数字，来表示类别变量，对每一个类别映射一个ID，这种映射最后只生成一个特征，不像dummy那样生成多个特征。 下面的代码是对Cabin进行Factorizing：</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re

<span class="token comment"># Replace missing values with &quot;U0&quot;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Cabin<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;U0&#39;</span>

<span class="token comment"># create feature for the alphabetical part of the cabin number</span>
df<span class="token punctuation">[</span><span class="token string">&#39;CabinLetter&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;([a-zA-Z]+)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># convert the distinct cabin letters with incremental integer values</span>
df<span class="token punctuation">[</span><span class="token string">&#39;CabinLetter&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;CabinLetter&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定量-quantitative-转换" tabindex="-1"><a class="header-anchor" href="#定量-quantitative-转换" aria-hidden="true">#</a> 定量(Quantitative)转换</h3><ol><li><p>Scaling Scaling可以将一个很大范围的数值映射到一个很小的范围(<code>通常是-1 - 1，或则是0 - 1</code>)，很多情况下我们需要将数值做Scaling使其范围大小一样，否则大范围数值特征将会由更高的权重。比如：Age的范围可能只是0-100，而income的范围可能是0-10000000，在某些对数组大小敏感的模型中会影响其结果。</p><p>下面的代码是对Age进行Scaling：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># StandardScaler will subtract the mean from each value then scale to the unit variance</span>
scaler <span class="token operator">=</span> preprocessing<span class="token punctuation">.</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age_scaled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Binning inning通过观察“邻居”(即周围的值)来连续数据离散化。存储的值被分布到一些“桶”或箱中，就像直方图的bin将数据划分成几块一样。下面的代码对Fare进行Binning。</p></li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Divide all fares into quartiles</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Fare_bin&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>qcut<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment"># qcut() creates a new variable that identifies the quartile range, but we can&#39;t use the string so either</span>
<span class="token comment"># factorize or create dummies from the result</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Fare_bin_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Fare_bin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Fare_bin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token string">&#39;Fare_&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="特征提取" tabindex="-1"><a class="header-anchor" href="#特征提取" aria-hidden="true">#</a> 特征提取</h2><p>特征提取很重要的一个方面是深入理解数据，并且能提取出新的特征来做预测。机器学习的核心就是模型选取和参数选择，特征提取可以说是重中之重。</p><p>一个特征提取的例子是，从电话号码中提取中国家、地区、城市的信息，或者是从GPS中提取中国家、地区、城市的信息。只要能描述一个事物的qualitative变量，都有可能从中挖掘出有用的特征，另外，时序等信息也是非常有用的。</p><p>泰坦尼克号的这些数据非常简单，我们并不需要对数据做太多的处理，我们下面只对name，cabin和ticket提取一些变量。</p><p>举两个例子吧：</p><ol><li><p>Name 姓名这个特征本身来说没有什么用，但是我们可以从中提取出一个特征，<code>称呼</code>。</p><p>称呼，或许不同社会地位的人抢到逃生船的概率不同？代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># What is each person&#39;s title? </span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;, (.*?)\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># Group low-occuring, related titles together</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title <span class="token operator">==</span> <span class="token string">&#39;Jonkheer&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Master&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Ms&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Mlle&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Miss&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title <span class="token operator">==</span> <span class="token string">&#39;Mme&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Mrs&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Capt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Don&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Major&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Col&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sir&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Sir&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Dona&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lady&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;the Countess&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Lady&#39;</span>

<span class="token comment"># Build binary features</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df<span class="token punctuation">,</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token string">&#39;Title_&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Cabin 客舱信息包含了甲板和房间号，不同甲板位置不同，逃生船数量不同，人群年龄分布不同等等。不同房间号离甲板距离不同，离逃生船距离不同，等等。所以从客舱中提取中<code>甲板</code>和<code>房间号</code>这两个特征很重要。代码如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Replace missing values with &quot;U0&quot;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Cabin<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;U0&#39;</span>

<span class="token comment"># Create a feature for the deck</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;([a-zA-Z]+)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment"># Create binary features for each deck</span>
decks <span class="token operator">=</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Deck&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token string">&#39;Deck_&#39;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df<span class="token punctuation">,</span> decks<span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># Create feature for the room number</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Room&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span> <span class="token keyword">lambda</span> x <span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;([0-9]+)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>search<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="开始处理" tabindex="-1"><a class="header-anchor" href="#开始处理" aria-hidden="true">#</a> 开始处理</h2><p>前面理论说了那么多，还是实战看看吧，我们要预处理每一个特征。</p><h3 id="首先是age-年龄" tabindex="-1"><a class="header-anchor" href="#首先是age-年龄" aria-hidden="true">#</a> 首先是Age（年龄）</h3><p>Age（年龄）有263个缺失项，就简单地用平均值来填充，并看看填充前后的直方图：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
axis1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Original Age values&#39;</span><span class="token punctuation">)</span>
axis2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;New Age values&#39;</span><span class="token punctuation">)</span>
average_age   <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;hist&#39;</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Age<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> average_age
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;hist&#39;</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/e1BIid.jpg" alt="e1BIid" tabindex="0" loading="lazy"><figcaption>e1BIid</figcaption></figure><p>可以看到经过平均值填充后，数据分布并不是很好。试试随机选取<code>平均值加减标准差</code>范围的数来改进，使数据更接近真实情况。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
axis1<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;Original Age values&#39;</span><span class="token punctuation">)</span>
axis2<span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">&#39;New Age values&#39;</span><span class="token punctuation">)</span>
average_age   <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
std_age       <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span>
count_nan_age <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
rand <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>average_age <span class="token operator">-</span> std_age<span class="token punctuation">,</span> average_age <span class="token operator">+</span> std_age<span class="token punctuation">,</span> size <span class="token operator">=</span> count_nan_age<span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;hist&#39;</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Age<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> rand
df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;hist&#39;</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">70</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><p>![[Pasted image 20230217002600.png]]</p><p>感觉这样好多了。</p><p>接着，我们需要从年龄中提取一个特征出来，即：孩子。不是说ladies and kids first么？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">is_child</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token number">1</span>
	<span class="token keyword">else</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> <span class="token number">0</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Child&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>is_child<span class="token punctuation">)</span> <span class="token comment">#小于16岁的认为是孩子</span>
fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>df<span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
child_survive <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Child&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Child&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>child_survive<span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/eHiKsz.jpg" alt="eHiKsz" tabindex="0" loading="lazy"><figcaption>eHiKsz</figcaption></figure><p>孩子只有132人，却有着57%的生存率！看来是否是孩子，这一特征很重要。（数据支持，kids first，后面到Sex分析一下是不是ladies first）</p><p><strong><strong>Cabin（客舱位置）</strong></strong> 可以忽略</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Cabin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong><strong>Embarked（港口编号）</strong></strong></p><p>Embarked（港口编号）只有2个缺失项，直接用最常见的值填充它，然后用图表看看其与Survived的关系：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

df<span class="token punctuation">.</span>Embarked<span class="token punctuation">[</span> df<span class="token punctuation">.</span>Embarked<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>Embarked<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values
input_df_tmp <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">#取出input_df部分，因为只有他们才有Survived特征。</span>
<span class="token punctuation">(</span>s<span class="token punctuation">,</span>c<span class="token punctuation">,</span>q<span class="token punctuation">)</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span>
embark_percentage <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span> 
	<span class="token string">&#39;Embarked&#39;</span> <span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token string">&#39;percentage&#39;</span> <span class="token punctuation">:</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">/</span>df<span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span>c<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">,</span>axis3<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;percentage&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>embark_percentage<span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">&quot;Embarked&quot;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>input_df_tmp<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
embark_perc <span class="token operator">=</span> input_df_tmp<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Embarked&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Embarked&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>embark_perc<span class="token punctuation">,</span>order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;S&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Q&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ax<span class="token operator">=</span>axis3<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/ICrD6R.jpg" alt="ICrD6R" tabindex="0" loading="lazy"><figcaption>ICrD6R</figcaption></figure><p>分别是不同Embarked（港口编号）的百分比、不同Embarked（港口编号）生存的数量、不同Embarked（港口编号）的生存率。Embarked（港口编号）特征只有三种取值，且S占70%以上，所以Embarked（港口编号）这个特征应该不要？</p><h3 id="fare-票价" tabindex="-1"><a class="header-anchor" href="#fare-票价" aria-hidden="true">#</a> Fare（票价）</h3><p>Fare（票价）只有1个缺失项,直接用平均值填充：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>median<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>绘图看看Fare（票价）与Survived的关系：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

fare_not_survived <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span>
fare_survived     <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&quot;Fare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">]</span>
avgerage_fare <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span>fare_not_survived<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fare_survived<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;hist&#39;</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bins<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> xlim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
avgerage_fare<span class="token punctuation">.</span>index<span class="token punctuation">.</span>names <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span>
avgerage_fare<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> legend<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><p><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/rwPHr3.jpg" alt="rwPHr3" loading="lazy"><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/nrJ4Up.jpg" alt="nrJ4Up" loading="lazy"></p><p>可以看出票价集中在10左右，幸存的人的票价平均在48。</p><h3 id="pclass-客舱等级" tabindex="-1"><a class="header-anchor" href="#pclass-客舱等级" aria-hidden="true">#</a> Pclass（客舱等级）</h3><p>Pclass（客舱等级）考虑做Dummy Variables处理，使其生成更多的特征。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

input_df_tmp <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
seaborn<span class="token punctuation">.</span>factorplot<span class="token punctuation">(</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data<span class="token operator">=</span>input_df_tmp<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/1h3Dsf.jpg" alt="1h3Dsf" tabindex="0" loading="lazy"><figcaption>1h3Dsf</figcaption></figure><p>得到Pclass与Survived的关系，可以看出Pclass为3的生存率很低，我们试试把它的Dummy Variables去掉：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

pclass_dummies  <span class="token operator">=</span> pd<span class="token punctuation">.</span>get_dummies<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
pclass_dummies<span class="token punctuation">.</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Class_1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Class_2&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Class_3&#39;</span><span class="token punctuation">]</span>
pclass_dummies<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Class_3&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Pclass&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>join<span class="token punctuation">(</span>pclass_dummies<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sex-性别" tabindex="-1"><a class="header-anchor" href="#sex-性别" aria-hidden="true">#</a> Sex（性别）</h3><p>老规矩，首先看看Sex与Survived的关系：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>df<span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
women_survive <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;Sex&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>women_survive<span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/YC3mXf.jpg" alt="YC3mXf" tabindex="0" loading="lazy"><figcaption>YC3mXf</figcaption></figure><p>果然是Ladies First呀！将Sex用数字表示:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;female&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Sex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在除去之前已经drop的<code>PassengerId</code>,<code>Ticket</code>,<code>Cabin</code>,只剩下<code>Name</code>,<code>Parch</code>和<code>SibSp</code>了。</p><h3 id="name-姓名-parch-父母-孩子的数量-sibsp-配偶的数量" tabindex="-1"><a class="header-anchor" href="#name-姓名-parch-父母-孩子的数量-sibsp-配偶的数量" aria-hidden="true">#</a> Name（姓名），Parch（父母/孩子的数量），SibSp（配偶的数量）</h3><p>我们需要从这里面提取中他们是否有家人在船上这一特征，因为有家人意味着逃生过程中会有家人的帮助，生存率可能更高。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> seaborn

df<span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>  df<span class="token punctuation">[</span><span class="token string">&quot;Parch&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">&quot;SibSp&quot;</span><span class="token punctuation">]</span>
df<span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
df<span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token comment">#绘图</span>
input_df_tmp <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
fig<span class="token punctuation">,</span> <span class="token punctuation">(</span>axis1<span class="token punctuation">,</span>axis2<span class="token punctuation">)</span> <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>sharex<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>countplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>df<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis1<span class="token punctuation">)</span>
family_perc <span class="token operator">=</span> input_df_tmp<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;WithFamily&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>as_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>
seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">&#39;WithFamily&#39;</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">&#39;Survived&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span>family_perc<span class="token punctuation">,</span> order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ax<span class="token operator">=</span>axis2<span class="token punctuation">)</span>
axis1<span class="token punctuation">.</span>set_xticklabels<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;With Family&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Alone&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到:</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/88czBr.jpg" alt="88czBr" tabindex="0" loading="lazy"><figcaption>88czBr</figcaption></figure><p>可以看到，有家人在船上的人有更高的生存率；特征就处理到这里吧。</p><h2 id="训练" tabindex="-1"><a class="header-anchor" href="#训练" aria-hidden="true">#</a> 训练</h2><p>机器学习的模型很多，用于分类有：</p><ol><li>回归算法：Logistic Regression、 Ordinary Least Square等等。</li><li>决策树: CART、ID3、Random Forest等等。</li><li>贝叶斯：Navie Bayesian、BBN等等。</li><li>基于实例的算法：KNN、LVQ等等。</li><li>组合模型、关联规则、神经网络、深度学习等等。</li></ol><p>模型太多都看晕了，这种场景下选什么模型合适？因为我也不是很懂，所以大家可以自己查一下相关资料。在这里我选择了Random Forest和GBDT来试试。</p><p><strong>Random Forest:</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> RandomForestClassifier
X <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

X_test <span class="token operator">=</span> df<span class="token punctuation">[</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
random_forest <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>
random_forest<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

Y_pred <span class="token operator">=</span> random_forest<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
<span class="token keyword">print</span> random_forest<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
submission <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
	    <span class="token string">&quot;PassengerId&quot;</span><span class="token punctuation">:</span> X_origin<span class="token punctuation">[</span><span class="token string">&quot;PassengerId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	    <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">:</span> Y_pred<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
submission<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;result.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GBDT:</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">import</span> GradientBoostingClassifier
X <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
y <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">:</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>

X_test <span class="token operator">=</span> df<span class="token punctuation">[</span>input_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
GBDT <span class="token operator">=</span> GradientBoostingClassifier<span class="token punctuation">(</span>n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span>
GBDT<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>

Y_pred <span class="token operator">=</span> GBDT<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
<span class="token keyword">print</span> GBDT<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
submission <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>
	    <span class="token string">&quot;PassengerId&quot;</span><span class="token punctuation">:</span> X_origin<span class="token punctuation">[</span><span class="token string">&quot;PassengerId&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
	    <span class="token string">&quot;Survived&quot;</span><span class="token punctuation">:</span> Y_pred<span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
submission<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">&#39;result.csv&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后在Kaggle提交，只有<code>0.74641</code>分。</p><h2 id="调优" tabindex="-1"><a class="header-anchor" href="#调优" aria-hidden="true">#</a> 调优</h2><p>再观察一下数据，看看还有那些特征可以用到，又去Google了一番，整理出三个新特征：称谓、家庭大小、姓。</p><p><strong>称谓:</strong> 不同的称谓意味着不同的社会地位、不同的社会地位的人对人生、事物的理解不同。并且不同的社会地位乘坐逃生舱的概率也不同？可能某一类人的生存概率更高？</p><p><strong>家庭大小:</strong> 一家七个人的逃生概率大还是一家两个人的逃生概率大呢？人多的家庭会不会更难逃生呢？</p><p><strong>姓:</strong> 其实姓这个特征是为了辅助家庭这个特征的，同一个姓是一个家庭的概率更大？</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#处理姓</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;(Mr|Mrs|Miss|Master|Don|Rev|Dr|Mme|Ms|Major|Lady|Sir|Mlle|Col|Capt|the Countess|Jonkheer|Dona)\\\\.\\\\s(\\\\w*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Surname&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment">#处理称谓</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">&quot;, (.*?)\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title <span class="token operator">==</span> <span class="token string">&#39;Jonkheer&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Master&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Ms&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Mlle&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Miss&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title <span class="token operator">==</span> <span class="token string">&#39;Mme&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Mrs&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Capt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Don&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Major&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Col&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sir&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Sir&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">.</span>Title<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Dona&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lady&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;the Countess&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Lady&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Title_id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>factorize<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Names&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token comment">#处理家庭大小</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>  df<span class="token punctuation">[</span><span class="token string">&quot;Parch&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> df<span class="token punctuation">[</span><span class="token string">&quot;SibSp&quot;</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;small&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;small&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;big&#39;</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;small&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之前的Age和Fare忘了做Scaling处理，也把它加上：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> preprocessing
scaler <span class="token operator">=</span> preprocessing<span class="token punctuation">.</span>StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Fare_scaled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Fare&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
df<span class="token punctuation">[</span><span class="token string">&#39;Age_scaled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们看看目前这些特征的feature importance:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>features_list <span class="token operator">=</span> df<span class="token punctuation">.</span>columns<span class="token punctuation">.</span>values<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

<span class="token comment"># Fit a random forest with (mostly) default parameters to determine feature importance</span>
forest <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">)</span>
forest<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
feature_importance <span class="token operator">=</span> forest<span class="token punctuation">.</span>feature_importances_

<span class="token comment"># make importances relative to max importance</span>
feature_importance <span class="token operator">=</span> <span class="token number">100.0</span> <span class="token operator">*</span> <span class="token punctuation">(</span>feature_importance <span class="token operator">/</span> feature_importance<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Get the indexes of all features over the importance threshold</span>
important_idx <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>feature_importance<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

<span class="token comment"># Get the sorted indexes of important features</span>
sorted_idx <span class="token operator">=</span> np<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span>feature_importance<span class="token punctuation">[</span>important_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">print</span> <span class="token string">&quot;\\\\nFeatures sorted by importance (DESC):\\\\n&quot;</span><span class="token punctuation">,</span> important_features<span class="token punctuation">[</span>sorted_idx<span class="token punctuation">]</span>

<span class="token comment"># Adapted from &lt;http://scikit-learn.org/stable/auto_examples/ensemble/plot_gradient_boosting_regression.html&gt;</span>
pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_idx<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">.5</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>barh<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> feature_importance<span class="token punctuation">[</span>important_idx<span class="token punctuation">]</span><span class="token punctuation">[</span>sorted_idx<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> align<span class="token operator">=</span><span class="token string">&#39;center&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> important_features<span class="token punctuation">[</span>sorted_idx<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&#39;Relative Importance&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;Variable Importance&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/nwobWe.jpg" alt="nwobWe" tabindex="0" loading="lazy"><figcaption>nwobWe</figcaption></figure><p>我们可以把后两个不重要的特征删掉：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Child&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FamilySize&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面是参数调优，Sklean提供了两种方法，GridSearch和RandomizedSearch。在这两种情况下，都可以指定每个参数的取值范围，创建一个字典。将参数字典提供给search方法，它就会执行模型所指定的值的组合。GridSearch会测试参数每一个可能的组合。 而RandomizedSearch需要指定有多少不同的组合要测试，然后随机选择并组合他们。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn <span class="token keyword">import</span> grid_search
sqrtfeat <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
minsampsplit <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>X<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">0.015</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">report</span><span class="token punctuation">(</span>grid_scores<span class="token punctuation">,</span> n_top<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    params <span class="token operator">=</span> <span class="token boolean">None</span>
    top_scores <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>grid_scores<span class="token punctuation">,</span> key<span class="token operator">=</span>itemgetter<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span>n_top<span class="token punctuation">]</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> score <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>top_scores<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Parameters with rank: {0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Mean validation score: {0:.4f} (std: {1:.4f})&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>
              score<span class="token punctuation">.</span>mean_validation_score<span class="token punctuation">,</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>score<span class="token punctuation">.</span>cv_validation_scores<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Parameters: {0}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>score<span class="token punctuation">.</span>parameters<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        
        <span class="token keyword">if</span> params <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            params <span class="token operator">=</span> score<span class="token punctuation">.</span>parameters
    
    <span class="token keyword">return</span> params
<span class="token comment"># Simple grid test</span>
grid_test1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;n_estimators&quot;</span>      <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">20000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               <span class="token string">&quot;criterion&quot;</span>         <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;gini&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;entropy&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               <span class="token string">&quot;max_features&quot;</span>      <span class="token punctuation">:</span> <span class="token punctuation">[</span>sqrtfeat<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> sqrtfeat<span class="token punctuation">,</span> sqrtfeat<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               <span class="token string">&quot;max_depth&quot;</span>         <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
               <span class="token string">&quot;min_samples_split&quot;</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> minsampsplit <span class="token punctuation">]</span> <span class="token punctuation">}</span>

forest <span class="token operator">=</span> RandomForestClassifier<span class="token punctuation">(</span>oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
 
<span class="token keyword">print</span> <span class="token string">&quot;Hyperparameter optimization using GridSearchCV...&quot;</span>
grid_search <span class="token operator">=</span> grid_search<span class="token punctuation">.</span>GridSearchCV<span class="token punctuation">(</span>forest<span class="token punctuation">,</span> grid_test1<span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
	
grid_search<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
Y_pred <span class="token operator">=</span> grid_search<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
<span class="token keyword">print</span> grid_search<span class="token punctuation">.</span>score<span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于我的机器太慢了，就忽略这一步了。</p><p>最后，我使用Random Forest, 加上参数max_depth=5 防止模型过拟合，并将n_estimators放到了30000，再次跑了提交Kaggle，这次得到了<code>0.8038</code>：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/l1DnAD.jpg" alt="Results" tabindex="0" loading="lazy"><figcaption>Results</figcaption></figure><h2 id="验证-学习曲线" tabindex="-1"><a class="header-anchor" href="#验证-学习曲线" aria-hidden="true">#</a> 验证：学习曲线</h2><p>最后我们用学习曲线(Learning Curves)验证一下该模型的准确率。</p><p>方法很简单，我们逐步增加training data，标出training score(模型是否overfit)和error rate(模型预测的结果是否正确)。即可。继续重复这个过程，选出200、300、400、500等等个数据作为training data，然后标出training score和error rate，得出一个曲线，即学习曲线(Learning Curves)。</p>`,121),_={href:"https://www.coursera.org/course/ml",target:"_blank",rel:"noopener noreferrer"},x=n("figure",null,[n("img",{src:"https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/xs44iQ.jpg",alt:"Learning Curves",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Learning Curves")],-1),q=n("p",null,"其中红线代表error rate，蓝线代表training score。",-1),w=n("blockquote",null,[n("p",null,"1.左上角是最优情况，随着样本的增加，error rate和training score都降低。2.右上角是最差情况，模型几乎无法预测数据，重新调整参数吧。3.左下角是high variance的情况，模型不够稳定，不能很好的fit新数据。4.右下角是high bias的情况，模型无法预测出准确的结果。")],-1),S={href:"http://orangeprince.info/",target:"_blank",rel:"noopener noreferrer"},F=t(`<blockquote><p>首先 Error = Bias + Variance，Error反映的是整个模型的准确度，Bias反映的是模型在样本上的输出与真实值之间的误差，即模型本身的精准度，Variance反映的是模型每一次输出结果与模型输出期望之间的误差，即模型的稳定性。举一个例子，一次打靶实验，目标是为了打到10环，但是实际上只打到了7环，那么这里面的Error就是3。具体分析打到7环的原因，可能有两方面：一是瞄准出了问题，比如实际上射击瞄准的是9环而不是10环；二是枪本身的稳定性有问题，虽然瞄准的是9环，但是只打到了7环。那么在上面一次射击实验中，Bias就是1,反应的是模型期望与真实目标的差距，而在这次试验中，由于Variance所带来的误差就是2，即虽然瞄准的是9环，但由于本身模型缺乏稳定性，造成了实际结果与模型期望之间的差距。</p></blockquote><p>High variance，low bias意味着”overfitting”，模型过拟合导致不能很好的用于新数据。而High bias，low variance意味着”underfitting”，模型欠拟合导致不能很好从样本中学习，很难去预测新数据。Bias与Variance往往是不能兼得的。如果要降低模型的Bias，就一定程度上会提高模型的Variance，反之亦然。</p><p>例如，如果模型存在high variance，一个常见的解决方法是给他增加更多的特征。但是这样也会增加bias，这中间的平衡需要仔细考虑。后面的链接提供了一些解决这类问题的方法。</p><p>下面我们看看在scikit-learn中如何实现：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>learning_curve <span class="token keyword">import</span> learning_curve
<span class="token keyword">def</span> <span class="token function">plot_learning_curve</span><span class="token punctuation">(</span>estimator<span class="token punctuation">,</span> title<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ylim<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
                        n_jobs<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> train_sizes<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">.1</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Generate a simple plot of the test and traning learning curve.

    Parameters
    ----------
    estimator : object type that implements the &quot;fit&quot; and &quot;predict&quot; methods
        An object of that type which is cloned for each validation.

    title : string
        Title for the chart.

    X : array-like, shape (n_samples, n_features)
        Training vector, where n_samples is the number of samples and
        n_features is the number of features.

    y : array-like, shape (n_samples) or (n_samples, n_features), optional
        Target relative to X for classification or regression;
        None for unsupervised learning.

    ylim : tuple, shape (ymin, ymax), optional
        Defines minimum and maximum yvalues plotted.

    cv : integer, cross-validation generator, optional
        If an integer is passed, it is the number of folds (defaults to 3).
        Specific cross-validation objects can be passed, see
        sklearn.cross_validation module for the list of possible objects

    n_jobs : integer, optional
        Number of jobs to run in parallel (default 1).
    &quot;&quot;&quot;</span>
    plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span>
    <span class="token keyword">if</span> ylim <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">*</span>ylim<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">&quot;Training examples&quot;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">&quot;Score&quot;</span><span class="token punctuation">)</span>
    train_sizes<span class="token punctuation">,</span> train_scores<span class="token punctuation">,</span> test_scores <span class="token operator">=</span> learning_curve<span class="token punctuation">(</span>
        estimator<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> cv<span class="token operator">=</span>cv<span class="token punctuation">,</span> n_jobs<span class="token operator">=</span>n_jobs<span class="token punctuation">,</span> train_sizes<span class="token operator">=</span>train_sizes<span class="token punctuation">)</span>
    train_scores_mean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>train_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    train_scores_std <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>train_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    test_scores_mean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>test_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    test_scores_std <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>test_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>

    plt<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> train_scores_mean <span class="token operator">-</span> train_scores_std<span class="token punctuation">,</span>
                     train_scores_mean <span class="token operator">+</span> train_scores_std<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>
                     color<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>fill_between<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> test_scores_mean <span class="token operator">-</span> test_scores_std<span class="token punctuation">,</span>
                     test_scores_mean <span class="token operator">+</span> test_scores_std<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;g&quot;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> train_scores_mean<span class="token punctuation">,</span> <span class="token string">&#39;o-&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span>
             label<span class="token operator">=</span><span class="token string">&quot;Training score&quot;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>train_sizes<span class="token punctuation">,</span> test_scores_mean<span class="token punctuation">,</span> <span class="token string">&#39;o-&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;g&quot;</span><span class="token punctuation">,</span>
             label<span class="token operator">=</span><span class="token string">&quot;Cross-validation score&quot;</span><span class="token punctuation">)</span>

    plt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">&quot;best&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> plt
title <span class="token operator">=</span> <span class="token string">&quot;Learning Curves&quot;</span>
plot_learning_curve<span class="token punctuation">(</span>RandomForestClassifier<span class="token punctuation">(</span>oob_score<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">30000</span><span class="token punctuation">,</span> max_depth<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">,</span> X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ylim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1.01</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> n_jobs<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> train_sizes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/K5fsQU.jpg" alt="Learning Curves Result" tabindex="0" loading="lazy"><figcaption>Learning Curves Result</figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>还有许多可以优化的地方，通过实战才能发现学习中不足的地方。</p>`,9);function C(T,z){const a=i("ExternalLinkIcon");return o(),c("div",null,[l,r,k,d,n("p",null,[s("这次的任务是："),n("a",m,[s("Titanic-Kaggle"),p(a)])]),n("p",null,[s("我们的重点是学习机器学习的过程，所以这次不涉及具体的算法实现，而是使用第三方库来实现算法，这里推荐"),n("a",v,[s("scikit-learn"),p(a)]),s("，它提供了许多工具和模型，使用起来非常方便。另外我们还是用了"),n("a",b,[s("Pandas"),p(a)]),s("库( "),g,s(" )来提高效率，还有"),f,s(" 和 "),h,s(" ，通过图标直观的观察数据。")]),y,n("p",null,[s("下图是Professor Ng在coursea上"),n("a",_,[s("机器学习"),p(a)]),s("课程的ppt截图，描述了四种基本的曲线形状：")]),x,q,w,n("p",null,[s("这里解释一下variance和bias的意思，引用"),n("a",S,[s("@Orangeprince"),p(a)]),s("的形象解释：")]),F])}const P=e(u,[["render",C],["__file","机器学习实战之Kaggle_Titanic预测.html.vue"]]);export{P as default};
