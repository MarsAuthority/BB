<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://mars.run/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://mars.run/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Mars’ Blog | 记录·分享·回顾</title>
    <link>https://mars.run/</link>
    <description>开源工具、效率方法、心理学探索的自我提升笔记，记录并输出一切能让自己提升的知识。</description>
    <language>zh-CN</language>
    <pubDate>Thu, 16 Feb 2023 16:47:08 GMT</pubDate>
    <lastBuildDate>Thu, 16 Feb 2023 16:47:08 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright by Mars</copyright>
    <image>
      <title>Mars’ Blog | 记录·分享·回顾</title>
      <url>https://mars.run/logo.svg</url>
      <link>https://mars.run/</link>
    </image>
    <category>代码学习</category>
    <category>知识管理</category>
    <category>网络安全</category>
    <category>工具</category>
    <category>观察随笔</category>
    <category>博客</category>
    <category>头脑驿站</category>
    <category>购物</category>
    <category>系统</category>
    <category>网络</category>
    <category>服务器</category>
    <category>自动化</category>
    <category>健康</category>
    <item>
      <title>利用Calibre.recipe爬取文章</title>
      <link>https://mars.run/code/%E5%88%A9%E7%94%A8Calibre.recipe%E7%88%AC%E5%8F%96%E6%96%87%E7%AB%A0.html</link>
      <guid>https://mars.run/code/%E5%88%A9%E7%94%A8Calibre.recipe%E7%88%AC%E5%8F%96%E6%96%87%E7%AB%A0.html</guid>
      <source url="https://mars.run/rss.xml">利用Calibre.recipe爬取文章</source>
      <description>前言 多读书，读好书很重要，网上的有些精品资源只能在线一页一页翻着看，颇不方便，故研究了一下Calibre，用其强大的爬虫功能抓取这些文章，并自动生成带目录索引的电子书文件(mobi、epub)，以便在Kindle上随时阅读。 编写recipe脚本 Calibre&amp;nbsp;就不再介绍了，可以自行百度。 recipe 其实就是一段python代码，定义 calibre 的抓取行为，通过 Beautiful Soup 筛选出页面中要抓取的元素。相关文档参考： Beautiful Soup 4.2.0 DocumentationAPI Documentation for recipes</description>
      <category>代码学习</category>
      <pubDate>Wed, 18 Mar 2015 20:19:31 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 前言</h2>
<p>多读书，读好书很重要，网上的有些精品资源只能在线一页一页翻着看，颇不方便，故研究了一下Calibre，用其强大的爬虫功能抓取这些文章，并自动生成带目录索引的电子书文件(mobi、epub)，以便在Kindle上随时阅读。</p>
<h2> 编写recipe脚本</h2>
<p><code>Calibre</code>&nbsp;就不再介绍了，可以自行百度。</p>
<p>recipe 其实就是一段python代码，定义 calibre 的抓取行为，通过 Beautiful Soup 筛选出页面中要抓取的元素。相关文档参考：</p>
<blockquote>
<p>Beautiful Soup 4.2.0 DocumentationAPI Documentation for recipes</p>
</blockquote>
<p>简单来说，recipe 是一个固定的模板。找到要抓取的目录和每个目录项链接到相应内容页的正文的Dom元素即可。</p>
<p>下面以抓取《詩詞金庸》<a href="http://jinyong.ylib.com/works/v1.0/works/poem.htm" target="_blank" rel="noopener noreferrer">http://jinyong.ylib.com/works/v1.0/works/poem.htm</a>&nbsp;为例：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码保存为 <code>LouisChaPoem.recipe</code> 。整个代码比较简单明了，就不再赘述细节了。运行 <code>ebook-convert LouisChaPoem.recipe LouisChaPoem.epub</code>  就可以抓取了。（ebook-convert在calibre的安装目录下）</p>
<h2> 最后</h2>
<p>看看效果吧，正文：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/KmYDsZ.jpg" alt="KmYDsZ" tabindex="0" loading="lazy"><figcaption>KmYDsZ</figcaption></figure>
<p>最后推荐一些写好的Recipe：</p>
<blockquote>
<p><a href="https://github.com/ericzhang-cn/kindle-open-books" target="_blank" rel="noopener noreferrer">@ericzhang-cn</a></p>
</blockquote>
<blockquote>
<p><a href="https://github.com/mine260309/calibre_recipes" target="_blank" rel="noopener noreferrer">@mine260309</a></p>
</blockquote>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/KmYDsZ.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>机器学习实战之Kaggle_Titanic预测</title>
      <link>https://mars.run/code/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%E4%B9%8BKaggle_Titanic%E9%A2%84%E6%B5%8B.html</link>
      <guid>https://mars.run/code/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98%E4%B9%8BKaggle_Titanic%E9%A2%84%E6%B5%8B.html</guid>
      <source url="https://mars.run/rss.xml">机器学习实战之Kaggle_Titanic预测</source>
      <description>介绍 如果你没有听过Kaggle，那你一定要来了解一下它： Kaggle 为全球顶尖数据科学家举办竞赛活动。那些有着科学难题的公司（比如 NASA）可以通过网络将数据和问题提交给 Kaggle，任何顶尖科学家都可以提交问题解决方案，网站会通过对每位科学家的贡献进行排名。到目前为止，在一场竞赛中至少有 30000 人提交至少一种模型。 简单来说就是一个数据科学竞赛网站，非常有趣。接下来让我们一起学习机器学习吧。 这次的任务是：Titanic-Kaggle</description>
      <category>代码学习</category>
      <pubDate>Tue, 23 Jun 2015 20:10:11 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 介绍</h2>
<p>如果你没有听过Kaggle，那你一定要来了解一下它：</p>
<blockquote>
<p>Kaggle 为全球顶尖数据科学家举办竞赛活动。那些有着科学难题的公司（比如 NASA）可以通过网络将数据和问题提交给 Kaggle，任何顶尖科学家都可以提交问题解决方案，网站会通过对每位科学家的贡献进行排名。到目前为止，在一场竞赛中至少有 30000 人提交至少一种模型。</p>
</blockquote>
<p>简单来说就是一个数据科学竞赛网站，非常有趣。接下来让我们一起学习机器学习吧。</p>
<p>这次的任务是：<a href="https://www.kaggle.com/c/titanic" target="_blank" rel="noopener noreferrer">Titanic-Kaggle</a></p>
<p>我们的重点是学习机器学习的过程，所以这次不涉及具体的算法实现，而是使用第三方库来实现算法，这里推荐<a href="http://scikit-learn.org/stable/" target="_blank" rel="noopener noreferrer">scikit-learn</a>，它提供了许多工具和模型，使用起来非常方便。另外我们还是用了<a href="https://pandas.pydata.org/" target="_blank" rel="noopener noreferrer">Pandas</a>库(&nbsp;<code>pandas 是基于 Numpy 构建的含有更高级数据结构和工具的数据分析包</code>&nbsp;)来提高效率，还有<code>matplotlib</code>&nbsp;和&nbsp;<code>Seaborn</code>&nbsp;，通过图标直观的观察数据。</p>
<p>我们先写一段代码来看看原始数据吧。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>我们把training data 和 test data合并到了一起，因为在提取特征的时候，需要获取value的范围和分布。所以需要将他们合在一起处理。</li>
<li>Pandas合并data sets非常灵活，不会影响合并之前的原始数据，使用方便。</li>
</ul>
<p>输出如下，共有1309条数据，12个feature：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 数据预处理</h2>
<p>拿到数据第一步是观察一下数据，看看是否有缺失数据，分析一下相关特征等等。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到：</p>
<ol>
<li>Survived 的缺失可以忽略，因为<code>test.csv</code>中的数据本来就是没有Survived的。</li>
<li>Cabin 缺失很严重，我想可以忽略这一个特征了。</li>
<li>Age 缺失的并不多，而且Age是一个重要的特征，应该保留。</li>
</ol>
<p>再看看数据的内容吧：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先看看每个特征的含义：</p>
<ul>
<li>Age （年龄）</li>
<li>Cabin（客舱位置）</li>
<li>Embarked（港口编号）</li>
<li>Fare（票价）</li>
<li>Name（姓名）</li>
<li>Parch（父母/孩子的数量）</li>
<li>PassengerId</li>
<li>Pclass（客舱等级）</li>
<li>Sex（性别）</li>
<li>SibSp（配偶的数量）</li>
<li>Survived(存活与否)</li>
<li>Ticket（船票编号）</li>
</ul>
<p>直观的看，<code>PassengerId</code>，<code>Ticket</code>没什么用，先忽略他们。</p>
<h2> 处理缺失数据</h2>
<p>在数据中出现缺失或者错误的Value是很正常的事，一些预测模型可以很好的处理缺失数据&nbsp;<code>如神经网络(neural networks)</code>，有些则需要单独处理他们。我们使用随机森林(Random Forest)来做预测模型，它自身并不能对付缺失数据，所以需要单独进行处理。有两种方法：</p>
<ol>
<li>直接扔掉出现缺失Value的数据：只有少量的数据出现缺失Value的情况，这样做比较简单快捷。</li>
<li>给缺失的Value赋特殊值来表明它是缺失的：比较适用于分类变量，因为缺失Value就是不存在的数据，如果给他分配平均值之类的数值并没有什么意义。除非是某些潜在原因使某些缺失值会影响其与另外一个值的关联(correlation)。并且这种方法不适用于连续变量。不过对于二元变量(binary variables)，我们可以把他的缺失值赋为0，正常情况下True为1，False为-1。</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol>
<li>给缺失的Value赋平均值：这种简单的做法很普遍，对于不重要的特征来说用这种方法足矣。还可以结合其他变量来算平均值。对于分类变量，使用最常见的值或许比平均值更好。</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol>
<li>使用机器学习算法/模型来预测缺失数据：感觉只有数据量很大的情况下这样做才有效。</li>
</ol>
<h2> 变量转换</h2>
<p>变量转换的目的是将数据转换为模型适用的格式，不同方法实现的随机森林(Random Forest)接受不同类型的数据，Scikit-learn要求数据都是数字型<code>numeric</code>，所以我们要将原始数据转换为数字型<code>numeric</code>。</p>
<p>所有的数据可以分为两类：1.定性(Quantitative)变量可以以某种方式排序，Age就是一个很好的列子。2.定量(Qualitative)变量描述了物体的某一（不能被数学表示的）方面，Embarked就是一个例子。</p>
<h3> 定性(Qualitative)转换</h3>
<ol>
<li>Dummy Variables：就是类别变量或者二元变量，当qualitative variable是一些频繁出现的几个独立变量时，Dummy Variables比较适合使用。我们以Embarked为例，Embarked只包含三个值<code>'S','C','Q'</code>，我们可以使用下面的代码将其转换为dummies:</li>
<li>Factorizing：dummy不好处理Cabin（船舱号）这种标称属性，因为他出现的变量比较多。所以Pandas有一个方法叫做<code>factorize()</code>，它可以创建一些数字，来表示类别变量，对每一个类别映射一个ID，这种映射最后只生成一个特征，不像dummy那样生成多个特征。 下面的代码是对Cabin进行Factorizing：</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 定量(Quantitative)转换</h3>
<ol>
<li>
<p>Scaling Scaling可以将一个很大范围的数值映射到一个很小的范围(<code>通常是-1 - 1，或则是0 - 1</code>)，很多情况下我们需要将数值做Scaling使其范围大小一样，否则大范围数值特征将会由更高的权重。比如：Age的范围可能只是0-100，而income的范围可能是0-10000000，在某些对数组大小敏感的模型中会影响其结果。</p>
<p>下面的代码是对Age进行Scaling：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Binning inning通过观察“邻居”(即周围的值)来连续数据离散化。存储的值被分布到一些“桶”或箱中，就像直方图的bin将数据划分成几块一样。下面的代码对Fare进行Binning。</p>
</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 特征提取</h2>
<p>特征提取很重要的一个方面是深入理解数据，并且能提取出新的特征来做预测。机器学习的核心就是模型选取和参数选择，特征提取可以说是重中之重。</p>
<p>一个特征提取的例子是，从电话号码中提取中国家、地区、城市的信息，或者是从GPS中提取中国家、地区、城市的信息。只要能描述一个事物的qualitative变量，都有可能从中挖掘出有用的特征，另外，时序等信息也是非常有用的。</p>
<p>泰坦尼克号的这些数据非常简单，我们并不需要对数据做太多的处理，我们下面只对name，cabin和ticket提取一些变量。</p>
<p>举两个例子吧：</p>
<ol>
<li>
<p>Name 姓名这个特征本身来说没有什么用，但是我们可以从中提取出一个特征，<code>称呼</code>。</p>
<p>称呼，或许不同社会地位的人抢到逃生船的概率不同？代码如下：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Cabin 客舱信息包含了甲板和房间号，不同甲板位置不同，逃生船数量不同，人群年龄分布不同等等。不同房间号离甲板距离不同，离逃生船距离不同，等等。所以从客舱中提取中<code>甲板</code>和<code>房间号</code>这两个特征很重要。代码如下：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ol>
<h2> 开始处理</h2>
<p>前面理论说了那么多，还是实战看看吧，我们要预处理每一个特征。</p>
<h3> 首先是Age（年龄）</h3>
<p>Age（年龄）有263个缺失项，就简单地用平均值来填充，并看看填充前后的直方图：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/e1BIid.jpg" alt="e1BIid" tabindex="0" loading="lazy"><figcaption>e1BIid</figcaption></figure>
<p>可以看到经过平均值填充后，数据分布并不是很好。试试随机选取<code>平均值加减标准差</code>范围的数来改进，使数据更接近真实情况。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<p>![[Pasted image 20230217002600.png]]</p>
<p>感觉这样好多了。</p>
<p>接着，我们需要从年龄中提取一个特征出来，即：孩子。不是说ladies and kids first么？</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/eHiKsz.jpg" alt="eHiKsz" tabindex="0" loading="lazy"><figcaption>eHiKsz</figcaption></figure>
<p>孩子只有132人，却有着57%的生存率！看来是否是孩子，这一特征很重要。（数据支持，kids first，后面到Sex分析一下是不是ladies first）</p>
<p><strong><strong>Cabin（客舱位置）</strong></strong> 可以忽略</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong><strong>Embarked（港口编号）</strong></strong></p>
<p>Embarked（港口编号）只有2个缺失项，直接用最常见的值填充它，然后用图表看看其与Survived的关系：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/ICrD6R.jpg" alt="ICrD6R" tabindex="0" loading="lazy"><figcaption>ICrD6R</figcaption></figure>
<p>分别是不同Embarked（港口编号）的百分比、不同Embarked（港口编号）生存的数量、不同Embarked（港口编号）的生存率。Embarked（港口编号）特征只有三种取值，且S占70%以上，所以Embarked（港口编号）这个特征应该不要？</p>
<h3> Fare（票价）</h3>
<p>Fare（票价）只有1个缺失项,直接用平均值填充：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>绘图看看Fare（票价）与Survived的关系：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<p><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/rwPHr3.jpg" alt="rwPHr3" loading="lazy">
<img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/nrJ4Up.jpg" alt="nrJ4Up" loading="lazy"></p>
<p>可以看出票价集中在10左右，幸存的人的票价平均在48。</p>
<h3> Pclass（客舱等级）</h3>
<p>Pclass（客舱等级）考虑做Dummy Variables处理，使其生成更多的特征。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/1h3Dsf.jpg" alt="1h3Dsf" tabindex="0" loading="lazy"><figcaption>1h3Dsf</figcaption></figure>
<p>得到Pclass与Survived的关系，可以看出Pclass为3的生存率很低，我们试试把它的Dummy Variables去掉：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Sex（性别）</h3>
<p>老规矩，首先看看Sex与Survived的关系：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/YC3mXf.jpg" alt="YC3mXf" tabindex="0" loading="lazy"><figcaption>YC3mXf</figcaption></figure>
<p>果然是Ladies First呀！将Sex用数字表示:</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在除去之前已经drop的<code>PassengerId</code>,<code>Ticket</code>,<code>Cabin</code>,只剩下<code>Name</code>,<code>Parch</code>和<code>SibSp</code>了。</p>
<h3> Name（姓名），Parch（父母/孩子的数量），SibSp（配偶的数量）</h3>
<p>我们需要从这里面提取中他们是否有家人在船上这一特征，因为有家人意味着逃生过程中会有家人的帮助，生存率可能更高。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到:</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/88czBr.jpg" alt="88czBr" tabindex="0" loading="lazy"><figcaption>88czBr</figcaption></figure>
<p>可以看到，有家人在船上的人有更高的生存率；特征就处理到这里吧。</p>
<h2> 训练</h2>
<p>机器学习的模型很多，用于分类有：</p>
<ol>
<li>回归算法：Logistic Regression、 Ordinary Least Square等等。</li>
<li>决策树: CART、ID3、Random Forest等等。</li>
<li>贝叶斯：Navie Bayesian、BBN等等。</li>
<li>基于实例的算法：KNN、LVQ等等。</li>
<li>组合模型、关联规则、神经网络、深度学习等等。</li>
</ol>
<p>模型太多都看晕了，这种场景下选什么模型合适？因为我也不是很懂，所以大家可以自己查一下相关资料。在这里我选择了Random Forest和GBDT来试试。</p>
<p><strong>Random Forest:</strong></p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>GBDT:</strong></p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后在Kaggle提交，只有<code>0.74641</code>分。</p>
<h2> 调优</h2>
<p>再观察一下数据，看看还有那些特征可以用到，又去Google了一番，整理出三个新特征：称谓、家庭大小、姓。</p>
<p><strong>称谓:</strong> 不同的称谓意味着不同的社会地位、不同的社会地位的人对人生、事物的理解不同。并且不同的社会地位乘坐逃生舱的概率也不同？可能某一类人的生存概率更高？</p>
<p><strong>家庭大小:</strong> 一家七个人的逃生概率大还是一家两个人的逃生概率大呢？人多的家庭会不会更难逃生呢？</p>
<p><strong>姓:</strong> 其实姓这个特征是为了辅助家庭这个特征的，同一个姓是一个家庭的概率更大？</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之前的Age和Fare忘了做Scaling处理，也把它加上：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们看看目前这些特征的feature importance:</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/nwobWe.jpg" alt="nwobWe" tabindex="0" loading="lazy"><figcaption>nwobWe</figcaption></figure>
<p>我们可以把后两个不重要的特征删掉：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面是参数调优，Sklean提供了两种方法，GridSearch和RandomizedSearch。在这两种情况下，都可以指定每个参数的取值范围，创建一个字典。将参数字典提供给search方法，它就会执行模型所指定的值的组合。GridSearch会测试参数每一个可能的组合。 而RandomizedSearch需要指定有多少不同的组合要测试，然后随机选择并组合他们。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于我的机器太慢了，就忽略这一步了。</p>
<p>最后，我使用Random Forest, 加上参数max_depth=5 防止模型过拟合，并将n_estimators放到了30000，再次跑了提交Kaggle，这次得到了<code>0.8038</code>：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/l1DnAD.jpg" alt="Results" tabindex="0" loading="lazy"><figcaption>Results</figcaption></figure>
<h2> 验证：学习曲线</h2>
<p>最后我们用学习曲线(Learning Curves)验证一下该模型的准确率。</p>
<p>方法很简单，我们逐步增加training data，标出training score(模型是否overfit)和error rate(模型预测的结果是否正确)。即可。继续重复这个过程，选出200、300、400、500等等个数据作为training data，然后标出training score和error rate，得出一个曲线，即学习曲线(Learning Curves)。</p>
<p>下图是Professor Ng在coursea上<a href="https://www.coursera.org/course/ml" target="_blank" rel="noopener noreferrer">机器学习</a>课程的ppt截图，描述了四种基本的曲线形状：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/xs44iQ.jpg" alt="Learning Curves" tabindex="0" loading="lazy"><figcaption>Learning Curves</figcaption></figure>
<p>其中红线代表error rate，蓝线代表training score。</p>
<blockquote>
<p>1.左上角是最优情况，随着样本的增加，error rate和training score都降低。2.右上角是最差情况，模型几乎无法预测数据，重新调整参数吧。3.左下角是high variance的情况，模型不够稳定，不能很好的fit新数据。4.右下角是high bias的情况，模型无法预测出准确的结果。</p>
</blockquote>
<p>这里解释一下variance和bias的意思，引用<a href="http://orangeprince.info/" target="_blank" rel="noopener noreferrer">@Orangeprince</a>的形象解释：</p>
<blockquote>
<p>首先 Error = Bias + Variance，Error反映的是整个模型的准确度，Bias反映的是模型在样本上的输出与真实值之间的误差，即模型本身的精准度，Variance反映的是模型每一次输出结果与模型输出期望之间的误差，即模型的稳定性。举一个例子，一次打靶实验，目标是为了打到10环，但是实际上只打到了7环，那么这里面的Error就是3。具体分析打到7环的原因，可能有两方面：一是瞄准出了问题，比如实际上射击瞄准的是9环而不是10环；二是枪本身的稳定性有问题，虽然瞄准的是9环，但是只打到了7环。那么在上面一次射击实验中，Bias就是1,反应的是模型期望与真实目标的差距，而在这次试验中，由于Variance所带来的误差就是2，即虽然瞄准的是9环，但由于本身模型缺乏稳定性，造成了实际结果与模型期望之间的差距。</p>
</blockquote>
<p>High variance，low bias意味着”overfitting”，模型过拟合导致不能很好的用于新数据。而High bias，low variance意味着”underfitting”，模型欠拟合导致不能很好从样本中学习，很难去预测新数据。Bias与Variance往往是不能兼得的。如果要降低模型的Bias，就一定程度上会提高模型的Variance，反之亦然。</p>
<p>例如，如果模型存在high variance，一个常见的解决方法是给他增加更多的特征。但是这样也会增加bias，这中间的平衡需要仔细考虑。后面的链接提供了一些解决这类问题的方法。</p>
<p>下面我们看看在scikit-learn中如何实现：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们得到：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/K5fsQU.jpg" alt="Learning Curves Result" tabindex="0" loading="lazy"><figcaption>Learning Curves Result</figcaption></figure>
<h2> 总结</h2>
<p>还有许多可以优化的地方，通过实战才能发现学习中不足的地方。</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/e1BIid.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>阅读学习工作流</title>
      <link>https://mars.run/km/%E9%98%85%E8%AF%BB%E5%AD%A6%E4%B9%A0%E5%B7%A5%E4%BD%9C%E6%B5%81.html</link>
      <guid>https://mars.run/km/%E9%98%85%E8%AF%BB%E5%AD%A6%E4%B9%A0%E5%B7%A5%E4%BD%9C%E6%B5%81.html</guid>
      <source url="https://mars.run/rss.xml">阅读学习工作流</source>
      <description>前言 大多数人会对自己的记忆力过分高估。这个幻觉来自每时每刻都有一些确实可以记得住的东西，而记不住的东西恰恰则因为没有被记住所以看上去“并不存在”。换言之，每时每刻都有“我记得住”的证据，而“我记不住”的证据基本上难觅其踪。这也就是为什么总有那么多人真诚地相信自己考试成绩差是因为“没发挥好”。 相信自己的记忆力比自己估计得差（甚至差很多）是一个去除这一幻觉的行之有效的方法，因为只有相信这个事实，才能够在倾听的时候有意识地为了真正记住而反复（认真）回顾。在一些重要场合（课堂、会议等），也会因此真诚地借助辅助工具（笔记、照片、录音等）来帮助记忆。很多人从小就对老师“一定要记笔记”的建议置若罔闻，准确地讲，这种行为并非出自对老师的忽视或者鄙视，而是出自对自己记忆力“幻觉”的信任。 ——《把时间当作朋友》</description>
      <category>知识管理</category>
      <pubDate>Mon, 08 Nov 2021 12:09:49 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 前言</h2>
<blockquote>
<p>大多数人会对自己的记忆力过分高估。这个幻觉来自每时每刻都有一些确实可以记得住的东西，而记不住的东西恰恰则因为没有被记住所以看上去“并不存在”。换言之，每时每刻都有“我记得住”的证据，而“我记不住”的证据基本上难觅其踪。这也就是为什么总有那么多人真诚地相信自己考试成绩差是因为“没发挥好”。
相信自己的记忆力比自己估计得差（甚至差很多）是一个去除这一幻觉的行之有效的方法，因为只有相信这个事实，才能够在倾听的时候有意识地为了真正记住而反复（认真）回顾。在一些重要场合（课堂、会议等），也会因此真诚地借助辅助工具（笔记、照片、录音等）来帮助记忆。很多人从小就对老师“一定要记笔记”的建议置若罔闻，准确地讲，这种行为并非出自对老师的忽视或者鄙视，而是出自对自己记忆力“幻觉”的信任。</p>
<p>——《把时间当作朋友》</p>
</blockquote>
<p>From <a href="https://github.com/xiaolai/time-as-a-friend/blob/master/Chapter6.md" target="_blank" rel="noopener noreferrer">time-as-a-friend/Chapter6.md at master · xiaolai/time-as-a-friend</a></p>
<p>每天我都会在碎片化的时间听到、看到、读到各种信息，而绝大部分内容却成为过眼烟云，唯一的收获便是让我产生学到了很多东西的幻觉。即使把这些信息存入笔记软件，也会陷入「收藏即学习」的陷阱，绝大部分知识收藏的内容收藏之后，再也没有打开。</p>
<blockquote>
<p>「收藏即学习」的陷阱可以尝试使用费曼学习法来破局，建立正向反馈机制，实现从收藏者到创作者的转变。</p>
</blockquote>
<p>为了解决前面提到的困境，我读了很多关于个人知识管理有关的书籍和文章，结合自己的需求，创建了自己的阅读学习工作流。</p>
<h2> 整体流程</h2>
<p>工作流包括三个模块：<strong>获取信息、阅读信息和整理输出</strong>，利用输入强化输出，输出倒逼输入，践行<a href="https://www.liaolijun.com/feynman-technique/" target="_blank" rel="noopener noreferrer">费曼学习法</a>，其中每个模块附上了我常用的工具，供参考。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/TBhwNH.jpg" alt="Created by draw.io" tabindex="0" loading="lazy"><figcaption>Created by <a href="http://draw.io" target="_blank" rel="noopener noreferrer">draw.io</a></figcaption></figure>
<h3> 获取信息</h3>
<table>
<thead>
<tr>
<th>类型</th>
<th>获取周期</th>
<th>订阅工具</th>
<th>存储工具</th>
<th>推荐阅读</th>
</tr>
</thead>
<tbody>
<tr>
<td>RSS</td>
<td>每日</td>
<td>Feedly</td>
<td>Notion</td>
<td><a href="https://sspai.com/post/59501" target="_blank" rel="noopener noreferrer">不那么完美的 RSS 订阅方案 — feedly + RSSHub</a></td>
</tr>
<tr>
<td>Newsletter</td>
<td>每周</td>
<td>Matter</td>
<td>Notion</td>
<td><a href="https://sspai.com/post/68585" target="_blank" rel="noopener noreferrer">试用 iOS 上的阅读应用 Matter</a></td>
</tr>
<tr>
<td>Podcast</td>
<td>每周</td>
<td>Spotify</td>
<td>Siyuan</td>
<td><a href="https://epic-tv.com/events/blog/the-rise-of-podcasts-and-what-spotify-has-to-do-with-it/#:~:text=Spotify%20uses%20podcasting%20to%20help,series%20that%20ran%20throughout%202018." target="_blank" rel="noopener noreferrer">THE RISE OF PODCASTS AND WHAT SPOTIFY HAS TO DO WITH IT</a></td>
</tr>
<tr>
<td>书籍</td>
<td>每周</td>
<td>人肉</td>
<td>Siyuan</td>
<td><a href="https://zhuanlan.zhihu.com/p/399935581" target="_blank" rel="noopener noreferrer">“无离线不笔记”为什么我要选择思源笔记？</a></td>
</tr>
<tr>
<td>公众号</td>
<td>碎片时间</td>
<td>微信</td>
<td>简约, Notion</td>
<td><a href="/3f1e9e5c14b24df69aa9c3b3334381f1">建立强大的 Notion 数据库，从了解函数开始</a></td>
</tr>
<tr>
<td>Twitter</td>
<td>碎片时间</td>
<td>Twitter</td>
<td>简约, Notion</td>
<td>N/A</td>
</tr>
<tr>
<td>网页</td>
<td>碎片时间</td>
<td>Google</td>
<td>简约, Notion</td>
<td><a href="https://sspai.com/post/61996" target="_blank" rel="noopener noreferrer">阅读模式 + 标注系统 + 稍后读，简悦 2.0 想成为你的知识管理解决方案</a></td>
</tr>
<tr>
<td>灵机一动</td>
<td>碎片时间</td>
<td>Flomo</td>
<td>Flomo, Notion, Siyuan</td>
<td><a href="https://sspai.com/post/64009" target="_blank" rel="noopener noreferrer">flomo 浮墨笔记的背后，藏着什么样的理念</a></td>
</tr>
</tbody>
</table>
<p>在获取信息阶段，相关的数据源就不赘述了，重点讲讲几个工具：</p>
<ol>
<li>Feedly
主流的RSS订阅软件使用起来差别不大，选择自己顺手的就行。</li>
<li>Matter
可以使用Matter提供的邮箱来订阅Newsletter，在移动端用户体验还不错。</li>
<li>Spotify
为了听墙外的podcast节目，且大部分的podcast都会在Spotify分发。（Spotify国内可以正常使用）</li>
<li>Flomo
软件功能简单，输入摩擦很小，设计让人有动力开始记录，也非常钦佩创始人<a href="https://www.notion.so/Plidezus-ff9bdac2b40e4ad2be23192a8c43f5fd" target="_blank" rel="noopener noreferrer">少楠</a>。</li>
</ol>
<h3> 阅读和笔记</h3>
<p>在这个阶段，我以Siyuan (思源笔记)为核心，对各种信息进行阅读、学习、整理，采用<strong>Zettelkasten卡片盒笔记法</strong>（<a href="https://sspai.com/post/60802" target="_blank" rel="noopener noreferrer">可以参考这篇文章</a>）来对知识点进行卡片化和相互连接，在daily note中写自由写作（而无需关心笔记分类），结合双链的方式让笔记自然生长。</p>
<p>在阅读的过程中，批注是很自然的事，<strong>简悦</strong>的主打功能**”阅读模式 + 剪藏 + 标注“**很好的实现了这一点，真正提升了网页阅读的效能，可以说是生产力工具。</p>
<p>将<strong>简悦</strong>剪藏的网页+标注通过API自动导入<strong>Notion</strong>后，在写作/使用时，就能在<strong>Notion</strong>使用全局搜索，快速找到所需要的资料。（Pocket/Instapper还需要开通会员才能全文检索）</p>
<p>这个时候我使用的工具如下：</p>
<ol>
<li>
<p>Notion</p>
<p>核心优势是强大的Database功能，非常适合做数据的整理、统计和关联等功能，同时也支持页面分享和多人协作，本站其实就是Notion分享的Page；但数据存在云端，对数据安全有疑虑的同学不建议使用。</p>
</li>
<li>
<p>Siyuan (思源笔记)</p>
<p>双链笔记软件非常多，我也体验过近两年火爆的Roam research、Obsidian和Logseg之类的笔记软件，最终选择思源笔记的原因有两个：一、大纲+Block的写作方式更加自由。二、本地化社区支持，开发者<a href="https://github.com/88250" target="_blank" rel="noopener noreferrer">D</a>和<a href="https://github.com/Vanessa219" target="_blank" rel="noopener noreferrer">V</a>会经常答疑。三、数据本地存储更加安全，云端存储可端到端加密。</p>
</li>
<li>
<p>简悦</p>
<p>沉浸式阅读体验，强大的划词批注功能，还能打通其他生产力工具（如Notion）。</p>
</li>
</ol>
<h3> 整理输出</h3>
<p>我会使用Siyuan (思源笔记) 完成最终的输出过程，并将完成的文章整理到Notion，在Notion强大的Database功能加持下，在Notion做知识整理体验非常愉悦；可以体验下少楠的<a href="https://pmthinking.com" target="_blank" rel="noopener noreferrer">产品沉思录</a>。</p>
<h2> 最后</h2>
<p>引用工作流的祛魅：从工具、阅读到写作](<a href="https://sspai.com/post/71658" target="_blank" rel="noopener noreferrer">https://sspai.com/post/71658</a>)中写到的内容作为结尾：</p>
<p>第一，在工作流中，<strong>实践先行，理念优先于工具</strong>。不过，关于工作流纯理念性的论述力有不逮，整篇文章依然主要围绕工具和技术加以展开。另外，高效率的工作流设计和运行还会涉及<strong>注意力管理、时间管理或者精力管理</strong>等维度，这些内容也是需要加以进一步考虑的。</p>
<p>第二，<strong>可能会过于拔高工作流的重要性</strong>。如果使用场景比较单一，需要一个人集中精力完成单个简单项目的时候，那么先行动起来更好，不需要刻意在意工作流。如果处理工作流的精力成本超过了工作本身，那么先停止折腾工作流，在工作实践中你会逐步加深对于自己工作流的认知。</p>
<p>第三，一个合适的工作流对于个人和团队而言自然重要，然而同时也<strong>需要注意到工作流是一种中微观的战术策略。在工作流之外，也需要使用一些更为宏观的战略方案加以支撑</strong>。比如，个体需要及时更新思维方式，企业需要建立合适的组织架构。</p>
<p>第四，这条<strong>通往效率生活之路并没有止境</strong>，理想的效率与生活本身处于<strong>动态平衡</strong>之中。偶尔休息，回头看看甚至退几步也未尝不是好事。</p>
<p>共勉。</p>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/TBhwNH.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>WordPress 3.8.2 cookie伪造漏洞及Python使用urllib2出现30x跳转的问题</title>
      <link>https://mars.run/cybersecurity/WordPress%203.8.2%20cookie%E4%BC%AA%E9%80%A0%E6%BC%8F%E6%B4%9E%E5%8F%8APython%E4%BD%BF%E7%94%A8urllib2%E5%87%BA%E7%8E%B030x%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%97%AE%E9%A2%98.html</link>
      <guid>https://mars.run/cybersecurity/WordPress%203.8.2%20cookie%E4%BC%AA%E9%80%A0%E6%BC%8F%E6%B4%9E%E5%8F%8APython%E4%BD%BF%E7%94%A8urllib2%E5%87%BA%E7%8E%B030x%E8%B7%B3%E8%BD%AC%E7%9A%84%E9%97%AE%E9%A2%98.html</guid>
      <source url="https://mars.run/rss.xml">WordPress 3.8.2 cookie伪造漏洞及Python使用urllib2出现30x跳转的问题</source>
      <description>背景 首先看这篇文章：WordPress 3.8.2 cookie伪造漏洞再分析 http://drops.wooyun.org/papers/1409 推荐阅读： The dangers of type coercion and remote management plugins</description>
      <category>网络安全</category>
      <pubDate>Sat, 10 May 2014 15:19:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 背景</h2>
<p>首先看这篇文章：WordPress 3.8.2 cookie伪造漏洞再分析 <a href="http://drops.wooyun.org/papers/1409" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/papers/1409</a></p>
<p>推荐阅读：</p>
<p><a href="http://joncave.co.uk/2013/03/dangers-of-type-coercion-and-remote-management/" target="_blank" rel="noopener noreferrer">The dangers of type coercion and remote management plugins</a></p>
<p>WordPress 3.8.2修复的一个重要漏洞是cookie伪造漏洞&nbsp;<a href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0166" target="_blank" rel="noopener noreferrer">(CVE-2014-0166)</a>。该漏洞可以被攻击者利用通过伪造身份验证Cookie，登陆网站。</p>
<h2> 利用</h2>
<p>具体的原理请看上面这篇文章，这里就不多重复了。</p>
<p>也就是说，我们只要把cookies设置成 “admin|$expiration|0”,就可以登陆后台了。</p>
<p>思路是：</p>
<ul>
<li>1.尝试$expiration构造Cookie</li>
<li>2.GET请求到<a href="http://www.example.com/wp-admin/profile.php" target="_blank" rel="noopener noreferrer">http://www.example.com/wp-admin/profile.php</a>,根据返回的http header判断是否跳转,如为200则成功</li>
<li>3.多线程,有条件使用多机器</li>
</ul>
<h2> 题外话</h2>
<p>在写利用脚本的时候发现，python的urllib2.urlopen会遇到301/302自动跳转的问题，这样无法判断出http状态码是否是302。来分析看看为什么吧。😃</p>
<p>打开urllib2源码，刚开头就看到了相关文档：</p>
<p><code>The HTTPRedirectHandler automatically deals with HTTP 301, 302, 303 and 307 redirect errors.</code></p>
<p>仔细阅读源码看一下调用过程：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里我想已经够清楚了(执行到了我们之前在文档看到的HTTPRedirectHandler)，最后的redirect_request：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以GET遇到状态码（301, 302, 303, 307）时会Request跳转到新的地址，所以我们无法获取这些状态码(没有保存下来)。</p>
<p>我们需要自己写一个hander来重写30x方法处理这种情况，保存状态码。代码如下：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，就可以正常返回301/302状态码。</p>
<p>另外，WordPress 3.8.2补丁分析 HMAC timing attack&nbsp;<a href="http://drops.wooyun.org/papers/1404" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/papers/1404</a>&nbsp;思路确实很赞。</p>
]]></content:encoded>
    </item>
    <item>
      <title>网络安全事件汇总</title>
      <link>https://mars.run/cybersecurity/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E6%B1%87%E6%80%BB.html</link>
      <guid>https://mars.run/cybersecurity/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%BA%8B%E4%BB%B6%E6%B1%87%E6%80%BB.html</guid>
      <source url="https://mars.run/rss.xml">网络安全事件汇总</source>
      <description>tbc</description>
      <category>网络安全</category>
      <pubDate>Wed, 18 May 2022 00:00:10 GMT</pubDate>
      <content:encoded><![CDATA[<p>tbc</p>
]]></content:encoded>
    </item>
    <item>
      <title>安全数据可视化</title>
      <link>https://mars.run/cybersecurity/%E5%AE%89%E5%85%A8%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.html</link>
      <guid>https://mars.run/cybersecurity/%E5%AE%89%E5%85%A8%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96.html</guid>
      <source url="https://mars.run/rss.xml">安全数据可视化</source>
      <description>概述 数据可视化主要旨在借助于图形化手段，清晰有效地传达与沟通信息。随着大数据，机器学习，EDA的发展，数据可视化变得越来越重要。在大量的数据面前，传统方法也无能为力，使用可视化的方法可以快速直观地分析/展示数据。 为什么要可视化数据？ Discovery：用于探索、观察数据，将数据转换为知识。通过视觉展示，能够给人们一些新的观察视角，以便思考、发现这些数据所包含的知识。 Understanding：通过可视化，可能会发现一些传统统计学方法/数理知识无法发现的模式/规律/关联，使得研究人员更好地使用这些数据。 Informed decisions：快速、准确地将数据所包含的信息传递给读者，在损失一些细节的同时，在几秒钟的时间内将信息传递出去。</description>
      <category>网络安全</category>
      <pubDate>Sun, 19 Jun 2016 22:00:10 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 概述</h2>
<p>数据可视化主要旨在借助于图形化手段，清晰有效地传达与沟通信息。随着大数据，机器学习，EDA的发展，数据可视化变得越来越重要。在大量的数据面前，传统方法也无能为力，使用可视化的方法可以快速直观地分析/展示数据。</p>
<h2> 为什么要可视化数据？</h2>
<ol>
<li>Discovery：用于探索、观察数据，将数据转换为知识。通过视觉展示，能够给人们一些新的观察视角，以便思考、发现这些数据所包含的知识。</li>
<li>Understanding：通过可视化，可能会发现一些传统统计学方法/数理知识无法发现的模式/规律/关联，使得研究人员更好地使用这些数据。</li>
<li>Informed decisions：快速、准确地将数据所包含的信息传递给读者，在损失一些细节的同时，在几秒钟的时间内将信息传递出去。</li>
</ol>
<p>引用<a href="https://weibo.com/u/3181671860" target="_blank" rel="noopener noreferrer">宫一鸣</a>说的：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/QloZrX.jpg" alt="宫一鸣微博" tabindex="0" loading="lazy"><figcaption>宫一鸣微博</figcaption></figure>
<p>《Data-Driven Security: Analysis.Visualization and Dashboards》一书描述了通过了解人类视觉信息系统的运作，来帮助我们创造出优秀数据可视化：视觉信息通过眼睛，从光转化成电信号，这些信息经过<strong>视觉记忆(visual memory)<strong>的若干阶段，每个阶段都有特定的强度、限制以及功能。在我们能够意识到这些信息之前，大脑会快速地扫描视觉区域，这就是</strong>前注意处理(preattentive processing)</strong>。最后，大脑会让眼睛进行一系列的**扫视运动(saccadic movement)，**我们会聚焦在不同的特征上面，来帮助大脑建立视觉画面。</p>
<h3> 视觉记忆</h3>
<ul>
<li>图像记忆：视觉信息在这里进行十分短暂的停留。这是人们对视觉信息的第一印象，可以通过颜色、形状和其他线条来抓住观众的注意力以及传递一些数据的基本属性信息。</li>
<li>工作记忆：在这个阶段，根据任务和对象不同，大脑仅可以容纳三到五个对象，所以在展示数据的时候，应该限制每个视觉效果内部超过五个对象。</li>
<li>长期记忆：能够保持几天到几年的记忆，短期记忆是神经连接的暂时性强化，生理上的结构是反响回路（reverberatory circuit），而通过巩固后、可变为长期记忆。</li>
</ul>
<h3> 前注意处理</h3>
<p>平时我们在记笔记，画脑图的时候就不知不觉的运用了前注意处理的特点了，即画重点，分类标记等等。前注意处理可以很好地智能分组和聚集重要信息，通过强化部分视觉属性，可以轻松做的这一点，如：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/c4Eznn.jpg" alt="c4Eznn" tabindex="0" loading="lazy"><figcaption>c4Eznn</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/sphQ3z.jpg" alt="sphQ3z" tabindex="0" loading="lazy"><figcaption>sphQ3z</figcaption></figure>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/8F3g1w.jpg" alt="8F3g1w" tabindex="0" loading="lazy"><figcaption>8F3g1w</figcaption></figure>
<h2> <strong><strong>扫视运动</strong></strong></h2>
<p>人们在观察事物的时候，眼球会快速地各处移动，通过一系列的观察来建立整个图像。在我们观察一个可视化图像的时候也会这样，人的眼睛会注视在有明显特征的区域，然后在重要的点之间来回跳动，因此我们应该：</p>
<ul>
<li>不要在仪表盘上过多地展示视觉特征</li>
<li>赋予重要信息更明显的视觉特征</li>
<li>限制扫视运动耗费的时间</li>
</ul>
<h2> 可视化分析</h2>
<h3> 相关知识</h3>
<ul>
<li>统计学知识：很多数据都是数值型(numeric)的，因此均值、中值、方差、标准差、正态分布、蒙特·卡罗方法等等这些东西很有用。</li>
<li>可视化知识：美学及可视化方法的选择。</li>
<li>安全知识：识别误报、安全事件、安全事故等等。</li>
</ul>
<h3> 思考目标</h3>
<p>目标驱动而不是数据驱动。要清楚可视化这些数据的目标是什么，是分析数据找出规律/异常？还是直观的展示数据？还是其他用途？</p>
<h2> 数据预处理</h2>
<ul>
<li>数据清理：清洗脏数据</li>
<li>数据集成：将多文件或者多数据库中的异构数据进行合并，然后存放在一个一致的数据存储中。考虑以下几个问题： 1.模式匹配 2.数据冗余 3.数据值冲突</li>
<li>数据变换：1.平滑 2.聚集 3.数据概化 4.规范化：(1)最小-最大规范化 (2)零-均值规范化 (3)小数定标规范化 5.属性构造</li>
<li>数据规约：数据过大的情况下，使用数据归约技术获得比原始数据小的多的，但不破坏数据完整性的数据集，该数据集可以得到与原始数据相同的结果</li>
</ul>
<p>通过可视化手段，我们可以：</p>
<ol>
<li>综合信息，从海量、动态、模糊、矛盾的数据中获取深入的了解。</li>
<li>从可视化中得出意想不到的结论、证实猜想。</li>
<li>实时地将数据转换为有用的知识。</li>
</ol>
<p>可视化在数据挖掘中也非常重要，他是连接从数据升华到知识这个过程的桥梁，快速直观地发现数据中存在的规则，特性，走势等等，辅助数据分析及建模过程。前面的<a href="http://mars.run/2015/11/Machine%20learning%20kaggle%20titanic-0.8/" target="_blank" rel="noopener noreferrer">机器学习实战之Kaggle_Titanic预测</a>就大量使用了可视化技术来辅助分析。</p>
<p>下图是可视化分析概览：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/dUD5Sp.jpg" alt="概览" tabindex="0" loading="lazy"><figcaption>概览</figcaption></figure>
<h2> 常见应用</h2>
<table>
<thead>
<tr>
<th>分析</th>
<th>数据名称</th>
<th>数据源示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>流量监控</td>
<td>网络数据包日志</td>
<td>Tcpdump,Wireshark</td>
</tr>
<tr>
<td></td>
<td>网络数据包日志</td>
<td>CiscoNetFlow</td>
</tr>
<tr>
<td>状态监控</td>
<td>状态监控日志</td>
<td>BigBrother,vSphere</td>
</tr>
<tr>
<td>事件监控</td>
<td>IDS/IPS日志</td>
<td>Snort，Bro</td>
</tr>
<tr>
<td></td>
<td>防火墙日志</td>
<td>Cisco，Checkpoint</td>
</tr>
<tr>
<td></td>
<td>网络应用操作日志</td>
<td>Apache，Nginx，Exchange，DNS</td>
</tr>
<tr>
<td></td>
<td>漏洞扫描与监控日志</td>
<td>Fortify，Nessus，Zabbix</td>
</tr>
<tr>
<td>其他日志</td>
<td>数据库日志，系统日志等等</td>
<td></td>
</tr>
</tbody>
</table>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/tfEAXK.jpg" alt="常见应用" tabindex="0" loading="lazy"><figcaption>常见应用</figcaption></figure>
<h2> 参考资料</h2>
<ol>
<li><a href="http://www.cqvip.com/read/read.aspx?id=27784761" target="_blank" rel="noopener noreferrer">网络安全可视化研究综述</a></li>
<li><a href="https://item.jd.com/11771405.html" target="_blank" rel="noopener noreferrer">数据驱动安全：数据安全分析、可视化和仪表盘</a></li>
<li><a href="https://www.perceptualedge.com/blog/?p=1897" target="_blank" rel="noopener noreferrer">Visual Business Intelligence</a></li>
</ol>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/QloZrX.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>N-gram在安全领域的应用</title>
      <link>https://mars.run/cybersecurity/N-gram%E5%9C%A8%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8.html</link>
      <guid>https://mars.run/cybersecurity/N-gram%E5%9C%A8%E5%AE%89%E5%85%A8%E9%A2%86%E5%9F%9F%E7%9A%84%E5%BA%94%E7%94%A8.html</guid>
      <source url="https://mars.run/rss.xml">N-gram在安全领域的应用</source>
      <description>什么是N-Gram？ N-Gram是一种在自然语言处理(NLP)中常用的一种概率语言模型(Probabilistic Language Model)，常用于语音\手写识别、机器翻译、拼写纠错等等领域。 它的本质就是计算一个句子或者一连串词出现的概率。 /* T 是由 W1,W2,W3,W4,W5 ... Wn组成的一个句子。 */ P(T) = P(W1,W2,W3,W4,W5 ... Wn) //这个句子出现的概率是里面每一个词出现的概率的叠加。 P(W5|W1,W2,W3,W4) //已经出现第1个至第4个的词的情况下，第5个词出现的概率。</description>
      <category>网络安全</category>
      <pubDate>Sun, 19 Jun 2016 22:00:10 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 什么是N-Gram？</h2>
<p>N-Gram是一种在自然语言处理(NLP)中常用的一种概率语言模型(Probabilistic Language Model)，常用于语音\手写识别、机器翻译、拼写纠错等等领域。</p>
<p>它的本质就是计算一个句子或者一连串词出现的概率。</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/r9iFeU.jpg" alt="Google" tabindex="0" loading="lazy"><figcaption>Google</figcaption></figure>
<p>I am working 后面很有可能出现<code>at</code>,&nbsp;<code>in</code>,&nbsp;<code>for</code>&nbsp;，而不是<code>refrigerator</code>,&nbsp;<code>throw</code>,&nbsp;<code>gull</code>。那么如何计算N-Grams呢？我们可以使用链式法则(<a href="https://en.wikipedia.org/wiki/Chain_rule_(probability)" target="_blank" rel="noopener noreferrer">Chain Rule</a>)，求多个关联事件并存时的概率：</p>
<ul>
<li>2个事件同时发生的概率：<strong>P(a, b) = P(a | b) * P(b)</strong></li>
<li>3个事件的概率链式调用：<strong>P(a, b, c) = P(a | b, c) * P(b, c) = P(a | b, c) * P(b | c) * P(c)</strong></li>
<li>推广到N个事件，概率链式法则为：<strong>P(X1, X2, ... Xn) = P(X1 | X2, X3 ... Xn) * P(X2 | X3, X4 ... Xn) ... P(Xn-1 | Xn) * P(Xn)</strong></li>
</ul>
<p>但是这样会有两个问题：</p>
<ol>
<li>参数空间过大，不可能实用化。（N越大越难计算）</li>
<li>数据稀疏严重，语言有各种各样的组合，数据量太大，无法获取这么全的数据。</li>
</ol>
<p>所以为了简化这个问题，我们引入马尔科夫假设（Markov Assumption）：”一个词的出现仅仅依赖于它前面出现的一个或者有限的几个词。”</p>
<ol>
<li>如果一个词的出现仅仅依赖于它本身，我们称之为 Uni-gram model :&nbsp;<code>P(T) = P(W1)P(W2)...P(Wn)</code></li>
<li>如果一个词的出现仅仅依赖于它前面出现的一个词，我们称之为 Bi-gram model :&nbsp;<code>P(T) = P(W1)P(W2|W1)P(W3|W2)...P(Wn|Wn-1)</code></li>
<li>如果一个词的出现仅仅依赖于它前面出现的两个词，我们称之为 Tri-gram model :&nbsp;<code>P(T) = P(W1)P(W3|W1,W2)...P(Wn|Wn-2,Wn-1)</code></li>
<li>依次类推到仅依赖于它前面出现的N个词，还有4-gram, 5-gram。</li>
</ol>
<p>下面用Bi-gram举个例子，语料库来自&nbsp;<a href="http://www1.icsi.berkeley.edu/Speech/berp.html" target="_blank" rel="noopener noreferrer">[Berkeley Restaurant Project]</a>&nbsp;，总词数为 10132。</p>
<p>词和词频率：</p>
<table>
<thead>
<tr>
<th>i</th>
<th>want</th>
<th>to</th>
<th>eat</th>
<th>chinese</th>
<th>food</th>
<th>lunch</th>
<th>spend</th>
</tr>
</thead>
<tbody>
<tr>
<td>2533</td>
<td>927</td>
<td>2417</td>
<td>746</td>
<td>158</td>
<td>1093</td>
<td>341</td>
<td>278</td>
</tr>
</tbody>
</table>
<p>词序列频率：</p>
<table>
<thead>
<tr>
<th>*</th>
<th>i</th>
<th>want</th>
<th>to</th>
<th>eat</th>
<th>chinese</th>
<th>food</th>
<th>lunch</th>
<th>spend</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>5</td>
<td>827</td>
<td>0</td>
<td>9</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>2</td>
</tr>
<tr>
<td>want</td>
<td>2</td>
<td>0</td>
<td>608</td>
<td>1</td>
<td>6</td>
<td>6</td>
<td>5</td>
<td>1</td>
</tr>
<tr>
<td>to</td>
<td>2</td>
<td>0</td>
<td>4</td>
<td>686</td>
<td>2</td>
<td>0</td>
<td>6</td>
<td>211</td>
</tr>
<tr>
<td>eat</td>
<td>0</td>
<td>0</td>
<td>2</td>
<td>0</td>
<td>16</td>
<td>2</td>
<td>42</td>
<td>0</td>
</tr>
<tr>
<td>chinese</td>
<td>1</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>82</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>food</td>
<td>15</td>
<td>0</td>
<td>15</td>
<td>0</td>
<td>1</td>
<td>4</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>lunch</td>
<td>2</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>0</td>
</tr>
<tr>
<td>spend</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>9</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>根据上表我们可以直观的看出，在这八个词的组合中，概率最高的句子是： i want to eat lunch 。它的概率是 P(i want to eat lunch) = P(i)P(want|i)P(to|want)P(eat|to)P(lunch|eat) = 2533/10132&nbsp;* <em>827/2533</em>&nbsp;* 608/927&nbsp;* <em>686/2417</em>&nbsp;* 42/746 = 0.25&nbsp;* <em>0.326</em>&nbsp;* 0.656&nbsp;* <em>0.284</em>&nbsp;* 0.056 = 0.00085</p>
<h3> Smoothing</h3>
<p>随着N-Grams的N的增大，N-Grams的数量对越来越多。如果词表中有10000个词，Bi-Gram模型可能产生100000000个N-Gram，Tri-Gram模型则可能产生1000000000000个N-Gram，那么会出现(unseen events)，词库中的某些词在训练样本中没有的情况（比如<code>in</code>在训练样本中没有出现在<code>turn</code>
后面）。为了避免在这种情况下概率为0，我们使用Smoothing来解决。</p>
<ol>
<li>
<p>add-1 smoothing : 很简单，给所有统计的counts加 1 。</p>
</li>
<li>
<p>add-k smoothing : 将高概率分到unseen events，在计算概率的时候，选择一个合适的k值。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/MEKSo5.jpg" alt="add-k" tabindex="0" loading="lazy"><figcaption>add-k</figcaption></figure>
</li>
<li>
<p>backoff ： 如果Tri-gram统计为0，就去看Bi-gram，以此类推。</p>
</li>
<li>
<p>interpolation : 以权重，将Tri-gram，Bi-gram，Uni-gram综合起来。（举例）</p>
</li>
<li>
<p>kneser-ney smoothing : 以地位向高位，或者高位向地位的方向，传递高频。</p>
</li>
</ol>
<h2> 使用Python生成N-grams</h2>
<p>简单的实现：</p>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> NIDS中的应用</h2>
<h3> 案例一</h3>
<p>Ke Wang 和 Salvatore J. Stolfo 在《Anomalous Payload-based Network Intrusion Detection 》中提出了一种基于1-Gram的方法，将数据包以端口分类，相同端口的数据包再以不同的长度分类，然后计算出ASCII字符0-255的平均分布频率，作为一个特征，加上平均分布频率的平均值，方差，标准差作为另一个特征。有了这两个特征，就可以在异常检测中建立模型，完成任务。如下图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/qvrUtF.jpg" alt="案例一" tabindex="0" loading="lazy"><figcaption>案例一</figcaption></figure>
<p>整个思路是：是训练阶段，算出不同端口/长度数据包的平均字节概率分布模型(平均值，方差，标准差)，预测阶段，算出新数据包的字节概率分布模型，使用马氏距离(Mahalanobis distance)，比较两个模型的差异，当差异超过某个阈值的时候，则检测出异常。还加上了增量学习(Incremental learning)使整个模型随着新数据的到来，不断的更新自己的参数(平均值，方差，标准差)，”淘汰”旧数据，”更新”新数据。</p>
<p>文中还提到了一种实现签名检测的方法：将字节的平均概率分布图，把频率从高到低进行重排序。这样得出的分布图很像Zipf-like分布(指数函数/幂函数少数值频繁出现，多数值偶尔出现。通俗地讲，就是二八原则：80%的财富集中在20%的人手中……80%的用户只使用20%的功能……20%的用户贡献了80%的访问量……)，这样用很小的长度就表示了整个ASCII范围的平均概率分布。比如下图，重排序后只用83个unique 的字符就表示了整个平均概率分布。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/frPmAf.jpg" alt="案例一" tabindex="0" loading="lazy"><figcaption>案例一</figcaption></figure>
<p>通过这种方法将已识别/确认的异常数据包做成签名(signature)，可以快速准确地检测其他地方可能出现的相同异常数据包。</p>
<h3> 案例二</h3>
<p>前面说到的方法是1-Gram的应用，然而1-Gram的简单性(平均字节概率分布)很容易受到拟态攻击(mimicry attacks)，攻击者可以通过填充无用字符的方法来伪造出正常的概率分布，从而绕过检测。于是他们又提出了基于N-gram N大于1 的方法。见《Anagram: A Content Anomaly Detector Resistant to Mimicry Attack》</p>
<p>N-gram的本质和1-Gram是一样的，只不过特征空间变大大，在计算的时间/内存开销也很大。比如一个TCP 数据包，长度是256，那么他的N-garm就有256^n。作者通过选取几个N值，比如3-Gram, 4-Gram, 5-Gram等等，然后用Bloom filter(原理相当于哈希表)进行存储。最后在ROC曲线中比较这些N-gram的召回率与准确率，选取合适的模型。如图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/JsmuVT.jpg" alt="案例二" tabindex="0" loading="lazy"><figcaption>案例二</figcaption></figure>
<p>其他细节就略过，感兴趣可以自己查阅。</p>
<h2> 其他应用</h2>
<p>N-gram在安全领域还有很多其他的应用，比如HIDS(通过系统调用做异常检测)、恶意软件分类/识别、敏感词识别/屏蔽等等。但是效果却不好，误报、漏报严重。原因之前也提过，比如：测试还在用DARPA1999, KDD99等老样本、模型存在偏差样本性、缺乏实践等等问题。</p>
<p>开源项目参考：</p>
<p><a href="https://github.com/chwress/salad" target="_blank" rel="noopener noreferrer">https://github.com/chwress/salad</a></p>
<h2> 参考资料</h2>
<ol>
<li><a href="http://academiccommons.columbia.edu/catalog/ac%3A125704" target="_blank" rel="noopener noreferrer">Anomalous Payload-based Network Intrusion Detection</a></li>
<li><a href="http://ids.cs.columbia.edu/sites/default/files/anagram-camera-fixed.pdf" target="_blank" rel="noopener noreferrer">Anagram: A Content Anomaly Detector Resistant to Mimicry Attack</a></li>
<li><a href="https://lagunita.stanford.edu/c4x/Engineering/CS-224N/asset/slp4.pdf" target="_blank" rel="noopener noreferrer">N-Grams tutorial</a></li>
<li><a href="https://en.wikipedia.org/wiki/N-gram" target="_blank" rel="noopener noreferrer">N-Grams wikipedia</a></li>
</ol>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/r9iFeU.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>入侵检测系统如何降低误报率？</title>
      <link>https://mars.run/cybersecurity/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E5%A6%82%E4%BD%95%E9%99%8D%E4%BD%8E%E8%AF%AF%E6%8A%A5%E7%8E%87%EF%BC%9F.html</link>
      <guid>https://mars.run/cybersecurity/%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E7%B3%BB%E7%BB%9F%E5%A6%82%E4%BD%95%E9%99%8D%E4%BD%8E%E8%AF%AF%E6%8A%A5%E7%8E%87%EF%BC%9F.html</guid>
      <source url="https://mars.run/rss.xml">入侵检测系统如何降低误报率？</source>
      <description>背景 入侵检测技术一般分为异常检测和特征/签名检测，这里主要讨论的是网络入侵检测系统(NIDS)。 异常检测 (Anomaly detection)：假设入侵者活动异常于正常主体的活动。常用的方法有：关联规则、神经网络、SVM、邻近算法、隐含马尔可夫模型、Kalman过滤器、聚类算法、PCA、信息论等等。缺点是：需要训练样本、误报率（异常行为≠入侵行为）高。 特征/签名检测 (Misuse/Signature detection)：假设入侵者活动可以用一种模式来表示，然后将观察对象与之进行比较，判别是否符合这些模式。常用的方法有：关联规则、神经网络、SVM、决策树、遗传算法、贝叶斯网络等等。缺点是：对新的入侵方法无能为力。</description>
      <category>网络安全</category>
      <pubDate>Wed, 06 Apr 2016 18:05:13 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 背景</h2>
<p>入侵检测技术一般分为异常检测和特征/签名检测，这里主要讨论的是网络入侵检测系统(NIDS)。</p>
<ol>
<li>异常检测 (Anomaly detection)：假设入侵者活动异常于正常主体的活动。常用的方法有：关联规则、神经网络、SVM、邻近算法、隐含马尔可夫模型、Kalman过滤器、聚类算法、PCA、信息论等等。缺点是：需要训练样本、误报率（异常行为≠入侵行为）高。</li>
<li>特征/签名检测 (Misuse/Signature detection)：假设入侵者活动可以用一种模式来表示，然后将观察对象与之进行比较，判别是否符合这些模式。常用的方法有：关联规则、神经网络、SVM、决策树、遗传算法、贝叶斯网络等等。缺点是：对新的入侵方法无能为力。</li>
</ol>
<p>主流的入侵检测系统通常是采用异常检测+特征/签名检测。他们都存在的问题就是：</p>
<ol>
<li>告警的基数大，即使只有1%的误报率，也会产生大量的误报告警。</li>
<li>误报率往往跟漏报率成反比，改进算法降低误报率可能会增加漏报率，降低系统的可靠性。</li>
<li>大量的告警需要人工审核，造成疲惫和不信任感。</li>
</ol>
<h2> 基于输出数据(Outgoing data)</h2>
<p>完整的数据流应该包括输入和输出两个部分，而大部分NIDS却只考虑了输入数据，没有使用输出数据。通常情况下，存在异常/恶意输入数据，并不意味着有成功的入侵行为。比如一个任意文件读取的HTTP请求，只有当它的响应体中包含那个文件的内容，才算是一个成功的入侵行为。所以降低误报率的一个方法就是对输入和输出数据进行关联分析。而输出的异常检测，就是另一种方法。</p>
<p>输出数据有以下几个问题：</p>
<ol>
<li>不同程序/服务的输出数据不同，而且在使用的过程中，输出数据可能会一直变化。</li>
<li>不同程序/服务对于一种攻击类型做出的反应不同（比如一个SQL注入的HTTP请求，有些程序直接阻断，有些程序做了过滤，正常返回）。</li>
<li>如何把输入和输出数据关联起来？</li>
</ol>
<p>那么这种降低误报的方法就是在传统的基于输入的NIDS的基础上，增加：1、输入输出数据的关联分析。2、输出数据的异常检测。结构如下：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/HAObFW.jpg" alt="结构" tabindex="0" loading="lazy"><figcaption>结构</figcaption></figure>
<p><code>一次成功的攻击行为一定会引起程序/服务的异常输出(输出数据、响应时间、其他行为等等)</code>。当NIDS触发告警，关联引擎查看该告警对应的输出数据是否有异常，如果存在异常才认定为True positive。也可将攻击行为分类，关联分析输出数据是否符合该攻击行为的响应。当然，这也存在着许多缺点：1、每个程序/服务第一需要大量的样本训练。2、程序/服务的某些特征出现变动，需要重新训练样本。3、输出数据太多(比如我司http下行流量4GB/s)，收集、训练成本太高。4、其他…</p>
<h2> 基于威胁模型(Thread Model)</h2>
<p>NIDS的目的就是随时发现可能的入侵行为，并进行具体分析，及时、主动地进行干预(发送告警)，从而取得防患于未然的效果，也就是说降低风险。在风险管理中，<code>Risk = (probablity of the accident occuring) x (expected loss in case of accident)</code>。其中(expected loss in case of accident)可以理解的攻击的类型，常见的有三类：</p>
<ol>
<li>信息收集类（域名/IP/服务/端口扫描、漏洞扫描器等）</li>
<li>拒绝服务类（带宽、资源消耗）</li>
<li>程序/服务攻击（获取权限、数据库、Shell等等）</li>
</ol>
<p>其中第三种类型的攻击造成的损失最大，而第一种类型的攻击并不会立马带来什么损失，所以针对不同类型的攻击，应当给予不同的分数（每种类型的攻击还可以细分）。同时，(probablity of the accident occuring)可以理解为攻击发生的概率，那么同一输入数据/类型攻击的告警数量越多是不是意味着攻击发生的概率大呢？结合这两点因素，组成一个评分系统，再评估出一个合理的阈值，认为所有小于阈值的告警都是误报。</p>
<h2> 改进算法/训练样本/模型</h2>
<p>这一块任重而道远（比如：测试还在用DARPA1999, KDD99等样本、模型存在偏差样本性、缺乏实践等等问题），在此就不细谈了，下图是相关的研究：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/en0vmf.jpg" alt="相关研究" tabindex="0" loading="lazy"><figcaption>相关研究</figcaption></figure>
<h2> 参考资料</h2>
<ol>
<li>Damiano Bolzoni, Sandro Etalle. APHRODITE: an Anomaly-based Architecture for False Positive Reduction</li>
<li><a href="https://www.symantec.com/connect/articles/strategies-reduce-false-positives-and-false-negatives-nids" target="_blank" rel="noopener noreferrer">http://www.symantec.com/connect/articles/strategies-reduce-false-positives-and-false-negatives-nids</a></li>
<li>Asieh Mokarian, Ahmad Faraahi, Arash Ghorbannia Delavar. False Positives Reduction Techniques in Intrusion Detection Systems-A Review</li>
</ol>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/HAObFW.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Joomla 3.4.7 修复的反序列化与SQL注入</title>
      <link>https://mars.run/cybersecurity/Joomla%203.4.7%20%E4%BF%AE%E5%A4%8D%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8ESQL%E6%B3%A8%E5%85%A5.html</link>
      <guid>https://mars.run/cybersecurity/Joomla%203.4.7%20%E4%BF%AE%E5%A4%8D%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8ESQL%E6%B3%A8%E5%85%A5.html</guid>
      <source url="https://mars.run/rss.xml">Joomla 3.4.7 修复的反序列化与SQL注入</source>
      <description>反序列化漏洞修复分析 前一阵子 Joomla 的对象注入很火，而官方3.4.6的修复仅仅是严格过滤了X_FORWARDED_FOR、注释了USER_AGENT存入SESSION那一句，见这里,这样只是指哪补哪，治标不治本。看来官方上次的修复只是临时解决方案，这次的更新(3.4.7)算是彻底解决了此问题。</description>
      <category>网络安全</category>
      <pubDate>Tue, 20 Oct 2015 08:08:11 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 反序列化漏洞修复分析</h2>
<p>前一阵子 Joomla 的对象注入很火，而官方3.4.6的修复仅仅是严格过滤了X_FORWARDED_FOR、注释了USER_AGENT存入SESSION那一句，见<a href="https://github.com/joomla/joomla-cms/commit/995db72ff4eaa544e38b4da3630b7a1ac0146264#diff-aba80b5850bf0435954b29dece250cbfL1021" target="_blank" rel="noopener noreferrer">这里</a>,这样只是指哪补哪，治标不治本。看来官方上次的修复只是临时解决方案，这次的更新(3.4.7)算是彻底解决了此问题。</p>
<p>上次的对象注入，需要满足三个条件：</p>
<ol>
<li>自己实现session的处理方式，重新实现了 session 存储的read()和write()方法，但是并没有对 session 的值进行安全处理。</li>
<li>Mysql非strict mode下，使用utf8mb4字符&nbsp;<code>\xF0\x9D\x8C\x86</code>&nbsp;来截断。</li>
<li>PHP &lt;= 5.6.13 session中反序列化解析的BUG。</li>
</ol>
<p>Joomla 官方也只能解决第一个，也就是改进session的处理方式。这次更新，在 libraries/cms/version/version.php 中，将SESSION存储在内部的Registry类对象中，弃用了以前使用 $_SESSION[$namespace][$name] 的方式：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并且，在写SESSION的时候会先做base64_encode：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，$_SESSION 就只剩下了$_SESSION[‘joomla’]，而且$_SESSION[‘joomla’] 只存储了Registry的对象$data，在执行read()和write()时候，SESSION是经过base64_encode后的数据，就不会存在read()之后自动反序列化而导致对象注入了。</p>
<p>在反序列化的时候也不存在unserialize参数可控的情况。（可控的只是$data的成员变量）</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Joomla官方这次的解决方案比较好，不像上次那样治标不治本，这样的态度值得称赞。反观Apache对struts2 漏洞的修复…就不说了。</p>
<h2> SQL注入漏洞分析</h2>
<h3> 漏洞分析</h3>
<p>代码位于，administrator/components/com_categories/models/category.php，save()函数内：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的 $associations 未经过适当处理、我们跟着流程来看看。</p>
<p>首先，<code>$assoc = $this-&gt;getAssoc();</code>&nbsp;为 True 的时候整个逻辑才能进来，这个<code>getAssoc()</code>是什么呢？跟进getAssoc()的实现(文件的 1234 行)，发现关键是在：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>搜索一下，发现 JLanguageAssociations 是 Joomla 的一个多语言插件&nbsp;<a href="http://www.slideshare.net/erictiggeler/creating-a-multilingual-site-in-joomla-joomla-3-beginners-guide-eric-tiggeler" target="_blank" rel="noopener noreferrer">http://www.slideshare.net/erictiggeler/creating-a-multilingual-site-in-joomla-joomla-3-beginners-guide-eric-tiggeler</a>, 这个插件是 Joomla 自带的，默认没有开启，我们在后台将他开启。</p>
<p>然后，继续看代码，<code>$associations = $data['associations'];</code>, $data是post过来的数据，$associations没有经过过滤就传到了：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导致SQL注入。</p>
<p>那 Joomla 有没有全局过滤呢？我们看看 Joomla 是如何处理POST数据的。</p>
<p>在 libraries/legacy/controller/form.php , save() 函数，</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>validate() 函数在 libraries/legacy/model/form.php 302行, 他又调用了libraries/joomla/form/form.php 的filter() 函数，具体实现就不继续了，总之这里的POST参数只是处理了 ‘ XSS and specified bad code. ‘。</p>
<p>最后，构造POC。在修改分类，保存的时候，修改POST数据:</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jform[associations][en-GB] 这个参数就是 $associations，成功注入。</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/dWuY7g.jpg" alt="Jommla" tabindex="0" loading="lazy"><figcaption>Jommla</figcaption></figure>
<blockquote>
<p>这里打一波广告，我们的Skywolf是可以轻松检测出来的，如下图</p>
</blockquote>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/vwJyVt.jpg" alt="Skywolf" tabindex="0" loading="lazy"><figcaption>Skywolf</figcaption></figure>
<p>另外，<code>libraries/legacy/model/admin.php</code> 这里也存在着同样的问题。</p>
<h3> 修复方案</h3>
<p>官方增加了：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 $associations 中的所有值转换为int型。还有将 $id 强制转换为int。</p>
<h2> 参考资料</h2>
<ol>
<li><a href="http://drops.wooyun.org/papers/11330" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/papers/11330</a></li>
<li><a href="http://drops.wooyun.org/papers/11371" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/papers/11371</a></li>
<li><a href="http://bobao.360.cn/learning/detail/2501.html" target="_blank" rel="noopener noreferrer">http://bobao.360.cn/learning/detail/2501.html</a></li>
<li><a href="https://github.com/joomla/joomla-cms/commit/2cd4ef682f0cab6ff03200b79007a25f19c6690e" target="_blank" rel="noopener noreferrer">https://github.com/joomla/joomla-cms/commit/2cd4ef682f0cab6ff03200b79007a25f19c6690e</a></li>
<li><a href="https://www.joomla.org/announcements/release-news/5643-joomla-3-4-7.html" target="_blank" rel="noopener noreferrer">https://www.joomla.org/announcements/release-news/5643-joomla-3-4-7.html</a></li>
</ol>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/dWuY7g.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>读懂PHP opcode及其在webshell检测中的应用</title>
      <link>https://mars.run/cybersecurity/%E8%AF%BB%E6%87%82PHP%20opcode%E5%8F%8A%E5%85%B6%E5%9C%A8webshell%E6%A3%80%E6%B5%8B%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8.html</link>
      <guid>https://mars.run/cybersecurity/%E8%AF%BB%E6%87%82PHP%20opcode%E5%8F%8A%E5%85%B6%E5%9C%A8webshell%E6%A3%80%E6%B5%8B%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8.html</guid>
      <source url="https://mars.run/rss.xml">读懂PHP opcode及其在webshell检测中的应用</source>
      <description>什么是opcode 当Zend Engine解析PHP脚本的时候，会对脚本进行词法、语法分析，然后编译成opcode来执行，类似JVM中的字节码(byte codes)，只不过opcode不会像class文件那种存在磁盘，而是在内存中直到PHP的生命周期结束。 盗一张图： opcode</description>
      <category>网络安全</category>
      <pubDate>Wed, 10 Jun 2015 16:01:23 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 什么是opcode</h2>
<p>当Zend Engine解析PHP脚本的时候，会对脚本进行词法、语法分析，然后编译成opcode来执行，类似JVM中的字节码(byte codes)，只不过opcode不会像class文件那种存在磁盘，而是在内存中直到PHP的生命周期结束。</p>
<p>盗一张图：</p>
<figure><img src="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/DlYw5G.jpg" alt="opcode" tabindex="0" loading="lazy"><figcaption>opcode</figcaption></figure>
<blockquote>
<p>opcode在PHP内核中是如何生成的可以参考 :&nbsp;<a href="http://www.php-internals.com/book/?p=chapt02/02-03-02-opcode" target="_blank" rel="noopener noreferrer">http://www.php-internals.com/book/?p=chapt02/02-03-02-opcode</a></p>
</blockquote>
<p>我们可以通过PHP扩展vld来查看PHP脚本的opcode，可以参考(<a href="http://blog.csdn.net/21aspnet/article/details/7002644" target="_blank" rel="noopener noreferrer">http://blog.csdn.net/21aspnet/article/details/7002644)。</a>%E3%80%82)</p>
<p>Zend Engine中编译和执行PHP脚本的关键函数是：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VLD就是通过HOOK Zend Engine中的这两个函数来实现dump opcode，来看看它的代码：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在vld_compile_file中完成HOOK:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取opcode后将其格式化输出：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实APC、Opcache等opcode优化扩展都是用这种方式来实现的。</p>
<h2> 读懂opcode</h2>
<p>下面我们用vld生成一段opcode看看。PHP脚本如下：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行vld，输出：</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>怎么去看呢？前面比较清晰，filename，function name 都是顾名思义。后面两行：</p>
<ol>
<li>number of ops：opcode的数量</li>
<li>compiled vars：PHP变量编译后的opcode表示形式，因为opcode不会使用变量的名字，而是使用变量的ID。比如后面的hello函数中，$who 对应着 !0</li>
</ol>
<p>接着是后面的表格，列名含义如下表：</p>
<table>
<thead>
<tr>
<th>列名</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>line</td>
<td>对应PHP脚本中的行数</td>
</tr>
<tr>
<td>#</td>
<td>opcode编号</td>
</tr>
<tr>
<td>*</td>
<td>貌似没用</td>
</tr>
<tr>
<td>op</td>
<td>使用的Opcode，见：<a href="https://php.net/manual/en/internals2.opcodes.php#internals2.opcodes" target="_blank" rel="noopener noreferrer">https://php.net/manual/en/internals2.opcodes.php#internals2.opcodes</a></td>
</tr>
<tr>
<td>fetch</td>
<td>不清楚</td>
</tr>
<tr>
<td>ext</td>
<td>脚本执行所需要的其他信息</td>
</tr>
<tr>
<td>return</td>
<td>返回值</td>
</tr>
<tr>
<td>operands</td>
<td>操作数</td>
</tr>
</tbody>
</table>
<p>其实这些列名对应着PHP内核中opcode结构体的成员变量：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么这段opcode的意思是：</p>
<ol>
<li>NOP是编译过程优化的结果，没什么意义。</li>
<li>把’World’作为参数传给后面的函数。</li>
<li>调用函数hello, 返回值为$0。</li>
<li>ECHO 输出$0。</li>
<li>函数结束返回。</li>
</ol>
<p>下一段是hello函数：</p>
<ol>
<li>接受传给函数的参数。</li>
<li>把’Hello%2C+%25s%21’作为参数传给后面的函数。</li>
<li>把!0作为参数传给后面的函数。</li>
<li>调用函数sprintf，返回值为$0。</li>
<li>函数返回$0。</li>
<li>函数结束。</li>
</ol>
<h2> 总结</h2>
<p>在Webshell检测中，opcode可以：（这里只讨论opcode在webshell检测中的作用）</p>
<ol>
<li>辅助检测PHP后门/Webshell。
<ol>
<li>优点：作为静态分析的辅助手段，可以快速精确定位PHP脚本中可控函数及参数的调用。</li>
<li>缺点：需要人工维护关键字，无法应对变形马，如编码、ASCII运算等等。</li>
</ol>
</li>
<li>帮助我们更加深入地理解PHP内核机制，使我们可以修改PHP源码或者以扩展的形式来动态检测PHP后门/Webshell。（HOOK关键危险函数，如eval, assert等，当GPC参数进入危险函数及有相关危险操作时，判定为后门/Webshell）
<ol>
<li>优点：上面写的缺点取反，并且误报率低，准确。</li>
<li>缺点：部署，维护成本高。</li>
</ol>
</li>
</ol>
<h2> Reference</h2>
<ol>
<li><a href="http://www.laruence.com/2008/08/14/250.html" target="_blank" rel="noopener noreferrer">http://www.laruence.com/2008/08/14/250.html</a></li>
<li><a href="http://blog.pascal-martin.fr/post/php-obtenir-dump-opcodes.html" target="_blank" rel="noopener noreferrer">http://blog.pascal-martin.fr/post/php-obtenir-dump-opcodes.html</a></li>
<li><a href="http://rancoud.com/read-phps-opcode/" target="_blank" rel="noopener noreferrer">http://rancoud.com/read-phps-opcode/</a></li>
<li><a href="http://www.php-internals.com/book/?p=chapt02/02-03-02-opcode" target="_blank" rel="noopener noreferrer">http://www.php-internals.com/book/?p=chapt02/02-03-02-opcode</a></li>
<li><a href="http://security.tencent.com/index.php/blog/msg/19" target="_blank" rel="noopener noreferrer">http://security.tencent.com/index.php/blog/msg/19</a></li>
</ol>
]]></content:encoded>
      <enclosure url="https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-02/DlYw5G.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>PHP Challenge 2015</title>
      <link>https://mars.run/cybersecurity/PHP_Challenge_2015.html</link>
      <guid>https://mars.run/cybersecurity/PHP_Challenge_2015.html</guid>
      <source url="https://mars.run/rss.xml">PHP Challenge 2015</source>
      <description>背景 在乌云上看到PHP Challenge 2015，深感兴趣，但并无思路，直到看了@Ryat大牛的微博才知道答案。 PHP bug 先贴出代码吧</description>
      <category>网络安全</category>
      <pubDate>Tue, 10 Feb 2015 12:19:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 背景</h2>
<p>在乌云上看到<a href="http://zone.wooyun.org/content/22100" target="_blank" rel="noopener noreferrer">PHP Challenge 2015</a>，深感兴趣，但并无思路，直到看了<a href="https://weibo.com/3202054374/CtNpv1ov8?type=comment" target="_blank" rel="noopener noreferrer">@Ryat</a>大牛的微博才知道答案。</p>
<h2> PHP bug</h2>
<p>先贴出代码吧</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照Ryat的提示，找到(<a href="https://bugs.php.net/bug.php?id=69892" target="_blank" rel="noopener noreferrer">https://bugs.php.net/bug.php?id=69892</a>)</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>integer类型的key截断导致不同的数组比较结果相同。我们去看看PHP源码中的相关片段，在<code>Zend/zend_hash.c</code>：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键在34行:</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当数组的key为integer进到这里，比较他们的key是否相同，p1和p2是PHP的bucket结构体，其中h保存着数组的key。bucket结构如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出h是ulong，ulong是一个unsigned long，如下：</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看到这里不知道大家有没有看出问题？注意喔，保存p1和p2差值的变量是result，而result是int型变量，这就导致了在64位系统中，unsigned long是64位整型，而int是32位整型，类型的不同出现问题。程序会将<code>p1-&gt;h - p2-&gt;h</code>的结果强制转换为int，我们都知道unsigned long转int会截取低4个字节。所以只需要让unsigned long的低4字节为0，它转换后的int就为0。比如我们将二进制<code>10000000000000000000000000000000000000</code>转换为十进制<code>137438953472</code>，那么<code>137438953472</code>转为int就为0。</p>
<h2> 分析</h2>
<p>现在再来看看这个php代码吧，前面的那个bug利用前提是数组的value相同，key不同，所以首先需要匹配一个md5出来，我在cmd5试了这10个md5，只有第五个<code>06e2b745f3124f7d670f78eabaa94809</code>能解出，原文是<code>hund</code>。于是首先写入cookie：<code>Cookie: user[0]=5;user[1]=hund;</code>&nbsp;程序会进入58行，验证通过，$valid_user被改为true，这个时候输出为<code>Welcome back user</code>。到了这一步答案已经很接近了，只需要将$uid改为0即可。现在试试前面提到的漏洞，我们写入cookie：<code>Cookie: user[137438953472]=5;user[1]=hund;</code>&nbsp;这个时候因为之前提到的漏洞，程序还是会进入58行，因为$input[0]未赋值，所以为NULL，在PHP中<code>0+NULL=0</code>,故成功将$uid改为0。</p>
]]></content:encoded>
    </item>
    <item>
      <title>我用白板墙贴，记录日常生活</title>
      <link>https://mars.run/posts/2023-01-26-whiteboard_gtd.html</link>
      <guid>https://mars.run/posts/2023-01-26-whiteboard_gtd.html</guid>
      <source url="https://mars.run/rss.xml">我用白板墙贴，记录日常生活</source>
      <description>摆脱数字性遗忘：白板墙贴的生活/工作清单，适用于居家办公的 GTD 补充记录方案。 在数字化和网络化的时代，日常记录从纸质转移到电子存储，它带来了无限的容量和随时随地使用的便利。然而，这也带来了新的问题：如果没有打开应用程序，记录就无法提醒，容易忘记重要事情。即使设置了定时提醒，提醒时间也不一定是最佳处理时间，因此可能会延迟或取消，从而导致遗忘。为了解决这个问题，我使用白板墙贴来记录生活/工作清单。 源图：Storyset</description>
      <category>工具</category>
      <pubDate>Sun, 22 Jan 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>摆脱数字性遗忘：白板墙贴的生活/工作清单，适用于居家办公的 GTD 补充记录方案。</p>
</blockquote>
<p>在数字化和网络化的时代，日常记录从纸质转移到电子存储，它带来了无限的容量和随时随地使用的便利。然而，这也带来了新的问题：如果没有打开应用程序，记录就无法提醒，容易忘记重要事情。即使设置了定时提醒，提醒时间也不一定是最佳处理时间，因此可能会延迟或取消，从而导致遗忘。为了解决这个问题，我使用白板墙贴来记录生活/工作清单。</p>
<figure><img src="http://tc.seoipo.com/2023-01-27-05-13-50.png" alt="Website Creator Cartoon" tabindex="0" loading="lazy"><figcaption>源图：Storyset</figcaption></figure>
<h2> 为什么是白板？</h2>
<p>在中学时，我没有电脑和手机，就曾把最初的 GTD 记录在玻璃桌面上，若记录失效或不再需要，只需擦掉即可。白板墙贴与当时的玻璃桌面效果类似，只是换到墙上了。我在书房和走廊各贴了一块白板，书房的墙贴用来提醒当天要做什么，走廊的墙贴用来提醒日常生活仪式。无论走到哪里，都不会错过重要提醒。特别是在不确定下一步该做什么时，我只要转身，就能看到工作清单，非常直观和便捷。</p>
<figure><img src="http://tc.seoipo.com/2023-01-26-12-28-36.png" alt="" tabindex="0" loading="lazy"><figcaption>透明/白色静电墙贴</figcaption></figure>
<p>与电子记录相比，白板没有软件框架限制。它可以用于绘制思维导图，帮助人们更清晰地组织思路；也可以用多种颜色的记号笔随意书写和涂鸦，以原始的方式表达自己的想法。因此，白板是记录、展示信息和思考的极佳工具。</p>
<figure><img src="http://tc.seoipo.com/2023-01-25-19-21-12.png" alt="Scrum board" tabindex="0" loading="lazy"><figcaption>Scrum board</figcaption></figure>
<h2> 白板类型</h2>
<p>白板墙贴源自 @chen 在群里分享的一个很棒的主意：使用静电墙贴作为白板，可以随时记录。在尝试的过程中，我更换了三种材质：透明静电墙贴、白色静电墙贴和 PVC 墙贴（吸磁软白板贴）。</p>
<table>
  <tbody><tr>
    <th>类型</th>
    <th>透明/白板静电墙贴</th>
    <th>PVC 墙贴（非静电）</th>
    <th>支架式白板</th>
  </tr>
  <tr>
    <td>优点</td>
    <td>安装方便；轻松固定在墙上；费用低。</td>
    <td>磁吸；字迹擦拭方便；<br>黑色、白色、绿色、黛灰等多种背景可供选择。</td>
    <td>双面书写；易写易擦；可吸附性；可自由升降；可360°翻转；带刹车滑轮。</td>
  </tr>
  <tr>
    <td>缺点</td>
    <td>字迹在 24 小时后会在墙贴上留下凸起的痕迹；红色、蓝色等非黑色笔迹很难擦干净。</td>
    <td>需要使用双面胶固定；难以将其平整地贴在墙上。</td>
    <td>安装麻烦，无法贴上墙，占地方。</td>
  </tr>
  <tr>
    <td>费用</td>
    <td>20 元（120cm x 200cm）</td>
    <td>160 元（120cm x 200cm）</td>
    <td>280 元（100cm x 200cm）</td>
  </tr>
</tbody></table>
<h2> 我的方案</h2>
<p>在我的方案中，记录的想法分为日常仪式和生活/工作两类。日常仪式记录在走廊白板上，生活/工作记录则输出在书房白板上。下面我将简要介绍白板内容和思路。</p>
<figure><img src="http://tc.seoipo.com/2023-02-03-20-58-05.png" alt="" tabindex="0" loading="lazy"><figcaption>记录输入流</figcaption></figure>
<h3> 书房白板</h3>
<p>我最常待的地方是书房，所以把日常记录都放在书房白板上，用来记录当日清单、锻炼进度、思维导图、项目跟进和临时安排。书房白板使用率较高，因此建议使用易写易擦的 PVC 墙贴（吸磁软白板贴）。</p>
<figure><img src="http://tc.seoipo.com/2023-01-23-20-58-00.png" alt="" tabindex="0" loading="lazy"><figcaption>书房白板</figcaption></figure>
<figure><img src="http://tc.seoipo.com/2023-01-28-10-42-47.png" alt="" tabindex="0" loading="lazy"><figcaption>PVC 墙贴（非静电）</figcaption></figure>
<h3> 走廊白板</h3>
<p>走廊白板是对书房白板的补充，可以在书房之外的区域提醒生活仪式等内容，例如：每天早上喝杯热水自测体脂，晚上进行当日回顾和睡前准备。走廊白板擦写频率较低，可以使用便宜的静电墙贴。如果需要修改走廊白板的提示，可以用纸巾沾水擦拭。</p>
<figure><img src="http://tc.seoipo.com/2023-01-23-20-53-36.png" alt="" tabindex="0" loading="lazy"><figcaption>走廊白板</figcaption></figure>
<h3> 电子记录</h3>
<p>使用白板墙贴记录 GTD 并不意味着放弃数字化记录。相反，我可以将白板墙贴与电子记录结合起来，使用电子记录来存储详细信息，而使用白板墙贴来提醒重要事项。在「当日检视」的环节中，我会同步书房白板和电子 GTD，以确保两者的内容保持一致。这样，我就可以在保持良好的效率和组织性的同时，还可以提高记录的可靠性和可追溯性。</p>
<h2> 更多</h2>
<p>通过使用白板墙贴记录 GTD，我发现它不仅可以帮助我更好地管理时间和任务，还可以提高工作效率。因为白板墙贴是实体物品，我可以随时随地看到它，而且它是直观的，使我一目了然地了解自己的任务和进度。此外，白板墙贴可以随时更新和修改，让我可以随时调整计划和任务。白板工具填补了笔记/清单应用和个人定制需求之间的空隙。</p>
]]></content:encoded>
    </item>
    <item>
      <title>找不到字幕？Whisper 让不懂外语的你也能看懂日剧</title>
      <link>https://mars.run/posts/2022-11-18-whisper_ai_subtitles.html</link>
      <guid>https://mars.run/posts/2022-11-18-whisper_ai_subtitles.html</guid>
      <source url="https://mars.run/rss.xml">找不到字幕？Whisper 让不懂外语的你也能看懂日剧</source>
      <description>从大学开始，我看日剧十几年了，但日语毫无进步，只能听懂几句耳熟能详的句子，看国外电影全靠字幕组。曾经我想过学日语，报了暑期班，但成绩被七岁的小妹妹同学吊打。然后，我就被自己的语言能力说服了，想着这辈子都离不开字幕组。这种情况一直持续着，直到我测试视频剪辑工具 AutoCut 时遇到了 Whisper。 Whisper 是今年 9 月被 OpenAI 开源的自动语音识别系统，除了可以用于语音识别，Whisper 还能实现多种语言的转录，以及将这些语言翻译成英语。「语言识别」「转录」听起来特别唬人，但 transcribe（转录）指将语音转为文字，Whisper 会为音视频生成带时间轴的字幕文件，是支持 99 种语言 AI 字幕工具。</description>
      <category>工具</category>
      <pubDate>Fri, 18 Nov 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>从大学开始，我看日剧十几年了，但日语毫无进步，只能听懂几句耳熟能详的句子，看国外电影全靠字幕组。曾经我想过学日语，报了暑期班，但成绩被七岁的小妹妹同学吊打。然后，我就被自己的语言能力说服了，想着这辈子都离不开字幕组。这种情况一直持续着，直到我测试视频剪辑工具 AutoCut 时遇到了 Whisper。</p>
<p>Whisper 是今年 9 月被 OpenAI 开源的自动语音识别系统，除了可以用于语音识别，Whisper 还能实现多种语言的转录，以及将这些语言翻译成英语。「语言识别」「转录」听起来特别唬人，但 transcribe（转录）指将语音转为文字，Whisper 会为音视频生成带时间轴的字幕文件，是<strong>支持 99 种语言 AI 字幕工具</strong>。</p>
<p>虽然与 Stable Diffusion 同样归属 AI 工具，但 Whisper 安装非常简单，终端执行两行代码安装 Whisper 和 FFmpeg 即可使用。如果你不清楚如何安装 FFmpeg，可参考<a href="https://newzone.top/posts/2022-11-03-ffmpeg_screen_recording.html#%E9%85%8D%E7%BD%AE-ffmpeg" target="_blank" rel="noopener noreferrer">FFmpeg 配置步骤</a>。这部分我不多做赘述，具体可以看<a href="https://github.com/openai/whisper" target="_blank" rel="noopener noreferrer">Whisper 官方文档</a>。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来，我会分享如何使用 Whisper 为外语视频自动生成字幕，以日本综艺节目「中森明菜デビュー 40 周年 女神の熱唱！喝采は今も」为例。</p>
<h2> 音视频转录</h2>
<p>在文件所在目录下打开终端，运行 <code>whisper jp.mp4</code> 即可执行音视频转录。测试视频名原本为日语，我改为「jp.mp4」，原因是我系统中只装了中英语言包，使用其他语言作为命令会出现 Invalid argument 报错，从而导致转录失败。Whisper 的媒体分析环节调用了 FFmpeg，所以主流音视频格式均被支持。</p>
<figure><img src="http://tc.seoipo.com/2022-11-18-09-25-29.png" alt="" tabindex="0" loading="lazy"><figcaption>whisper 命令</figcaption></figure>
<p>视频时长 90 分钟，我使用 3080Ti 显卡转录，用时 10 分钟。转录过程中不要玩游戏，也不要进行直播等吃显存的行为，否则容易显存不足无法继续。Whisper 对设备要求不高，不过设备会决定转录时长和你能使用的转录模型。如果你使用 CPU 转录，时间会增加 5-10 倍。</p>
<p>转录完成后，Whisper 将生成原生字幕文件，日语视频会被转录为日语字幕，西班牙语视频会得到西班牙语字幕。</p>
<h2> 字幕翻译</h2>
<p>通过 Whisper 获得原生字幕后，接着要将其翻译为中文。这一步需借助 SubtitleEdit Online，它支持免费在线翻译字幕，可使用 Google 和 Yandex 两种翻译引擎。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><a class="footnote-anchor" id="footnote-ref1">
</a><ol><a class="footnote-anchor" id="footnote-ref1">
</a><li><a class="footnote-anchor" id="footnote-ref1">打开 </a><a href="https://www.nikse.dk/subtitleedit/online" target="_blank" rel="noopener noreferrer">SubtitleEdit Online</a>，点击「Subtitle」&gt;「Open...」，选择要导入的字幕文件。</li>
<li>点击「Auto-translate」，选择翻译引擎，然后在弹出窗口中选择字幕要翻译的语言，并<strong>将页面拖动到最下方</strong>（非常重要），确定所有文字都被翻译后点击 OK 按钮。</li>
<li>点击「Subtitle」&gt;「Save/download...」，即可保存翻译好的字幕文件。</li>
</ol>
<p>除了网页翻译字幕，本地端的神经机器翻译也是种好选择。macOS 用户推荐使用 <a href="https://github.com/argosopentech/argos-translate" target="_blank" rel="noopener noreferrer">Argos Translate</a>，这是基于 OpenNMT 的开源神经机器翻译。如果你的动手能力较强，可以尝试 <a href="https://github.com/Helsinki-NLP/Opus-MT" target="_blank" rel="noopener noreferrer">Opus-MT</a>。不管用哪种方式，都是将字幕以文本方式导出，复制到翻译引擎中翻译，即可得到不同于 Google Translate 的翻译结果。</p>
<h2> Whisper 进阶命令</h2>
<h3> task</h3>
<p><code>--task</code> 分为 transcribe（语音转录）和 translate。Whisper 默认使用 <code>--task transcribe</code> 模式，将语音转录为对应的语言字幕。<code>--task translate</code> 是所有语言翻译为英文，目前尚未支持翻译为其他语言。</p>
<h3> language</h3>
<p><code>--language</code> 是设置语音转录的语种，支持语种范围查看 <a href="https://github.com/openai/whisper/blob/main/whisper/tokenizer.py" target="_blank" rel="noopener noreferrer">tokenizer.py</a>，比如指定日语 <code>--language japanese</code>。如果你没指定语种，Whisper 会截取音频的前 30 秒来判断语种。</p>
<p>如果指定语种与文件中的语种并不相同，Whisper 会强制翻译，但 10 分钟以上的音视频会出现大量的重复无意义字幕。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup><a class="footnote-anchor" id="footnote-ref2"> 假设你把日语视频的转录语言设为汉语，前 8 分钟 Whisper 会正确转录到中文，但 8 分钟后的转录字幕会一直重复，并与实际片段无关。</a></p><a class="footnote-anchor" id="footnote-ref2">
</a><h3><a class="footnote-anchor" id="footnote-ref2"></a> model</h3>
<p><code>--model</code> 指 Whisper 的转录模型，转录效果为 tiny &lt; base &lt; small &lt; medium &lt; large，默认使用 small。添加参数 <code>--model medium</code> 或 <code>--model large</code> 可以切换到更大的模型，但转录时间也会变长。如果你是对英文视频进行转录，则在模型参数上添加后缀 <code>.en</code>，能提升转录速度。</p>
<table>
<thead>
<tr>
<th style="text-align:center">模型</th>
<th style="text-align:center">大小</th>
<th style="text-align:center">单英语模型</th>
<th style="text-align:center">多语言模型</th>
<th style="text-align:center">最低显存</th>
<th style="text-align:center">转录速率</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">tiny</td>
<td style="text-align:center">39 M</td>
<td style="text-align:center"><code>tiny.en</code></td>
<td style="text-align:center"><code>tiny</code></td>
<td style="text-align:center">~1 GB</td>
<td style="text-align:center">~32x</td>
</tr>
<tr>
<td style="text-align:center">base</td>
<td style="text-align:center">74 M</td>
<td style="text-align:center"><code>base.en</code></td>
<td style="text-align:center"><code>base</code></td>
<td style="text-align:center">~1 GB</td>
<td style="text-align:center">~16x</td>
</tr>
<tr>
<td style="text-align:center">small</td>
<td style="text-align:center">244 M</td>
<td style="text-align:center"><code>small.en</code></td>
<td style="text-align:center"><code>small</code></td>
<td style="text-align:center">~2 GB</td>
<td style="text-align:center">~6x</td>
</tr>
<tr>
<td style="text-align:center">medium</td>
<td style="text-align:center">769 M</td>
<td style="text-align:center"><code>medium.en</code></td>
<td style="text-align:center"><code>medium</code></td>
<td style="text-align:center">~5 GB</td>
<td style="text-align:center">~2x</td>
</tr>
<tr>
<td style="text-align:center">large</td>
<td style="text-align:center">1550 M</td>
<td style="text-align:center">N/A</td>
<td style="text-align:center"><code>large</code></td>
<td style="text-align:center">~10 GB</td>
<td style="text-align:center">1x</td>
</tr>
</tbody>
</table>
<p>上方表格是 Whisper 官方提供信息，但目前模型实际增大 50%-100%，要求也增加了，仅作参考。</p>
<h3> 辅助参数</h3>
<ul>
<li><code>--device</code> 指 whisper 运行算法所用的硬件，默认为 cuda 即显存，或者指定 <code>--device cpu</code> 。特别当你显存不够，又想使用较大模型时，推荐指定 CPU 转录。</li>
<li><code>--temperature</code> temperature 决定了生成模型的贪婪程度，默认为 0。如果 temperature 低，概率最高的词将远高于其他低概率，模型将可能输出最正确的文本，变化很小。如果 temperature 较高，该模型会输出概率较高的其他单词，而不是概率最高的单词，生成的文本将更加多样化，但有更高的可能性出现语法错误和生成无意义的文本。</li>
<li><code>--temperature_increment_on_fallback</code> 当解码失败时，回推时要增加的 temperature，默认为 0.2。</li>
<li><code>--best_of</code> temperature 不为零时的侯选个数，默认为 5。</li>
<li><code>--beam_size</code> temperature 为零时，number of beams in beam search，默认为 5。beam 直译是光束，但没理解具体意思，我简单理解其为侯选数。</li>
<li><code>--patience</code> 用于 beam decoding 的 patience value, as in <a href="https://arxiv.org/abs/2204.05424" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2204.05424</a>, the default (1.0) is equivalent to conventional beam search (default: None) simple length normalization by default (default: None)</li>
<li><code>--length_penalty</code> optional token length penalty coefficient (alpha) as in <a href="https://arxiv.org/abs/1609.08144" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/1609.08144</a>, uses simple length normalization by default (default: None)</li>
<li><code>--suppress_tokens</code> 逗号分隔的标记 ID 列表，以便在采样过程中进行抑制; 默认为 -1，这会抑制除常见标点符号外的大多数特殊字符的出现。</li>
<li><code>--initial_prompt</code> 可选的文本提示，在命令首行出现，默认为空。</li>
<li><code>--condition_on_previous_text</code> 默认为 True，为下一个窗口提供模型之前的输出作为提示；禁用可能会使不同窗口的文本不一致，但模型变得不容易陷入失败循环。</li>
<li><code>--fp16</code> 是否启用半精度 fp16 进行推理运算，默认为 True，否则为单精度 fp32，运行时间延长。</li>
<li><code>--threads</code> 指定 CPU 运算的线程数，会取代 MKL_NUM_THREADS/OMP_NUM_THREADS (默认：0)</li>
</ul>
<h3> 幻听参数</h3>
<p>非英语视频的转录有时会出现幻听，即静默片段被识别出语音，或是转录结果与该片段无关。这些问题是由语气停顿参数引起的。幻听的解决方案是引入 <a href="https://github.com/snakers4/silero-vad" target="_blank" rel="noopener noreferrer">VAD</a>，但 VAD 对动手能力要求较高。如果你的视频转录出现了严重幻听，建议先尝试调节参数阈值。</p>
<ul>
<li><code>--no_speech_threshold</code> 无声识别的阈值，默认为 0.6。当 no_speech_threshold 高于阈值且 logprob_threshold 低于预设时，该片段将被标记为静默。对于非英语长视频来说，建议将其调低，否则经常出现大段的重复识别。</li>
<li><code>--logprob_threshold</code> 转录频次的阈值，默认为 -1.0。当 logprob_threshold 低于预设时，将不对该片段进行转录。建议修改为 None 或更低的值。</li>
<li><code>--compression_ratio_threshold</code> 压缩比的阈值，默认为 2.4。当 compression_ratio_threshold 高于预设时，将不对该片段进行转录。</li>
</ul>
<p><code>--no_speech_threshold 0.5 --logprob_threshold None --compression_ratio_threshold 2.2</code> 是我常用的参数，你可以按视频情况来调节，幻听参数放在转录命令后面。</p>
<h2> 转录成果</h2>
<p>「夜のヒットスタジオ・スペシャル」：</p>
]]></content:encoded>
    </item>
    <item>
      <title>抛弃又贵又难用的录屏软件，3 分钟入门 FFmpeg</title>
      <link>https://mars.run/posts/2022-11-03-ffmpeg_screen_recording.html</link>
      <guid>https://mars.run/posts/2022-11-03-ffmpeg_screen_recording.html</guid>
      <source url="https://mars.run/rss.xml">抛弃又贵又难用的录屏软件，3 分钟入门 FFmpeg</source>
      <description>当所有的录屏应用都无法满足我时，我的目光投向了那个最终极的命令行工具，FFmpeg。 开始自我监控后，录屏工具的重要性迅速提升，我遇到的问题也越来越多。因为我录屏主要是为了自我监控，所以我需要的帧率不必很高，甚至越低越好，分辨率也不必和屏幕一致，只要能看清我在做什么就可以了。</description>
      <category>工具</category>
      <pubDate>Thu, 03 Nov 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>当所有的录屏应用都无法满足我时，我的目光投向了那个最终极的命令行工具，FFmpeg。</p>
</blockquote>
<p>开始<a href="https://newzone.top/posts/2022-05-22-surveillance_video_for_myself.html" target="_blank" rel="noopener noreferrer">自我监控</a>后，录屏工具的重要性迅速提升，我遇到的问题也越来越多。因为我录屏主要是为了自我监控，所以我需要的帧率不必很高，甚至越低越好，分辨率也不必和屏幕一致，只要能看清我在做什么就可以了。</p>
<p>最初，我使用了免费开源的 <a href="https://www.videolan.org/vlc/" target="_blank" rel="noopener noreferrer">VLC</a>，这也是我监控文章中采用的方案。它能调节输出视频的编码、帧率、格式，但操作麻烦，而且不能同时录屏和摄像头，暂停录制也容易导致程序崩溃。</p>
<p>然后，我尝试了 <a href="https://obsproject.com/" target="_blank" rel="noopener noreferrer">OBS</a>，它的录制功能极其强大，可以任意添加摄像头、文字、图像等，但输出限制多，生成的视频体积过大。同时，OBS 不支持录制画面与直播画面分开，而我平常习惯边开直播边工作，这令我只能放弃 OBS 录屏。</p>
<p>接着，我发现了 7.8k Star 的 <a href="https://github.com/MathewSachin/Captura/releases/tag/v8.0.0" target="_blank" rel="noopener noreferrer">Captura</a>，它的自由度较高，能自定义叠加元素，但项目已于 2018 年停止更新，使用时经常碰到莫名其妙的报错，很不稳定。</p>
<p>免费的不行，那么收费的会不会好点呢？</p>
<p>我用 <a href="https://www.bandicam.cn/" target="_blank" rel="noopener noreferrer">Bandicam</a> 录制了一周的视频。与 Captura 相比，Bandicam 的稳定性有了很大的提升，不会突然崩溃，还有降噪和内录扬声器功能，但它偶尔会丢失摄像头，导致无法自动录屏。</p>
<p>再后，我测试了其他几款录屏应用：</p>
<ul>
<li>相机：Windows 自带应用，录制方便，但输出选项较少，限制多。</li>
<li><a href="https://www.flashbackrecorder.com/zh/express/" target="_blank" rel="noopener noreferrer">FlashBack Express</a>：能调节帧率，画面镜像，虚化背景，但免费版只支持 2 小时内的录制。</li>
<li><a href="https://mirillis.com/zh/products/action.html" target="_blank" rel="noopener noreferrer">Mirillis Action!</a>：高帧率录制游戏，自动分割视频，自定义叠加元素，但输入帧率不能自由调整，最低只能 15 帧，试用期 30 天。</li>
<li><a href="https://ohsoft.net/eng/ocam/intro.php?cate=1002" target="_blank" rel="noopener noreferrer">oCam</a>：打着免费招牌但有弹窗广告，且输出视频偏大。</li>
<li><a href="https://getsharex.com/" target="_blank" rel="noopener noreferrer">ShareX</a>：免费开源强大的截图软件，具备录屏功能，能调节编码和帧率，但只能单一录屏或录像。</li>
</ul>
<p>我一共试了 9 款录屏软件，体验都不太好，软件普遍存在无法自定义画面、不兼容、稳定性低的问题。再加上自我监控方案的单次录制时间超过 12 小时，理想的帧率（0.02 帧）远超出应用最低 15-30 帧的下限。因此，我需要另外找一款稳定、兼容性高、又能自由定制录屏方案的工具，最终找到的是 FFmpeg。</p>
<h2> 为什么 FFmpeg</h2>
<p>FFmpeg 是处理多媒体内容 (如音频、视频、字幕和相关元数据) 的库和工具的集合，支持在 Linux、MacOS 和 Windows 平台上运行。它提供了录制、转换以及流化音视频的完整解决方案。</p>
<p>上文尝试的录屏、视频处理工具几乎都是基于 FFmpeg 而开发的。不仅能实现它们的所有功能，还具有超高的稳定性和兼容性。与 FFmpeg 相比，现成的录屏应用的优势仅在于其美观的界面和简单易上手的录制方案。</p>
<p>若要跳出软件的限制，自由地定制录屏效果，避免莫名其妙的 bug，更底层的 FFmpeg 反而是更稳定有效的方案。命令行录制看起来复杂，但实际上只需要熟悉十几个参数，你就能定制专属录屏方案，个人感觉比熟悉 Bandicam 的软件界面更简单。</p>
<p>以我在 Windows 上的桌面录制方案为例，从多屏幕中指定一个 2K 区域进行录制，并在画面右下角添加 360P 的摄像头录制角度，然后以帧率 0.02 输出监控视频。按 <code>q</code> 则停止录制。</p>
<figure><img src="http://tc.seoipo.com/2022-11-03-13-16-44.png" alt="" tabindex="0" loading="lazy"><figcaption>输出画面如图例</figcaption></figure>
<h2> 录屏准备</h2>
<h3> 配置 FFmpeg</h3>
<ol>
<li>
<p>下载最新版 <a href="https://github.com/BtbN/FFmpeg-Builds/releases/tag/latest" target="_blank" rel="noopener noreferrer">FFmpeg</a>，Windows 环境选择 <code>ffmpeg-master-latest-win64-gpl.zip</code>，GPL 版本包含了所有依赖项。</p>
</li>
<li>
<p>将 FFmpeg 解压到任意文件夹，比如 <code>D:\Backup\Libraries\Documents\ffmpeg</code>。</p>
</li>
<li>
<p>开始栏搜索「编辑系统环境变量」，点击进入「环境变量」。</p>
</li>
<li>
<p>新建用户变量 <code>FFMPEG_HOME</code>，变量值设为刚才的解压路径 <code>D:\Backup\Libraries\Documents\ffmpeg</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-11-01-18-13-49.png" alt="" tabindex="0" loading="lazy"><figcaption>FFmpeg 全局变量设置</figcaption></figure>
</li>
</ol>
<p>配置完成后，在终端输入 ffmpeg 即可启动。</p>
<figure><img src="http://tc.seoipo.com/2022-11-01-18-17-13.png" alt="" tabindex="0" loading="lazy"><figcaption>FFmpeg 配置成功</figcaption></figure>
<h3> 配置视频/音频设备</h3>
<p>FFmpeg 的录制命令 gdigrab 不支持音频录制，也不支持直接调用摄像头，此时需使用开源的 <a href="https://github.com/rdp/screen-capture-recorder-to-video-windows-free/releases" target="_blank" rel="noopener noreferrer">screen-capture-recorder-to-video-windows-free</a> 增强 FFmpeg 的录制功能，其最新版本为 0.12.12。</p>
<p>通过命令 <code>ffmpeg -list_devices true -f dshow -i dummy</code> 查看支持的 Windows DirectShow 输入设备，采集视频和音频设备，包含设备名称，设备类型等信息。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"> 这里得到了视频设备「USB2.0 PC CAMERA」和音频设备「Analogue 1/2 (Audient iD4)」，之后会用到。</a></p><a class="footnote-anchor" id="footnote-ref1">
<figure><img src="http://tc.seoipo.com/2022-11-03-10-33-52.png" alt="" tabindex="0" loading="lazy"><figcaption>查看视频/音频设备列表</figcaption></figure>
</a><h2><a class="footnote-anchor" id="footnote-ref1"></a> 录制屏幕</h2>
<p>从坐标 0:0 开始圈定出一个 2560x1440 的屏幕范围，然后以 每 50 秒截图 1 帧，输出为 mp4 格式的视频，录制命令为 <code>ffmpeg -f gdigrab -r 20/1001 -draw_mouse 1 -offset_x 0 -offset_y 0 -video_size 2560x1440 -i desktop -s 1280x720 output.mp4</code>。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><a class="footnote-anchor" id="footnote-ref2">
<p>以下是录制命令的说明：</p>
</a><ul><a class="footnote-anchor" id="footnote-ref2">
</a><li><a class="footnote-anchor" id="footnote-ref2"><code>-f gdigrab</code> 使用 FFmpeg 内置的 Windows 屏幕录制命令 </a><a href="https://ffmpeg.org/ffmpeg-all.html#gdigrab" target="_blank" rel="noopener noreferrer">gdigrab</a>，录制对象可为全屏、指定范围和指定程序。MacOS 录屏方法为 <a href="https://ffmpeg.org/ffmpeg-devices.html#avfoundation" target="_blank" rel="noopener noreferrer">AVFoundation</a>，Linux 录屏方法为 <a href="https://ffmpeg.org/ffmpeg-all.html#x11grab" target="_blank" rel="noopener noreferrer">x11grab</a>。</li>
<li><code>-r 20/1001</code> 帧率为 0.02，每 50 秒录制一帧。主流大家喜欢用 <code>-r 30</code> 录制，但由于这是用于每日监测，所以我采用了超低帧率。</li>
<li><code>-c:v libx264</code> 是用于设置视频编解码器，一般可不填使用默认配置，<code>-c:a</code> 为音频编码。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></li><a class="footnote-anchor" id="footnote-ref3">
<li><code>-draw_mouse 1</code> 在 gdigrab 录制的视频中显示鼠标。</li>
<li><code>-offset_x 0 -offset_y 0 -video_size 2560x1440</code> 为起始坐标和选定录制范围。坐标可使用截图软件获取，比如我用 Snipaste，点击 F1 后进入截图界面，鼠标经过当前区域就会显示坐标。</li>
<li><code>-s 1280x720</code> 用 scale 方法，设置视频分辨率为 720p。</li>
<li><code>-i desktop</code> 为输入设备，指代显示屏。</li>
<li><code>out.mp4</code> 为输出视频的名字与格式。默认保存在命令运行文件夹，可以在此处设置输出位置，如 <code>D:\Backup\Libraries\Desktop\out.mp4</code>。或使用时间对视频命名，将 <code>out.mp4</code> 替换为 <code>-f segment -segment_time 2 -strftime 1 %Y-%m-%d_%H-%M-%S.mp4</code>，视频样例名为 <code>2022-11-06_10-53-17.mp4</code>。</li>
</a></ul><a class="footnote-anchor" id="footnote-ref3">
</a><p><a class="footnote-anchor" id="footnote-ref3">除上方命令外，FFmpeg 还有许多参数可以设置，比如 <code>-pix_fmt yuv420p -preset ultrafast</code> 提升编码速度，<code>-filter:v 'setpts=0.1*PTS'</code> 减少视频抽样，但 setpts 不是视频加速，对于低帧率的视频影响很小。<sup class="footnote-ref"></sup></a><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"> <sup class="footnote-ref"></sup></a><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></p><a class="footnote-anchor" id="footnote-ref5">
</a><h2><a class="footnote-anchor" id="footnote-ref5"></a> 录制摄像头</h2>
<p>然后，我们使用上方获取的视频设备，即可用摄像头进行录制，如 <code>ffmpeg -f dshow -i video='USB2.0 PC CAMERA' output.mp4</code>。</p>
<p>如果录屏的同时需要录制音频，则在命令中加入之前获取的音频设备，命令变为 <code>ffmpeg -f dshow -i audio='Analogue 1/2 (Audient iD4)' -f dshow -i video='USB2.0 PC CAMERA' output.mp4</code>。</p>
<h2> 输出视频：画中画</h2>
<p>清楚如何用 FFmpeg 录制屏幕、摄像头和音频后，我需要将他们放置于同一画面中，将摄像头画面放在录制画面的右下侧，并用 overlay 方法将其置于屏幕画面的上方，遮挡对应区域。<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup><a class="footnote-anchor" id="footnote-ref6"> <sup class="footnote-ref"></sup></a><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></p><a class="footnote-anchor" id="footnote-ref7">
<p>综合了以上三步，最终的录制命令为：<code>ffmpeg -f gdigrab -r 1 -draw_mouse 1 -offset_x 0 -offset_y 0 -video_size 2560x1440 -i desktop -s 1280x720 -b:v 0 -crf 32 -f segment -segment_time 2 -strftime 1 %Y-%m-%d_%H-%M-%S.mp4 -f dshow -i audio='Analogue 1/2 (Audient iD4)' -f dshow -s 640x480 -i video='USB2.0 PC CAMERA' -filter_complex 'overlay=W-w-1:H-h-50' -y</code>。</p>
<ul>
<li><code>-b:v 0 -crf 32</code> 是将视频比特率设置为最小，同时使用恒定质量，CRF 的范围可以从 0（最佳质量）到 63（最小文件大小）。</li>
<li><code>overlay=W-w-1:H-h-1</code> 这是一个坐标，指浮层放在右下角，距离边缘 1px。</li>
<li><code>-y</code> 遇到选项时，默认执行 yes 命令，比如覆盖同名的视频文件。</li>
</ul>
<p>命令中的录制帧率较低，但不会影响同时录制的音频。之后的录屏只需在终端中运行这段命令，就会自动录制屏幕，在终端上按 <code>q</code> 即可停止录制。使用 FFmpeg 后，我的录屏再也没有莫名其妙的崩溃了。</p>
</a><h2><a class="footnote-anchor" id="footnote-ref7"></a> 常见问题</h2>
<h3> Could not set video options</h3>
<p>报错 <code>Could not set video options</code>，多是由于录制设置的帧率、分辨率超出设备范围造成的。使用命令 <code>ffmpeg -f dshow -list_options true -i video='USB2.0 PC CAMERA' -loglevel debug</code> 检查设备的输出属性，调整录制属性。</p>
<h3> real-time buffer</h3>
<p>报错 <code>real-time buffer [xxxxxx] [video input] too full or near too full (181% of size: 3041280 [rtbufsize parameter])! frame dropped!</code>，解决方案参考 <a href="https://github.com/rdp/screen-capture-recorder-to-video-windows-free/issues/136" target="_blank" rel="noopener noreferrer">issue 136</a>。尽管我仍然遇到了这个错误，但它并未影响录屏的效果。</p>
<h3> 摄像头分辨率错误</h3>
<p>如果摄像头画面出现裁切，分辨率与预期不同，可以检查摄像头录制属性和摄像头应用输出分辨率。例如，部分版本的 SplitCam Video Driver 将外场景尺寸固定为 4:3，导致输出画面被裁剪，因此只能更换其他视频输入源。</p>
<h3> 录制画面偏移</h3>
<p>如果录制画面比例异常或画幅偏移，这可能是 Windows 的屏幕缩放造成的。可以在 ffmpeg.exe 的属性中勾选「高 DPI 缩放替代」来解决这个问题。</p>
<h3> 脚本启动报错</h3>
<p>使用 AutoHotkey 等外部脚本启用录屏命令时，报错 <code>Could not find video device with name [USB2.0]</code>，而正确设备名是「USB2.0 PC CAMERA」。检查录制命令中是否使用了双引号，需将双引号 <code>"</code> 替换为单引号 <code>'</code>。</p>
<h2> 后续</h2>
<p>如果读了 FFmpeg 的文档，就会发现这个工具异常强大，很多采用 FFmpeg 的工具都没有将它的功能性发挥到极致，以比较普适的功能尽可能地换取软件操作的易用性。而对于像我这样有一个比较小众、甚至特殊需求的人来说，已经打包好的图形界面应用就很有可能力有不逮。这时，FFmpeg 这种底层的命令行工具可能就是唯一的选择，而且用了之后会发现，它在功能强大的同时还更加稳定，自定义能力也更强。而且，如果跨过了起初对于命令行的恐惧，理解和上手其实也不算多难。</p>
<p>此外，FFmpeg 的功能不止录屏，它还有诸如连续截图、视频转帧率改大小等多种玩法，非常强大。</p>
<p>前几天，群里有人分享了快速生成 FFmpeg 命令的工具 <a href="https://ffmpeg.guide/" target="_blank" rel="noopener noreferrer">FFmpeg.guide</a>。本以为能帮新手快速入门，使用后却感觉不实用。FFmpeg 最快入门的方法还是得看官方文档，也有一些爱好者整理翻译了相关的中文/视频教程。前期会耗费一些时间，但只要定制好自己要的命令，之后就能一直使用。</p>
<p>当然，本文的目的是分享我监控自己的延伸，分享使用 FFmpeg 录屏的入门方法，而非完全掌握，因此只介绍了录屏相关的核心命令。如果有需要，还是推荐研究一下官方文档，或者跟着我做的试一试，说不定就有新收获。</p>
<p>本文于「<a href="https://sspai.com/post/76637" target="_blank" rel="noopener noreferrer">少数派首发</a>」。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://blog.csdn.net/m0_60352504/article/details/126762161" target="_blank" rel="noopener noreferrer">ffmpeg 录屏命令</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://blog.csdn.net/JineD/article/details/123057086" target="_blank" rel="noopener noreferrer">ffmpeg 基础使用</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="https://ffmpeg.org/ffmpeg-codecs.html#libx265" target="_blank" rel="noopener noreferrer">libx265 编码说明</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote4" class="footnote-item"><p><a href="https://magiclen.org/x265-preset/" target="_blank" rel="noopener noreferrer">x265 的 preset 与编码速度、视频画质以及比特率的关联</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote5" class="footnote-item"><p><a href="https://blog.csdn.net/zhying719/article/details/123059209" target="_blank" rel="noopener noreferrer">FFmpeg 音视频倍速控制</a> <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote6" class="footnote-item"><p><a href="https://www.cnblogs.com/leisure_chn/p/10434209.html" target="_blank" rel="noopener noreferrer">FFmpeg 中 overlay 滤镜用法 - 水印及画中画</a> <a href="#footnote-ref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote7" class="footnote-item"><p><a href="https://blog.csdn.net/guanyijun123/article/details/121270650" target="_blank" rel="noopener noreferrer">ffmpeg 调整缩放裁剪视频的基础知识 (转)</a> <a href="#footnote-ref7" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>「华为没电也能打电话」「iPhone 没电也能刷公交卡」，手机品牌是被绑架还是行业底线就是低？</title>
      <link>https://mars.run/posts/2022-09-07-extreme_branding_thinking_with_mate50.html</link>
      <guid>https://mars.run/posts/2022-09-07-extreme_branding_thinking_with_mate50.html</guid>
      <source url="https://mars.run/rss.xml">「华为没电也能打电话」「iPhone 没电也能刷公交卡」，手机品牌是被绑架还是行业底线就是低？</source>
      <description>华为 Mate50 时隔两年后再次发布，然后就看了一堆标题为「华为 Mate 50 没电也能打电话」的新闻，某度为您找到相关资讯 139 个。看到这标题，我直接傻眼，你们这些媒体是认真的吗？是收了哪边的公关费？ 个人观察</description>
      <category>观察随笔</category>
      <pubDate>Wed, 07 Sep 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>华为 Mate50 时隔两年后再次发布，然后就看了一堆标题为「华为 Mate 50 没电也能打电话」的新闻，某度为您找到相关资讯 139 个。看到这标题，我直接傻眼，你们这些媒体是认真的吗？<strong>是收了哪边的公关费</strong>？</p>
<figure><img src="http://tc.seoipo.com/2022-09-07-11-29-53.png?imageMogr2/thumbnail/!60p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 个人观察</h2>
<p>我的主力机是荣耀 20S，用了三年依旧能打，因此我对华为和鸿蒙充满好感，平常的购买也会倾向国产。但是，半路半粉的我看到这个标题，对这款手机的好感直接 <code>-1</code>。</p>
<p>当然，华为发布会上从没说过「没电也能打电话」，官方说法是「在 1% 低电量下智能启动聚能泵，待机可达三小时或者通话 12 分钟，或亮码 10 次，或扫码 4 次。」这个应急功能实际上是不错的，能缓解充电焦虑。历过数次 2% 直接关机后，我很喜欢这种关机前再榨一把的充电技术。</p>
<p>有种黑的说法是，「只是把电池低电量保护分级罢了，比如，低电量 15% 电池进入保护，那么，后台只需将 85% 的电量重新显示为 100%，即手机显示的 1% 绝不是真实的 1%，小技俩而已。」</p>
<p>而我对这种想法是不信的，如果真是这样的套壳宣传，随便检测都能发现，对于华为来说完全是得不偿失。</p>
<h2> 华为需要极端宣传吗？</h2>
<p>「走极端才能创造话题」是品牌成功和营销的第一步，但这只是第一步。</p>
<p>在美国打压下，华为已经是民族主义的顶流了，正常宣传就能拥有一大堆的拥趸，不必每天打鸡血造话题，更不需要用震惊体来吸引流量。</p>
<p>那为什么华为依然用「没电也能打电话」这类极端的宣传方式？</p>
<p>我猜测是被自媒体绑架了。</p>
<p>除打包合作外，媒体宣传费用是建立在播放、阅读、互动的基础上。即使是固定价格的打包合作，这次的流量也会决定是否有下次的合作。因此，对自媒体来说，它不在乎观众对品牌的观感是否被消耗，它在乎的是流量，是互动。即使有黑子，那也是互动啊。有了互动，平台会持续给宣传载体进行加权并推流，自媒体的议价能力也持续提高。</p>
<figure><img src="http://tc.seoipo.com/2022-09-07-13-24-33.png" alt="" tabindex="0" loading="lazy"><figcaption>宣传流量图</figcaption></figure>
<p>华为总被嘲笑有海军，可能有它自身的原因，但这些极端化媒体的绑架也少不了。</p>
<p>过多的极端宣传，舆论引起的反噬会远超你获得的利益。不是每个人都会仔细查看你的宣传稿，看到上百篇高级写着华为「没电也能打电话」，真有人会以为你有什么黑科技了。</p>
<h2> 手机行业的底线</h2>
<p>原本以为只是华为这样，但 @Dean 提供了另一个梗「iPhone 没电也能刷公交卡」，理由是门禁卡等 NFC 设备没电也能使用。这个梗从 2018 开始每年都要吹一波，门禁卡没电，那么黑科技加持的 iPhone 没电自然也能刷公交卡。这乍听蛮像一回事的，网上也有一堆人相信，但苹果官方文档直接打脸，「即使您的 iPhone 需要充电，您或许也能够在设备上使用“快捷模式”卡片、凭证和钥匙。如果将 iPhone 关机，这项功能将不可用。」</p>
<p>可能事实就像 @VirtualProsperity 和 @弘隐 说的一样，「作为前手机行业营销从业者，很负责的说，几乎任何手机品牌不会被媒体绑架。因为营销的时候媒体只是其中一个环节，但绝非重要到要为媒体去绑架的程度」，「手机行业的营销很多时候是很 LOW 的 LOW 到你不敢想象是真的」。</p>
<p>我也身处广告行业，面对的甲方多为快消品。快消品购买频次高，因此品牌方把品牌商誉和防黑放在首位，而手机更换需要 1-3 年，等到下次购买顾客已经遗忘了前几年的极端宣传。或许手机品牌正因为这点而肆意妄为，一切宣传以传播效果为先，以眼前销量为主。一次两次还行，多次之后你还会上当？还会购买这类品牌？我不会。然而，手机行业的想法可能真的不一样，底线有点低。</p>
<h2> 最后</h2>
<p>如果你是刚起家的自媒体和品牌，尽管去用走极端的宣传方式，毕竟营销不是道德审判，活下去才是第一步。</p>
<p>但如果你已经有一定的知名度了，请先想清楚，你真的需要「走极端」的垃圾流量吗？真的要赌互联网记忆？</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-09-07-11-29-53.png?imageMogr2/thumbnail/!60p" type="image/"/>
    </item>
    <item>
      <title>零基础入门 Stable Diffusion - 无需显卡把 AI 绘画引擎搬进家用电脑</title>
      <link>https://mars.run/posts/2022-09-05-stable_diffusion_ai_painting.html</link>
      <guid>https://mars.run/posts/2022-09-05-stable_diffusion_ai_painting.html</guid>
      <source url="https://mars.run/rss.xml">零基础入门 Stable Diffusion - 无需显卡把 AI 绘画引擎搬进家用电脑</source>
      <description>我从小特别羡慕会画画的伙伴。他们能够将心中的想法画出来，而我最高水平的肖像画是丁老头。在接触 Stable Diffusion 之后，我感觉自己脱胎换骨，给自己贴上了「会画画」的新标签。 丁老头进化旅程 Stable Diffusion 是一个「文本到图像」的人工智能模型，也是唯一一款开源且能部署在家用电脑（对硬件要求不高）上的 AI 绘图工具，可以在 6GB 显存显卡或无显卡（只依赖 CPU）下运行，并在几秒内生成图像，无需预处理和后处理。</description>
      <category>工具</category>
      <pubDate>Mon, 05 Sep 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>我从小特别羡慕会画画的伙伴。他们能够将心中的想法画出来，而我最高水平的肖像画是丁老头。在接触 Stable Diffusion 之后，我感觉自己脱胎换骨，给自己贴上了「会画画」的新标签。</p>
<figure><img src="http://tc.seoipo.com/2022-09-04-11-53-20.png" alt="" tabindex="0" loading="lazy"><figcaption>丁老头进化旅程</figcaption></figure>
<p>Stable Diffusion 是一个「文本到图像」的人工智能模型，也是唯一一款开源且能部署在家用电脑（对硬件要求不高）上的 AI 绘图工具，<strong>可以在 6GB 显存显卡或无显卡（只依赖 CPU）下运行</strong>，并在几秒内生成图像，无需预处理和后处理。</p>
<p>体验 AI 绘图可借助在线工具 <a href="https://huggingface.co/spaces/stabilityai/stable-diffusion" target="_blank" rel="noopener noreferrer">Hugging Face</a>、<a href="https://beta.dreamstudio.ai/" target="_blank" rel="noopener noreferrer">DreamStudio</a> 或<a href="https://wenxin.baidu.com/moduleApi/ernieVilg" target="_blank" rel="noopener noreferrer">百度文心</a>。与本地部署相比，Hugging Face 需排队，生成一张图约 5 分钟；DreamStudio 可免费生成 200 张图片，之后需要缴费；百度文心能用中文生成图片，但仍处于 beta 阶段，未正式商用。更重要的是，这类在线工具对图片的调教功能偏弱，无法批量生成图片，只能测试体验。</p>
<p>如果想生成大量 AI 图片，可以通过 Docker Desktop 将 <a href="https://github.com/AbdBarho/stable-diffusion-webui-docker" target="_blank" rel="noopener noreferrer">Stable Diffusion WebUI Docker</a> 部署到家用电脑，从而免费实现 AI 文字绘画，不再被在线工具所限制。Mac 用户建议选择 Stable Diffusion 的 invoke 分支，部署报错参考 <a href="https://github.com/invoke-ai/InvokeAI/blob/main/docs/installation/INSTALL_MAC.md#doesnt-work-anymore" target="_blank" rel="noopener noreferrer">InvokeAI 文档</a>，<strong>M1/M2 Mac</strong> 推荐使用更简便的 <a href="https://www.charl-e.com/" target="_blank" rel="noopener noreferrer">CHARL-E</a> 或 <a href="https://sspai.com/post/75682" target="_blank" rel="noopener noreferrer">DiffusionBee</a>。</p>
<figure><img src="http://tc.seoipo.com/2022-09-05-16-22-45.png" alt="" tabindex="0" loading="lazy"><figcaption>Stable Diffusion 部署流程</figcaption></figure>
<p>以 Windows 平台为例，本文将依次介绍 Docker 环境配置、Stable Diffusion 安装及基本使用方法。</p>
<h2> Docker 环境配置</h2>
<p>本方案基于 Docker 配置，而 Docker 实质上是在已经运行的 Linux 下制造了一个隔离的文件环境，它必须部署在 Linux 内核的系统上。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"> 因此，Mac 不用特别配置，而 Windows 系统想部署 Docker 就必须需要安装一个虚拟 Linux 环境，<strong>配置 WSL 或是启用 Hyper-V</strong>，二选一即可，推荐使用子系统 WSL（占用系统盘 30G 的空间）。</a></p><a class="footnote-anchor" id="footnote-ref1">
</a><h3><a class="footnote-anchor" id="footnote-ref1"></a> 安装 WSL</h3>
<p>在管理员 PowerShell 输入命令 <code>wsl --install</code>，之后终端会默认安装 Ubuntu。系统下载时间较长，注意别关机。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup><a class="footnote-anchor" id="footnote-ref2"> 安装 Ubuntu 完成后，按提示设置 Ubuntu 账户和密码。</a></p><a class="footnote-anchor" id="footnote-ref2">
</a><h3><a class="footnote-anchor" id="footnote-ref2"></a> 启用 Hyper-V</h3>
<p>以管理员身份打开 PowerShell 控制台，输入命令 <code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All</code>。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup><a class="footnote-anchor" id="footnote-ref3"> 重启电脑后，将开启 Hyper-V。</a></p><a class="footnote-anchor" id="footnote-ref3">
</a><h3><a class="footnote-anchor" id="footnote-ref3"></a> Linux 路径（Windows）</h3>
<p>配置 WebUI Docker 要进入 Linux 环境，因此 Windows 用户需将其路径转换为 Linux 路径，Mac/Linux 用户可忽略本步。</p>
<p>假设容器位于 <code>D:\Desktop\stable-diffusion-webui-docker</code>：</p>
<ol>
<li>把磁盘符号改为小写，转换为 <code>d:\Desktop\stable-diffusion-webui-docker</code></li>
<li>添加 <code>/mnt/</code> 前缀，转换为 <code>/mnt/d:\Desktop\stable-diffusion-webui-docker</code>。因为 Windows 本地磁盘是挂载在 Linux 的 mnt 目录下的。</li>
<li>将反斜扛 <code>\</code> 替换为 <code>/</code>。最终得到 Linux 路径 <code>/mnt/d:/Desktop/stable-diffusion-webui-docker</code>。</li>
</ol>
<h2> 配置 Stable Diffusion</h2>
<h3> 安装 Docker Desktop</h3>
<p>按平台选 <a href="https://docs.docker.com/get-docker/" target="_blank" rel="noopener noreferrer">Docker Desktop</a> 版本，安装后点击左侧的 Add Extensions，推荐 Disk usage 扩展，便于管理 Docker 存储空间。</p>
<h3> 下载 WebUI Docker</h3>
<p>下载 <a href="https://github.com/AbdBarho/stable-diffusion-webui-docker/releases/" target="_blank" rel="noopener noreferrer">Stable Diffusion WebUI Docker 配置包</a>或<a href="https://www.aliyundrive.com/s/EKmK7MGrHdn" target="_blank" rel="noopener noreferrer">阿里云盘聚合版</a>，将其解压到指定路径。聚合版包括相关依赖和模型，因此文件较大。更新 Stable Diffusion WebUI Docker 时，也可按上述步骤重新构建容器。</p>
<h3> 分支介绍</h3>
<p>目前，Stable Diffusion 有 sygil、auto、auto-cpu 和 invoke 四个分支。如果要更换分支，可以修改镜像构建命令 <code>docker compose --profile [ui] up --build</code>，将 <code>[ui]</code> 替换为所需的镜像名即可。原先的 <code>hlky</code> 分支已经更名为 <code>sygil</code>，<code>lstein</code> 分支更名为 <code>invoke</code>。</p>
<ul>
<li><strong>sygil</strong>：界面直观，最高分辨率为 1024x1024，镜像构建命令为 <code>docker compose --profile sygil up --build</code>。</li>
<li><strong>auto</strong>（推荐）：设置模块最丰富，显示绘画过程，支持随机插入艺术家、参数读取和否定描述，最高分辨率为 2048x2048（高分辨率对显存要求更高），镜像构建命令为 <code>docker compose --profile auto up --build</code>。默认使用 6GB 以上的显存，如果你的显卡内存较低，则将配置中的 <code>--medvram</code> 改为 <code>--lowvram</code>。A 卡用户注意修改<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-AMD-GPUs#running-inside-docker" target="_blank" rel="noopener noreferrer">显卡设置</a>。</li>
<li><strong>auto-cpu</strong>：唯一不依赖显卡的分支。如果没有符合要求的显卡，可以使用 CPU 模式，内存配置需满足 16G 以上，构建镜像的命令为 <code>docker compose --profile auto-cpu up --build</code>。</li>
<li><strong>invoke</strong>：cli 端非常成熟，WebUI 端参数较少，能自动读取图片记录，适合无进阶需求的新手和 Mac 用户使用，镜像构建命令为 <code>docker compose --profile invoke up --build</code>。</li>
</ul>
<h3> 构建 Stable Diffusion</h3>
<p>启动 Docker Desktop，打开 WSL（Ubuntu）或 Mac 终端输入路径切换命令 <code>cd /mnt/d/Desktop/stable-diffusion-webui-docker</code>，该路径为 Stable Diffusion WebUI Docker 解压文件目录。然后，输入下方的部署命令。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://tc.seoipo.com/2022-09-04-18-32-31.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>构建完成后，提示访问 <code>http://localhost:7860/</code>，你就可以在本地电脑上用 AI 生成图片了。<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><a class="footnote-anchor" id="footnote-ref4">
</a><h2><a class="footnote-anchor" id="footnote-ref4"></a> 使用说明</h2>
<p>使用界面以 sygil 分支为例，其他分支的主题界面略有不同，但功能上并没有根本性差异。</p>
<h3> 启动 Stable Diffusion</h3>
<ol>
<li>打开 Docker Desktop。</li>
<li>在 Containers 中选中分支容器，点击启动。</li>
<li>浏览器中访问 <code>http://localhost:7860/</code>。</li>
</ol>
<figure><img src="http://tc.seoipo.com/2022-09-04-17-06-27.png" alt="" tabindex="0" loading="lazy"><figcaption>Docker Desktop 界面</figcaption></figure>
<h3> Text-to-Image</h3>
<p>Text-to-Image 是 Stable Diffusion 依据文字描述来生成图像。风景、创意画等崇尚空间结构的画作类型时，优先推荐竖图或者横图。人像类画作推荐 1:1 的方图，否则可能会出现两个或者多个人脸的叠加现象。生成图片的分辨率是有限制的，可以用 Upscale 放大结果图片。</p>
<figure><img src="http://tc.seoipo.com/2022-09-05-08-28-23.png" alt="" tabindex="0" loading="lazy"><figcaption>Text-to-Image 界面</figcaption></figure>
<p>默认使用 Simple 简单模式，点击右侧按钮 Advanced，可查看进阶选项，使用进阶的场景矩阵、面孔修复和分辨率放大等多种功能。</p>
<h3> Image-to-Image</h3>
<p>Image-to-Image 依据文字描述和输入源图，生成相关的图像。该模式若以素描、结构画为来源图，可充分填充图像细节；若以细节充分的照片为来源图，则会输出差异较大的结果。更妙的是，你可以限定区域来生成图像，非常适合图像修改。</p>
<figure><img src="http://tc.seoipo.com/2022-09-04-15-39-00.png" alt="" tabindex="0" loading="lazy"><figcaption>Image-to-Image 界面</figcaption></figure>
<p>CLIP interrogator 会根据图像来生成文字描述。Denoising Strength 指与原图的差异度，建议在 0.75-0.9，魔改图片可以设为 0.5 以下。下图中的 Denoising Strength 只有 0.44，整体图片结构与要素没变，但结果如何你看到了。</p>
<figure><img src="http://tc.seoipo.com/2022-09-04-15-40-26.png" alt="" tabindex="0" loading="lazy"><figcaption>超级魔改图片</figcaption></figure>
<h3> Image Lab</h3>
<p>Image Lab 能批量修正面孔和放大图片分辨率。</p>
<p>Fix Faces 是通过 GFPGAN 模型来改善图片中的面孔，Effect strength 滑块可以控制效果的强度。但实际效果别报太高期许，下图右侧开启了 Fix Faces，只能说勉强有了五官。</p>
<figure><img src="http://tc.seoipo.com/2022-09-04-15-47-14.png" alt="" tabindex="0" loading="lazy"><figcaption>A woman flying in the air laughing</figcaption></figure>
<p>Upscale 放大分辨率功能有 RealESRGAN，GoBIG，Latent Diffusion Super Resolution 和 GoLatent 四种模型，其中的 RealESRGAN 有普通与卡通两种模式，可按需选择。Upscale 图片主要消耗 CPU 与内存资源。</p>
<h2> 文字描述图像</h2>
<p>Stable Diffusion 是以文字内容 (英文) 描绘一个场景或事物，从而决定你的画面中将出现什么。文字描绘是决定图像生成质量的关键因素。</p>
<p>样例：<code>A beautiful painting {画作种类} of a singular lighthouse, shining its light across a tumultuous sea of blood {画面描述} by greg rutkowski and thomas kinkade {画家/画风}, Trending on artstation {参考平台}, yellow color scheme {配色}</code>。<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup></p><a class="footnote-anchor" id="footnote-ref5">
</a><h3><a class="footnote-anchor" id="footnote-ref5"></a> 常规描述</h3>
<ol>
<li>输入图像的对象、主体，比如一只熊猫、一个持剑的战士，<strong>不要描述动作、情绪和事件</strong>；<sup class="footnote-ref"><a href="#footnote6">[6]</a><a class="footnote-anchor" id="footnote-ref6"></a></sup></li><a class="footnote-anchor" id="footnote-ref6">
<li><strong>画作种类</strong>：一幅画（a painting of + raw prompt）还是一张照片（a photograph of + raw prompt），或者 Watercolor（水彩）、Oil Paint（油画）、Comic（漫画）、Digital Art（数码艺术）、Illustration（插画）、realistic painting（写实画）、photorealistic（写实照片）、Portrait photogram（肖像照）、sculpture (雕塑) 等等，画作种类可以叠加。</li>
<li><strong>画家/画风</strong>：建议混合多个画家的风格，比如 <code>Studio Ghibli, Van Gogh, Monet</code>，或描述风格种类，比如 <code>very coherent symmetrical artwork</code>，将作品结构设为「连贯且对称」。</li>
<li><strong>色调</strong>：yellow color scheme 指整个画面的主色调为黄色。</li>
<li><strong>参考平台</strong>：Trending on ArtStation，也可以替换为「Facebook」「Pixiv」「Pixbay」等。
<img src="http://tc.seoipo.com/2022-09-16-22-33-26.png" alt="" title="相同参数下，不同平台生成的图片" loading="lazy"></li>
</a></ol><a class="footnote-anchor" id="footnote-ref6">
</a><h3><a class="footnote-anchor" id="footnote-ref6"></a> 特征描述</h3>
<p>除画面主体外，可以用其他具象物体和形容词来填充画面细节。描述词要具体，讲出你要的物体和它的特征。</p>
<ul>
<li>次要元素：物体不要太多，两到三个就好。若要特别强调某个元素，可以加很多括号或者惊叹号，比如 <code>beautiful forest background, desert!!, (((sunset)))</code> 中会优先体现「desert」和「sunset」元素。</li>
<li>人物特征：<code>detailed gorgeous face, delicate features, elegant, Googly Eyes, Bone, big tits, silver hair, olive skin, Mini smile</code>；</li>
<li>特定润色：<code>insanely detailed and intricate, gorgeous, surrealism, smooth, sharp focus, Painting, Digital Art, Concept Art, Illustration, Artstation, in a symbolic and meaningful style, 8K</code>；</li>
<li>光线描述：<code>Natural Lighting, Cinematic Lighting, Crepuscular Rays, X-Ray, Backlight</code>，或逼真光照 <code>Unreal Engine</code>；</li>
<li>镜头视角：<code>Cinematic, Magazine, Golden Hour, F/22, Depth of Field, Side-View</code>；</li>
<li>画面质量：<code>award winning, breathtaking, groundbreaking, superb, outstanding</code>；</li>
<li>其他描述：细节和纹理、物体占据画面的大小、年代、渲染 / 建模工具等。</li>
</ul>
<h3> 反向描述</h3>
<p>negative prompt（反向描述）可以在 auto/auto-cpu 分支中设置，避免画面出现指定元素。</p>
<ul>
<li>避免畸形：<code>ugly, blurry, out of frame, bad proportions, duplicate, deformed, mutation, morbid, mutilated, bad anatomy, disfigured, extra limbs, armless, legless, cloned face, extra heads, extra legs, extra arms, malformed limbs, amputee, poorly drawn face, poorly drawn hands, poorly drawn feet, fat, long neck, poo art, bad hands, bad art</code>；</li>
<li>避免裸体：<code>nudity, bare breasts</code>。</li>
</ul>
<h3> prompt 参考</h3>
<p>除画面主体描述外，其他要素并非必须。如果你只是简单尝试，输入主体「apples」即可。</p>
<p>如果你不知道生成什么图像，可以使用 <a href="https://promptomania.com/stable-diffusion-prompt-builder/" target="_blank" rel="noopener noreferrer">promptoMANIA</a> 、<a href="https://weirdwonderfulai.art/resources/disco-diffusion-modifiers/" target="_blank" rel="noopener noreferrer">WEIRD WONDERFUL AI ART</a> 按提示组合描述，或参考 AI 图库 <a href="https://prompthero.com/" target="_blank" rel="noopener noreferrer">PromptHero</a> 和 <a href="https://openart.ai/" target="_blank" rel="noopener noreferrer">OpenArt</a> 上其他人分享的成品图和描述文案，比如</p>
<blockquote>
<p>goddess close-up portrait skull with mohawk, ram skull, skeleton, thorax, x-ray, backbone, jellyfish phoenix head, nautilus, orchid, skull, betta fish, bioluminiscent creatures, intricate artwork by Tooth Wu and wlop and beeple, highly detailed, digital painting, Trending on artstation, very coherent symmetrical artwork, concept art, smooth, sharp focus, illustration, 8k</p>
</blockquote>
<h2> Prompt matrix</h2>
<p>Prompt matrix 是 sygil 分支的功能，可以按不同条件组合生成多张相关但不同的画面，适合用于制作视频素材。<sup class="footnote-ref"><a href="#footnote7">[7]</a><a class="footnote-anchor" id="footnote-ref7"></a></sup><a class="footnote-anchor" id="footnote-ref7"> 此时，批次数量的设置会被忽略。</a></p><a class="footnote-anchor" id="footnote-ref7">
</a><h2><a class="footnote-anchor" id="footnote-ref7"></a> Textual Inversion</h2>
<p>Textual Inversion（文本倒置）是 auto/auto-cpu 分支提供的功能，可以个人定制单词在模型中的含义。比如大众模型中医生多是白人男性，而我们可以输入 5 张亚洲女性照片并将其与 doctor 关联，经过 Textual Inversion 处理后的模型生成的医生形象将以亚洲女性为主。<sup class="footnote-ref"><a href="#footnote8">[8]</a><a class="footnote-anchor" id="footnote-ref8"></a></sup></p><a class="footnote-anchor" id="footnote-ref8">
<p>Textual Inversion 定制流程：</p>
<ol>
<li>Preprocess images：设置源图目录和输出目录。</li>
<li>Create embedding（新建嵌入）：建立模型属性。</li>
<li>待续。</li>
</ol>
</a><h2><a class="footnote-anchor" id="footnote-ref8"></a> 常见问题</h2>
<h3> Docker Desktop failed</h3>
<p>未正常安装/关闭 Docker 容器时，可能会报错 <code>Docker Desktop failed to start/stop</code>。</p>
<p>先删除 <code>%AppData%</code> 路径下的 Docker 文件夹，然后在 PowerShell 中输入下方命令，关闭 WSL 和 docker-desktop。最后，手动重启 Docker Desktop。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Docker Desktop cannot start</h3>
<p><code>Hardware assisted virtualization and data execution protection must be enabled in the BIOS</code> 报错说明电脑没开启虚拟化。</p>
<p>在开机的时候多按几次 <code>F2</code> 或 <code>DEL</code> 进入 BIOS，然后设置中开启「Intel Virtual Technology」，AMD 则是将「SVM Support」设置为设置为「Enable」的状态；最后点击「F10」保存退出即可。</p>
<h3> docker 命令失败</h3>
<p><code>The command 'docker' could not be found</code> 说明当前命令行确实 Docker 环境缺失，检查 Docker Desktop 是否启动。</p>
<h3> exited with code 137</h3>
<p><code>exited with code 137</code> 通常意味着内存不足，超出内存导致进程被关闭。建议硬件配置最低为 16G 内存，尤其是使用 auto-cpu 模式时。</p>
<h3> 端口访问被拒</h3>
<p>Docker 容器原本运行正常，端口访问突然被拒绝了，显示 <code>Error response from daemon: Ports are not available: exposing port TCP 0.0.0.0:7860 -&gt; 0.0.0.0:0: listen tcp 0.0.0.0:7860: bind: An attempt was made to access a socket in a way forbidden by its access permissions</code>。</p>
<p>在 Powershell 中输入 <code>netsh int ipv4 show excludedportrange protocol=tcp</code> 检查是否处于被排除端口范围，然后输入 <code>reg add HKLM\SYSTEM\CurrentControlSet\Services\hns\State /v EnableExcludedPortRange /d 0 /f</code> 开启端口。操作完成后，重启电脑即可解封端口。<sup class="footnote-ref"><a href="#footnote9">[9]</a><a class="footnote-anchor" id="footnote-ref9"></a></sup></p><a class="footnote-anchor" id="footnote-ref9">
</a><h3><a class="footnote-anchor" id="footnote-ref9"></a> FileNotFoundError</h3>
<p>再次架构容器时报错 <code>FileNotFoundError: [Errno 2] No such file or directory: '/models/model.ckpt'</code>，这是架构位置错误导致的。此时，我们需要检查是否通过 WSL 输入的架构命令，并且 Stable Diffusion WebUI Docker 解压路径是否配置正确。</p>
<h3> 采样模型</h3>
<p>采样模型是 AI 绘画的核心。2022.09.10 已支持自动下载采样模型，下方列表仅做参考。</p>
<ul>
<li><a href="https://www.googleapis.com/storage/v1/b/aai-blog-files/o/sd-v1-4.ckpt?alt=media" target="_blank" rel="noopener noreferrer">Stable Diffusion v1.4 (4GB)</a>, 将压缩包文件重命名为 <code>model.ckpt</code>。</li>
<li>(可选) <a href="https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.4.pth" target="_blank" rel="noopener noreferrer">GFPGANv1.4.pth (340MB)</a>。</li>
<li>(可选) <a href="https://github.com/xinntao/Real-ESRGAN/releases/download/v0.1.0/RealESRGAN_x4plus.pth" target="_blank" rel="noopener noreferrer">RealESRGAN_x4plus.pth (64MB)</a> 和 <a href="https://github.com/xinntao/Real-ESRGAN/releases/download/v0.2.2.4/RealESRGAN_x4plus_anime_6B.pth" target="_blank" rel="noopener noreferrer">RealESRGAN_x4plus_anime_6B.pth (18MB)</a>。</li>
<li>(可选) <a href="https://heibox.uni-heidelberg.de/f/578df07c8fc04ffbadf3/?dl=1" target="_blank" rel="noopener noreferrer">LDSR (2GB)</a> 和 <a href="https://heibox.uni-heidelberg.de/f/31a76b13ea27482981b4/?dl=1" target="_blank" rel="noopener noreferrer">LDSR 配置</a>，分别重命名为 <code>LDSR.ckpt</code> 和 <code>LDSR.yaml</code>。</li>
</ul>
<h2> 最后</h2>
<p>Stable Diffusion 还不能作为生产力工具，但它使设计变得简单，也为普通人开启了 AI 绘画的可能性。建议大家实际部署玩下，让自己拥有更多的可能。</p>
<p>本文于「<a href="https://sspai.com/post/75544" target="_blank" rel="noopener noreferrer">少数派首发</a>」。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://www.runoob.com/docker/windows-docker-install.html" target="_blank" rel="noopener noreferrer">Windows Docker 安装</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install#install-wsl-command" target="_blank" rel="noopener noreferrer">使用 WSL 在 Windows 上安装 Linux</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="https://docs.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v#enable-hyper-v-using-powershell" target="_blank" rel="noopener noreferrer">在 Windows 10 上安装 Hyper-V</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote4" class="footnote-item"><p><a href="https://github.com/AbdBarho/stable-diffusion-webui-docker/wiki/Setup" target="_blank" rel="noopener noreferrer">Setup Stable Diffusion WebUI Docker</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote5" class="footnote-item"><p><a href="https://www.ifanr.com/app/1484403" target="_blank" rel="noopener noreferrer">外网爆火的 4 款「你说我画」自动作画工具，我们测了下，有 1 款的确超强</a> <a href="#footnote-ref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote6" class="footnote-item"><p><a href="https://www.guokr.com/article/462587/" target="_blank" rel="noopener noreferrer">最时髦的 AI 画画，一文包教包会</a> <a href="#footnote-ref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote7" class="footnote-item"><p><a href="https://github.com/sygil/stable-diffusion#prompt-matrix" target="_blank" rel="noopener noreferrer">stable-diffusion Prompt matrix</a> <a href="#footnote-ref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote8" class="footnote-item"><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Textual-Inversion" target="_blank" rel="noopener noreferrer">Textual Inversion</a> <a href="#footnote-ref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote9" class="footnote-item"><p><a href="https://github.com/docker/for-win/issues/3171#issuecomment-572571882" target="_blank" rel="noopener noreferrer">Windows 端口访问被拒</a> <a href="#footnote-ref9" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>抛弃 Notion 知识管理软件的尝试：把博客变为知识库</title>
      <link>https://mars.run/posts/2022-08-22-learndata_blog_to_knowledge_management.html</link>
      <guid>https://mars.run/posts/2022-08-22-learndata_blog_to_knowledge_management.html</guid>
      <source url="https://mars.run/rss.xml">抛弃 Notion 知识管理软件的尝试：把博客变为知识库</source>
      <description>知识管理/笔记软件越来越多，Notion、Obsidian、Logseq、Roam Research、Evernote、flomo、为知、飞书、语雀……我总在不同应用间徘徊。直到有一次，我突然醒悟：知识管理软件不是管理知识，而是管理笔记。笔记里的知识并不属于你，只有经过消化、应用，才能成为自己的知识。 这么简单的事，我之前却一直没看透，总是把笔记与知识理解划上了等号。当要用到曾摘录的笔记时，就在各类知识管理软件里翻找，折腾一番才找到需要的笔记，有时甚至出现「自己不清楚放在哪里，也不清楚是否有」的情况。记笔记花了一个小时，下次寻找与重新消化又耗费了一个小时，原本为效率而生的知识管理软件变成了时间杀手。</description>
      <category>博客</category>
      <category>头脑驿站</category>
      <pubDate>Mon, 22 Aug 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>知识管理/笔记软件越来越多，Notion、Obsidian、Logseq、Roam Research、Evernote、flomo、为知、飞书、语雀……我总在不同应用间徘徊。直到有一次，我突然醒悟：知识管理软件不是管理知识，而是管理笔记。<strong>笔记里的知识并不属于你，只有经过消化、应用，才能成为自己的知识。</strong></p>
<p>这么简单的事，我之前却一直没看透，总是把笔记与知识理解划上了等号。当要用到曾摘录的笔记时，就在各类知识管理软件里翻找，折腾一番才找到需要的笔记，有时甚至出现「自己不清楚放在哪里，也不清楚是否有」的情况。记笔记花了一个小时，下次寻找与重新消化又耗费了一个小时，原本为效率而生的知识管理软件变成了时间杀手。</p>
<p>另一方面，我们在使用知识管理软件的美观界面和强大功能的同时，也被这些软件所限制，无法完全按照自己的想法输出笔记。比如，你有了一双翅膀，<strong>Markdown 文本是自由的天地，而进入 Notion 则被隔成一个个小房间</strong>，你在房间里待着很舒服，可一旦想去其他房间，就必须脱离 block，不比 Markdown 可以自由飞翔。</p>
<figure><img src="http://tc.seoipo.com/2022-08-22-18-02-07.png" alt="" tabindex="0" loading="lazy"><figcaption>Markdown VS Notion</figcaption></figure>
<p>突破迷思后，我基于 VuePress 和 vuepress-theme-hope 建立了 <a href="https://github.com/rockbenben/LearnData" target="_blank" rel="noopener noreferrer">LearnData</a> 项目，将知识笔记、生活记录、博客和任何认为有价值的记录转换为 Markdown 文本，然后推送到 GitHub 生成 Pages 静态页面，并同步到国内云服务器，形成 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData - 开源笔记</a>。</p>
<figure><img src="http://tc.seoipo.com/2022-08-24-19-14-59.png" alt="" tabindex="0" loading="lazy"><figcaption>笔记/博客自动化发布</figcaption></figure>
<p>LearnData 的笔记和文章格式是 Markdown，输出不受到应用的局限。LearnData 看起来像由文章组成的博客，但它的笔记是独立的知识点，是所有知识的终点站，是整理后的知识库。通过 LearnData 可以搜索和整理知识，不再需要来回翻找。把博客转为知识库后，我明显感到学习和知识使用的效率得到提高，开始摆脱「工具奴隶」和「效率中毒」陷阱。</p>
<figure><img src="http://tc.seoipo.com/2022-08-22-19-28-25.png" alt="" tabindex="0" loading="lazy"><figcaption>笔记 + 文章 = LearnData 知识库</figcaption></figure>
<h2> 为什么用网页管理笔记</h2>
<h3> 公开想法</h3>
<p>知识管理/笔记软件具有天然的私密性，不对外公开。但是，我的笔记大部分来自互联网，需要对谁保密？</p>
<p>我非常赞同 Ray Dalio 在《原则》中提到的「头脑极度透明，公开分享想法」。</p>
<blockquote>
<p>让其他人无比清晰地看到你在做什么、为什么这么做。头脑越透明，越不会自欺，其他人也会给你诚实的反馈。</p>
</blockquote>
<p>作为国内最早一批介绍 Aria2 的人，我曾经写过一篇 Aria2 教程。文章后来被多个网站参考/抄袭，覆盖了 Aria2 某度搜索前三页。在那篇文章的评论区，有好几条留言批评文章逻辑差看不懂的，经常有热心人帮我怼回去。其实，那篇文章的初版真的很糟糕。那篇文章是在大家的反馈下，迭代了三个版本才开始变得完整和逻辑化。这些反馈也是我坚持写博客的原动力。这跟费曼学习法的道理相通，当你写文章帮助其他人时，你也在加深自己对知识的理解。建立 LearnData 不到一个月，但我从中获取的正反馈已超过私有笔记一年的收获。笔记公开化是有百利而无一害。</p>
<h3> 输出分享</h3>
<p>其次，网页形式使笔记更容易分享。除了效率工具的心得，我还在 LearnData 上放置了生活技巧、购物评价和说明书。当家人或朋友需要帮助时，可以直接访问网页，无需安装应用程序或折腾账户分享，比如我经常分享的<a href="https://newzone.top/family/Maintenance.html#%E9%80%9A%E9%A9%AC%E6%A1%B6" target="_blank" rel="noopener noreferrer">通马桶技巧</a> 和疏通器说明书。</p>
<figure><img src="http://tc.seoipo.com/2022-08-19-22-52-29.png" alt="" tabindex="0" loading="lazy"><figcaption>生活知识页面样例</figcaption></figure>
<h3> 被动消化知识</h3>
<p>如果只是公开分享，LearnData 与笔记软件并无区别，它的优点更在于网页有限的笔记数量。虽然网页可以无限地存放笔记，但打开页面只能看到少量的几十篇内容。一旦笔记堆积过多，你就像触发了整理开关似的，对笔记开始消化重构。这就是网页容量上的无限性和视觉/直觉上的有限性，存储是无限但视觉上只能有很小的一块。这里的直觉指，看一眼界面就能找到所需知识点的效果。</p>
<p>比如，当我的代码区块笔记存放超过 10 篇时，每次查找代码笔记都需要 10 选 1，知识查找时间也翻倍了。我意识到节点过多，不能让自己将时间花在查询上。因此，我将代码笔记分为 Basic 和 FrontEnd 两块，总结划分的同时，编程知识也再次得到消化。</p>
<p>而网页与笔记软件的区别也正在于此，LearnData 的主页、侧边栏和导航栏就是能展示的路径，你必须不断对笔记提纯才能提高使用率。否则，如果你只是「积累」笔记而非消化知识，无论使用什么工具和方法，成效都是 0。</p>
<h3> 漂亮决定生产力</h3>
<p>另外，网页可以自由调整外观样式，更换为你喜欢的界面。这也是为什么 LearnData 放弃了初版的 docsify 框架，改为复杂得多的 VuePress 框架。docsify 的官方模板太过简单，没有界面设计模块，难以满足知识管理界面必须直观漂亮的要求，而这一点直接决定了生产力，不能让步。</p>
<p>知识管理/笔记软件将 Markdown 文件作为一个个区块，而网页可以将其视为一体。LearnData 支持多级侧边栏和目录，让阅读和查找变得更加简单。</p>
<figure><img src="http://tc.seoipo.com/2022-08-19-22-42-03.png" alt="" tabindex="0" loading="lazy"><figcaption>LearnData 页面布局</figcaption></figure>
<h2> 为什么不用 Obsidian</h2>
<p>@北鸮 提到「脱离 Notion 可以理解，Markdown 很自由，那为啥不用 Obsidian 呢？也有标题，也有标签，也可以有层级，开源软件还有 Logseq 替代」。</p>
<p>Obsidian 等双链笔记的设计初衷很好，可以让我们自由地在不同知识点间切换，节省搜索和关联的时间。但是，知识点的联系是靠人工打标签来建立的，而不是根据关键词自动建立图谱关系，这与 URL 链接有什么区别？因此，我认为<strong>双链笔记并不适合知识库</strong>（如果对双链笔记理解有误，欢迎纠正）。</p>
<figure><img src="http://tc.seoipo.com/2022-08-19-21-39-41.png?imageMogr2/thumbnail/!60p" alt="" tabindex="0" loading="lazy"><figcaption>我的 Obsidian 图谱，只有右下角简悦抓取的素材有相同标签而聚作一团</figcaption></figure>
<p>建立知识点联系后，双链笔记可以轻松处理成千上万个文档，按条件整合文本，便于阅读。但是，大多数人常用的知识范围不会超过一百。如果你的个人笔记超过千篇，要么你是科研大佬，要么你没有消化这些笔记，只是在记笔记。</p>
<p>除了博客，我只有 37 篇笔记，而且按功能划分为 7 个区块。你觉得这点文件，用树状管理方便，还是用双链笔记打一堆标签来得好？即使有时标题里找不到某个关键词，我也可以用全文搜索达到目的。我个人会倾向于简单方便的树状标题管理。</p>
<h2> 抛弃知识软件 ≠ 不用</h2>
<p>选择 Markdown 就得卸载知识软件吗？</p>
<p>抛弃知识软件并不是不用，而是将其视为知识的中转站。知识软件的趋势是 ALL IN ONE，记录全能成了标榜的主打功能。但是，<strong>光收集而不应用的知识等于零</strong>，只会增加你后续的使用成本。</p>
<p>对我来说，知识软件是功能清晰的素材库。我会不断清空素材库，将小的知识点融入 LearnData 笔记区，成体系内容则写成博客，以确保 LearnData 成为知识库的终点。</p>
<figure><img src="http://tc.seoipo.com/2022-08-21-21-38-47.png" alt="" tabindex="0" loading="lazy"><figcaption>知识类素材库</figcaption></figure>
<ul>
<li>Logseq 将信息节点化，能按日期整合文本，因此我用它来记录笔记，并定期生成周报和月报回顾。</li>
<li>飞书文档自带侧边目录栏，对长文档优化很好，因此我用它记录工作心得，定期形成工作流程并在公司分享。</li>
<li>WonderPen 带多层级标题，当一点头绪方向都没有时，素材就可以直接放这里。</li>
<li>Notion 貌似全能，但其可替代性也最高，知识库迁移到 LearnData 后，Notion 仅用来存放涉及个人信息和不方便转移的旧文档。</li>
<li>Airtable 表格功能最强，虽然已经被其他软件赶上，但前期存储的大量数据仍然放在这里。</li>
<li>SuperMemo 与 Anki 功能类似，可以帮助定期复习需要重复记忆的知识点。</li>
</ul>
<p>而对于 Obsidian，我将其视为笔记的备份站。通过 GoodSync，LearnData 笔记发生修改后，相关更新会实时同步到 Obsidian，完成笔记的备份。期待有一天 Obsidian 完善双链功能，帮助笔记自动打上标签，到时备份笔记就能正式使用，我也能无缝切换到新的知识管理应用。</p>
<h2> 如果你也想试试……</h2>
<p>如何把博客转换为知识库，建立属于你的 LearnData 知识管理网站？</p>
<p>首先，确保你有 GitHub 账号，懂 Markdown 和基础 HTML 知识。然后，按照 <a href="https://newzone.top/#%F0%9F%94%A3-%E9%85%8D%E7%BD%AE-learndata" target="_blank" rel="noopener noreferrer">LearnData 部署教程</a>完成搭建和配置。如果你的笔记已经用 Markdown 格式编写，只需把文档放在 docs 目录下，就可以建立自己的知识库。</p>
<p>笔记结构可以参考我的分类。这没有绝对的界限，只要看到自己觉得有价值的知识点，都可以往 LearnData 里添加。但是，不要全文本地化收藏，简单提取用链接引用即可。除少量精品外，网络时代的文章隔几年就会失效，没必要收藏为一篇篇的笔记。当下次需要使用这个知识点时，再考虑整理事宜，否则，长时间用不到的知识，又有什么整理的价值呢。</p>
<ul>
<li>置顶：日常习惯、健身、阅读；</li>
<li>代码：常用代码的学习和使用笔记；</li>
<li>软件应用：常用应用、Chrome 扩展和相关教程；</li>
<li>页面开发：页面插件和框架生成工具；</li>
<li>网站部署：网站相关的工具和知识收集；</li>
<li>Linux 服务：NAS 和服务器上的后端应用，主要以 Docker 方式部署；</li>
<li>系统问题：Windows 系统优化和相关问题；</li>
<li>生活区：说明书、生活记录和小技巧；</li>
<li>博客区：聚合所有博客文章，以分类、标签、时间轴等方式进行组合。</li>
</ul>
<h2> 最后</h2>
<p>两个月前，我在 WordPress 博客篇中喊着「md2wordpress 是最后一次博客方案」，但由于 WordPress 与 Markdown 各种不兼容，写完没多久就换到支持原生 Markdown 解析的 VuePress。</p>
<p>这次我不想再立 Flag 了，只希望能放过自己。每进行一次知识迁移，真是大伤，休息一段时间吧。</p>
<p>如果你有兴趣尝试 <a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">LearnData</a>，欢迎通过链接访问并复制模板尝试。具体的操作方法与常见问答我都写在博客中。如果有进一步的问题或讨论，欢迎在评论区留言。</p>
]]></content:encoded>
    </item>
    <item>
      <title>新玩意｜智能可折叠综合塑形机</title>
      <link>https://mars.run/posts/2022-08-10-new_stuff_shaping_machine.html</link>
      <guid>https://mars.run/posts/2022-08-10-new_stuff_shaping_machine.html</guid>
      <source url="https://mars.run/rss.xml">新玩意｜智能可折叠综合塑形机</source>
      <description>家里关得太久，体重又涨了 10 斤，再次陷入健身器材焦虑之中。虽然划船机、跑步机、动感单车的结局都是闲鱼出，但我对健身器材的追逐始终没变。这时发现有品众筹的新玩具，两千的综合塑形机。 已闲置于墙角</description>
      <category>购物</category>
      <pubDate>Wed, 10 Aug 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>家里关得太久，体重又涨了 10 斤，再次陷入健身器材焦虑之中。虽然划船机、跑步机、动感单车的结局都是闲鱼出，但我对健身器材的追逐始终没变。这时发现有品众筹的新玩具，两千的综合塑形机。</p>
<figure><img src="https://cdn.sspai.com/2022/08/09/article/74429ae5770ce6fe9b338527105a4744?imageView2/2/w/450/q/90/interlace/1/ignore-error/1" alt="" tabindex="0" loading="lazy"><figcaption>已闲置于墙角</figcaption></figure>
<p>这款塑形机原理与飞鸟龙门架类似，号称可以充当家庭健身房，锻炼全身的肌肉，包括练肩后束、练背、练上胸、练胸中缝、练下胸、练三头、练二头、练核心、练臀大肌、练大腿外侧。</p>
<p>之前我就想练飞鸟，不过龙门架实在太大，而这台机器折叠后只占 0.18 平，还能移动位置，完美匹配屋内使用的需求。虽然这是众筹产品，要等 2 个月，还是心动下单了。</p>
<figure><img src="https://cdn.sspai.com/2022/08/09/37a78274cca974e793582250954c75dc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" tabindex="0" loading="lazy"><figcaption>左侧为龙门架，右侧为塑形机</figcaption></figure>
<p>等待收货时间内，体重继续上涨，总想着健身器材到了就瘦了。但是当收到货后，我终于理解了「<strong>什么叫做众筹</strong>」。</p>
<p>锻炼时必须用身体抵住塑形机，否则机器会跟着你的动作滑走。虽然滑动的原因在于机器较轻，只有 60 KG，但我无法理解的是，厂家连基本的防滑措施也没有做，仿佛生产前从没人真的用过机器。<strong>防滑降噪脚垫在拖动时倒蛮好用的</strong>，拖起来特别丝滑，完全没有阻抗。为了避免塑形机不断滑走，我只能买了个阻门器，装上后就能避免机器乱滑动了。</p>
<figure><img src="https://cdn.sspai.com/2022/08/09/article/6d2731baacf4174c4b7465b11ba715fd?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" tabindex="0" loading="lazy"><figcaption>右下方是红色的阻门器，硬拉终于不会滑了</figcaption></figure>
<p>解决滑动问题后，我打开塑形机官方视频，才发现其中 90% 的动作用不到塑形机，甚至是根本就扯不上关系。买之前，我看着详情页感觉动作特多功能特强，用过后，才发现「这就是所有的动作」。</p>
<figure><img src="https://cdn.sspai.com/2022/08/09/article/db951607296d83ce9a0ff181d724de14?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="" tabindex="0" loading="lazy"><figcaption>官方示例动作图</figcaption></figure>
<p>不过，机器都收货了，动作少也得跟着练。可是，按照塑形机官方教程锻炼一组后，我的肩膀和手臂都被勒伤。原因是与身体接触的部分都是特粗尼龙绳，没有任何缓冲，一用力就容易勒伤。两千的机器连块 PU 皮都要省，可能是想让大家穿着特别严实来锻炼吧。</p>
<p>钢板间隙过大，凳子要蛮力打开，锻炼视频无法暂停，APP 没有语音提示，视频教程无法切换动作，几乎机器到处都有问题，只能将原因归于众筹了，第一款模具真的是无语。</p>
<p>当然，这款塑形机也是有好处的。传统龙门架使用铁块配重，重量最少也得上百公斤，而且占地大无法移动。塑形机采用磁力配重，重量只有 60KG，机器折叠后 0.18 平方，配上<strong>防滑降噪脚垫非常方便移动。</strong></p>
<p>塑形机确实能帮我练到平常少运动的肌肉，目前主要用它练背，等有了新玩具再出闲鱼。</p>
]]></content:encoded>
    </item>
    <item>
      <title>「硬盘布局不受 UEFI 固件支持」－华硕主板解决方案</title>
      <link>https://mars.run/posts/2020-09-22-uefi_asus_board.html</link>
      <guid>https://mars.run/posts/2020-09-22-uefi_asus_board.html</guid>
      <source url="https://mars.run/rss.xml">「硬盘布局不受 UEFI 固件支持」－华硕主板解决方案</source>
      <description>电脑已经用了 5 年，这次 Win10 更新提示「硬盘布局不受 UEFI 固件支持」。本文是华硕主板的解决方案，其他主板顺序不同，但目的都是将启动模式修改为「Only Legecy」。 电脑重启，按 F2 或 DEL 进入 BIOS。选择「高级模式」&amp;gt;「启动」&amp;gt;「CSM」&amp;gt;「启动设备控制」，设置为「仅 Legecy OPROM」。 华硕主板设置截图</description>
      <category>系统</category>
      <pubDate>Tue, 22 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>电脑已经用了 5 年，这次 Win10 更新提示「硬盘布局不受 UEFI 固件支持」。本文是华硕主板的解决方案，其他主板顺序不同，但目的都是将启动模式修改为「Only Legecy」。</p>
<p>电脑重启，按 F2 或 DEL 进入 BIOS。选择「高级模式」&gt;「启动」&gt;「CSM」&gt;「启动设备控制」，设置为「仅 Legecy OPROM」。</p>
<figure><img src="https://pic4.zhimg.com/v2-8a26bd62460f662caad3dba696c54efb_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption>华硕主板设置截图</figcaption></figure>
<p>设置完成后，Win10 就可以正常更新了。</p>
<p>有人反馈「改了启动不了系统」，这是由于系统硬件与你新的设置冲突造成的，并不会造成系统破坏。只需重新进入 BIOS，将设置改回或将 BIOS 还原为默认设置，即可进入系统。</p>
]]></content:encoded>
    </item>
    <item>
      <title>电脑上实现微信双开，无需网页版或第三方软件</title>
      <link>https://mars.run/posts/2017-04-18-wechat_multi_open.html</link>
      <guid>https://mars.run/posts/2017-04-18-wechat_multi_open.html</guid>
      <source url="https://mars.run/rss.xml">电脑上实现微信双开，无需网页版或第三方软件</source>
      <description>由于工作原因，有时候我们需要在电脑上登录多个微信。但微信限制一个客户端只能登陆一个账号，PC 端 + 网页版就成了通用方案，操作效率下降许多。 其实我们还有更好的办法。在微信 PC 版之余，同时安装微信 For Windows，就能实现客户端双开！ 微信 For Windows 安装 打开「运行」对话框，输入并启动「应用商店」或「Microsoft Store」，搜索并安装 微信 For Windows。</description>
      <category>工具</category>
      <pubDate>Tue, 18 Apr 2017 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>由于工作原因，有时候我们需要在电脑上登录多个微信。但微信限制一个客户端只能登陆一个账号，PC 端 + 网页版就成了通用方案，操作效率下降许多。</p>
<p>其实我们还有更好的办法。在微信 PC 版之余，同时安装微信 For Windows，就能实现客户端双开！</p>
<h2> 微信 For Windows 安装</h2>
<p>打开「运行」对话框，输入并启动「应用商店」或「Microsoft Store」，搜索并安装 <code>微信 For Windows</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-06-04-21-30.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>安装好后，就能与微信 PC 版一齐启动，互不干扰。</p>
<figure><img src="http://tc.seoipo.com/2022-05-06-04-21-40.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 开机启动两个微信</h2>
<p>找到系统启动文件夹，文件夹路径为：<code>%AppData%\Microsoft\Windows\Start Menu\Programs\Startup</code>。或者打开「运行」对话框，输入命令「shell:startup」，回车即可打开「启动文件夹」。</p>
<p>将微信 for windows 10 的快捷方式放到「启动」文件夹里。</p>
<figure><img src="http://tc.seoipo.com/2022-05-06-04-23-49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>三开的话，可以在 Microsoft Store 上安装 微信 (UWP) 。</p>
<p>如果还需要继续多开微信，可以参考 @刘舒怡 的方法：</p>
<blockquote>
<p>只要在 2 秒内快速连续双击打开软件，就能弹出很多登录界面，你想登多少个就登多少个</p>
</blockquote>
<p>另外，有人专门开发了微信/QQ 多开的补丁，需要四开以上的可以试试 <a href="https://github.com/huiyadanli/RevokeMsgPatcher" target="_blank" rel="noopener noreferrer">RevokeMsgPatcher</a>。</p>
<p>但多开补丁风险未知，我只用了其中的防撤回功能，需谨慎使用多开补丁。</p>
<p>国内搬运地址：<a href="https://wwz.lanzouf.com/ij0oz05ns3di" target="_blank" rel="noopener noreferrer">RevokeMsgPatcher.v1.5.zip</a></p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-06-04-21-30.png" type="image/png"/>
    </item>
    <item>
      <title>office 2016 安装程序报错解决办法</title>
      <link>https://mars.run/posts/2017-07-28-office_2016_installer_error.html</link>
      <guid>https://mars.run/posts/2017-07-28-office_2016_installer_error.html</guid>
      <source url="https://mars.run/rss.xml">office 2016 安装程序报错解决办法</source>
      <description>重新安装 Office 系统或更改安装组件时，经常提示：「找不到有效的安装源」，但实际这些文件都能在安装包内找到。这是由于注册表和组件而导致的报错，「找不到有效的安装源」并不是真实原因，解决方法查看下方。 解决方法 打开 regedit.exe，在注册表中找到路径 计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\Delivery\SourceEngine\Downloads\{90160000-00BA-0804-1000-0000000FF1CE}-C\Sources\PROPLUS16(RG)-6186D162。 修改 Path 数据，改为安装包位置，比如 F:\5.软件资源\系统重装\SW_DVD5_Office_Professional_Plus_2016_64Bit_ChnSimp_MLF_X20-42426\groove.zh-cn。 在 C 盘建立安装组件： 把安装包路径 \groove.zh-cn\ 下的文件复制到 C:\MSOCache\All Users\{90160000-00BA-0804-1000-0000000FF1CE}-C 目录下 (如果没有这个目录就自己建立)。 把安装包路径 \proplus.ww\ 下的文件复制到 C:\MSOCache\All Users\{90160000-0011-0000-1000-0000000FF1CE}-C。 将需要的程序文件放入 MSOCache 路径 MSOCache 其它的目录下内容同样根据注册表的内容把它指示的光盘中的安装文件复制到相应的目录下。如果没有那个目录就要自己建立，类似的目录一共有 12 个。 如果不想全装可以只选择需要的软件，下面以 Onenote 和 Access 为例。 Onenote 把安装包路径 \onenote.zh-cn\ 下的文件复制到 C:\MSOCache\All Users\{90160000-00A1-0804-1000-0000000FF1CE}-CC。 Access 把安装包路径 \access.zh-cn\ 下的文件复制到 C:\MSOCache\All Users\{90160000-0015-0804-1000-0000000FF1CE}-C。 最后进入安装包运行 setup.exe 安装正常。</description>
      <category>系统</category>
      <pubDate>Fri, 28 Jul 2017 11:02:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>重新安装 Office 系统或更改安装组件时，经常提示：「找不到有效的安装源」，但实际这些文件都能在安装包内找到。这是由于注册表和组件而导致的报错，<strong>「找不到有效的安装源」并不是真实原因</strong>，解决方法查看下方。</p>
<figure><img src="https://pic3.zhimg.com/v2-85bd2a49a47ee6d0c8eade7b3c249516_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 解决方法</h2>
<ol>
<li>
<p>打开 regedit.exe，在注册表中找到路径 <code>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Office\Delivery\SourceEngine\Downloads\{90160000-00BA-0804-1000-0000000FF1CE}-C\Sources\PROPLUS16(RG)-6186D162</code>。</p>
</li>
<li>
<p>修改 Path 数据，改为安装包位置，比如 <code>F:\5.软件资源\系统重装\SW_DVD5_Office_Professional_Plus_2016_64Bit_ChnSimp_MLF_X20-42426\groove.zh-cn</code>。</p>
<figure><img src="https://pic3.zhimg.com/v2-650ede86dd191a8f0a1cd6e9b815377a_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在 C 盘建立安装组件：</p>
<ul>
<li>把安装包路径 <code>\groove.zh-cn\</code> 下的文件复制到 <code>C:\MSOCache\All Users\{90160000-00BA-0804-1000-0000000FF1CE}-C</code> 目录下 (如果没有这个目录就自己建立)。</li>
<li>把安装包路径 <code>\proplus.ww\</code> 下的文件复制到 <code>C:\MSOCache\All Users\{90160000-0011-0000-1000-0000000FF1CE}-C</code>。</li>
</ul>
</li>
<li>
<p>将需要的程序文件放入 MSOCache 路径
MSOCache 其它的目录下内容同样根据注册表的内容把它指示的光盘中的安装文件复制到相应的目录下。如果没有那个目录就要自己建立，类似的目录一共有 12 个。
如果不想全装可以只选择需要的软件，下面以 Onenote 和 Access 为例。</p>
<ul>
<li><strong>Onenote</strong> 把安装包路径 <code>\onenote.zh-cn\</code> 下的文件复制到 <code>C:\MSOCache\All Users\{90160000-00A1-0804-1000-0000000FF1CE}-CC</code>。</li>
<li><strong>Access</strong> 把安装包路径 <code>\access.zh-cn\</code> 下的文件复制到 <code>C:\MSOCache\All Users\{90160000-0015-0804-1000-0000000FF1CE}-C</code>。</li>
</ul>
</li>
<li>
<p>最后进入安装包运行 setup.exe 安装正常。</p>
</li>
</ol>
<p>Office 组件报错大都是由于 MSOCache 目录被删，建议安装 Office 后不要删除该目录。使用优化工具时，要注意保留 MSOCache 目录及其下的文件。</p>
]]></content:encoded>
      <enclosure url="https://pic3.zhimg.com/v2-85bd2a49a47ee6d0c8eade7b3c249516_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>OneNote 2016 无法登陆问题解决</title>
      <link>https://mars.run/posts/2017-07-29-onenote_2016_cannot_be_logged_in.html</link>
      <guid>https://mars.run/posts/2017-07-29-onenote_2016_cannot_be_logged_in.html</guid>
      <source url="https://mars.run/rss.xml">OneNote 2016 无法登陆问题解决</source>
      <description>OneNote 安装后，提示输入账号，但点击「下一步」始终没反应，无法进行登陆。 打开 IE 浏览器，访问 live.com，如果网页提示「登录需要启动 JavaScript」，说明问题的根源出在 IE 的设置上。</description>
      <category>系统</category>
      <pubDate>Sat, 29 Jul 2017 15:19:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>OneNote 安装后，提示输入账号，但点击「下一步」始终没反应，无法进行登陆。</p>
<figure><img src="https://pic4.zhimg.com/v2-d5945359b896ffd09d9973e9597ec06b_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>打开 IE 浏览器，访问 <a href="http://live.com" target="_blank" rel="noopener noreferrer">live.com</a>，如果网页提示「登录需要启动 JavaScript」，说明问题的根源出在 IE 的设置上。</p>
<figure><img src="https://pic1.zhimg.com/v2-cc00b3039f755b92f9ae511c8b7debd0_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>点击「IE 设置」&gt;「Internet 选项」&gt;「安全」&gt;「自定义级别」，然后启用脚本选项的「Java 小程序脚本」和「活动脚本」。</p>
<figure><img src="https://pic2.zhimg.com/v2-717bf3c8b62748b62a04219435b8a75d_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://pic4.zhimg.com/v2-25697b0c27aa8780c532b7a03a78dcbf_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>完成设置后，即可正常登录并打开 OneNote。</p>
<figure><img src="https://pic4.zhimg.com/v2-ff20ef8aa22215cba64b879775dfdf4f_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="https://pic4.zhimg.com/v2-d5945359b896ffd09d9973e9597ec06b_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>电脑关机了，第二天一看确又开着的？让系统正常关机！</title>
      <link>https://mars.run/posts/2017-09-02-forced_shutdown.html</link>
      <guid>https://mars.run/posts/2017-09-02-forced_shutdown.html</guid>
      <source url="https://mars.run/rss.xml">电脑关机了，第二天一看确又开着的？让系统正常关机！</source>
      <description>电脑晚上明明按下关机键，第二天早上却发现电脑开了一晚上？ 这是因为后台应用程序和 GUI 应用程序在阻止或取消关机，系统未能按正常关机。按下列方法授予系统自动关机权限，就能让系统正常关机。 方法如下： 点击「开始菜单」，搜索「Regedit」，进入注册表编辑器。 打开窗口后，在注册表上方菜单中输入 计算机\HKEY_CURRENT_USER\Control Panel\Desktop。 在右侧窗格中找到 AutoEndTasks 键值，如果没有，则新建一个名为 AutoEndTasks 的「字符串值」，并将键值的数值设为 1。AutoEndTasks 表示自动结束失去响应的程序任务，0 为 false，是默认值，表示不自动结束失去响应的程序；1 为 true，则表示电脑会自动结束失去响应的程序。 查找或创建字符串值 WaitToKillAppTimeout，将数值设为 2000。2000 是毫秒，就是当有没有响应的程序时，等待 2 秒后会自动结束相应程序。</description>
      <category>系统</category>
      <pubDate>Sat, 02 Sep 2017 00:38:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>电脑晚上明明按下关机键，第二天早上却发现电脑开了一晚上？</p>
<p>这是因为后台应用程序和 GUI 应用程序在阻止或取消关机，系统未能按正常关机。按下列方法授予系统自动关机权限，就能让系统正常关机。</p>
<p><strong>方法如下：</strong></p>
<ol>
<li>
<p>点击「开始菜单」，搜索「Regedit」，进入注册表编辑器。</p>
</li>
<li>
<p>打开窗口后，在注册表上方菜单中输入 <code>计算机\HKEY_CURRENT_USER\Control Panel\Desktop</code>。</p>
</li>
<li>
<p>在右侧窗格中找到 <code>AutoEndTasks</code> 键值，如果没有，则新建一个名为 <code>AutoEndTasks</code> 的「字符串值」，并将键值的数值设为 <code>1</code>。AutoEndTasks 表示自动结束失去响应的程序任务，0 为 false，是默认值，表示不自动结束失去响应的程序；1 为 true，则表示电脑会自动结束失去响应的程序。</p>
<figure><img src="https://pic3.zhimg.com/v2-c643b9737b35f9dd9a8382c5653e3d3e_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>查找或创建字符串值 <code>WaitToKillAppTimeout</code>，将数值设为 <code>2000</code>。2000 是毫秒，就是当有没有响应的程序时，等待 2 秒后会自动结束相应程序。</p>
</li>
</ol>
<p>操作下，让电脑默认强制关机吧！</p>
<p>——————————</p>
<p>网上流行一种修改「gpedit.msc」来达到快速关机的方法，但试验无效，<strong>不能强制关机</strong>。</p>
<ol>
<li>
<p>点击桌面左下角“windows”图标，选择“运行”选项；</p>
</li>
<li>
<p>进入运行窗口，输入“gpedit.msc”命令，按下回车键确定；</p>
</li>
<li>
<p>打开本地组策略编辑器界面，依次展开“计算机配置——管理模板——系统——关机选项”文件夹；鼠标右击右侧“关闭会阻止或取消关机的应用程序的自动终止功能”选项，接着选择“编辑”功能；将弹出窗口选项更改成“已启用”，然后点击“应用——确定”按钮。</p>
<figure><img src="https://pic4.zhimg.com/v2-4b736585b25509b036935a2f9c37d843_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>但开启后，提示程序没有响应，无法关机。</p>
<figure><img src="https://pic4.zhimg.com/v2-46fafee0cb6e212e793fc80268ab0917_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>修改“gpedit.msc”可以关闭程序的关机权限，但没授予关机对程序的关闭权限，<strong>不能使用</strong>！</p>
]]></content:encoded>
      <enclosure url="https://pic3.zhimg.com/v2-c643b9737b35f9dd9a8382c5653e3d3e_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>加速 SMB 协议，让 PC 变身小型 NAS</title>
      <link>https://mars.run/posts/2017-09-03-smb_lan_sharing.html</link>
      <guid>https://mars.run/posts/2017-09-03-smb_lan_sharing.html</guid>
      <source url="https://mars.run/rss.xml">加速 SMB 协议，让 PC 变身小型 NAS</source>
      <description>Windows 系统开启 SMB 协议： 打开「控制面板」窗口，在「类别」查看方式下单击「程序」。 打开「程序」窗口，单击「启用或关闭 windows 功能」。 打开「windows 功能」窗口，勾选 SMB 直通。 勾选「远程差分压缩 API 支持」。</description>
      <category>系统</category>
      <pubDate>Sun, 03 Sep 2017 20:57:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Windows 系统开启 SMB 协议：</p>
<ol>
<li>
<p>打开「控制面板」窗口，在「类别」查看方式下单击「程序」。</p>
<figure><img src="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「程序」窗口，单击「启用或关闭 windows 功能」。</p>
<figure><img src="https://pic1.zhimg.com/v2-36207f67a5eb3aeb8ee7c1ae855b13dc_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开「windows 功能」窗口，勾选 SMB 直通。</p>
<figure><img src="https://pic3.zhimg.com/v2-b1feb5554e6f1da003266be9cb470dfe_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>勾选「远程差分压缩 API 支持」。</p>
<figure><img src="https://pic4.zhimg.com/v2-c5fc3e3d771b6e4bd2516372c69b340b_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>网上很多教程都要求关闭“远程差分压缩”复选框，这是对“远程差分压缩”的误解。</p>
<p>官方解释：远程差分压缩 (RDC) 功能是一组应用程序编程接口 (API)，这些应用程序可用于确定某个文件集是否发生了变化，如果是，就检测哪部分文件进行了更改。RDC 检测文件中数据的插入、删除和重新排列，使应用程序能够仅复制文件的已更改部分。这对于在有限带宽网络（如广域网 (WAN) 连接）上复制文件非常有用。</p>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-af3e5c2a16a1f245ac6584097c53be60_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2)</title>
      <link>https://mars.run/posts/2017-10-18-light_cat_e8-c-epon_admin.html</link>
      <guid>https://mars.run/posts/2017-10-18-light_cat_e8-c-epon_admin.html</guid>
      <source url="https://mars.run/rss.xml">光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2)</source>
      <description>为什么要获得光猫超级密码？ 它可以用于端口映射（eMule high ID）和桥接模式（路由器掌控拨号，但不兼容固定电话）。网上关于光猫超级密码的获取攻略大多是在 2012-14 年发布的，现在已经不能使用了。 破解测试环境 运营商：上海电信 光猫型号：贝尔 E8-C-EPON 硬件版本：RG201O-CA_V1A2 软件版本：E201OCAA2V11S 光猫超级密码破解 地址栏输入 192.168.1.1，用户名：&amp;lt;光猫背面&amp;gt;，密码：&amp;lt;光猫背面&amp;gt;，登录管理界面。 在浏览器地址栏输入 192.168.1.1/backupsettings.txt，将 backupsettings.txt 文件导出并备份在电脑上。如果无法打开，请改为输入 192.168.1.1/backupsettings.conf，并做好备份。 打开下载的 backupsettings.txt 或 backupsettings.conf 文件，搜索 TeleComAccount，两个 password 之间就是超级密码。超级账号是 telecomadmin。 输入地址 192.168.1.1，用刚获取的超级密码登录，然后可以进行端口映射和设备桥接。</description>
      <category>网络</category>
      <pubDate>Wed, 18 Oct 2017 18:28:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 为什么要获得光猫超级密码？</h2>
<p>它可以用于端口映射（eMule high ID）和桥接模式（路由器掌控拨号，但不兼容固定电话）。网上关于光猫超级密码的获取攻略大多是在 2012-14 年发布的，现在已经不能使用了。</p>
<h2> 破解测试环境</h2>
<p>运营商：上海电信
光猫型号：贝尔 E8-C-EPON
硬件版本：RG201O-CA_V1A2
软件版本：E201OCAA2V11S</p>
<h2> 光猫超级密码破解</h2>
<ol>
<li>
<p>地址栏输入 <code>192.168.1.1</code>，用户名：&lt;光猫背面&gt;，密码：&lt;光猫背面&gt;，登录管理界面。</p>
<figure><img src="https://pic1.zhimg.com/v2-9e43bc86b9095f3f6c2cfa4bd58dcd68_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在浏览器地址栏输入 <code>192.168.1.1/backupsettings.txt</code>，将 <code>backupsettings.txt</code> 文件导出并备份在电脑上。如果无法打开，请改为输入 <code>192.168.1.1/backupsettings.conf</code>，并做好备份。</p>
</li>
<li>
<p>打开下载的 <code>backupsettings.txt</code> 或 <code>backupsettings.conf</code> 文件，搜索 <code>TeleComAccount</code>，两个 password 之间就是超级密码。超级账号是 <code>telecomadmin</code>。</p>
<figure><img src="https://pic3.zhimg.com/v2-ee441dd18cc8e5f6303fdaef82b6d476_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>输入地址 <code>192.168.1.1</code>，用刚获取的超级密码登录，然后可以进行端口映射和设备桥接。</p>
<figure><img src="https://pic1.zhimg.com/v2-31d6bb6b90be541c186a360fe2dd323c_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>如果新安装的光猫无法获取超级密码，可以使用运营商的官方应用进行映射。</p>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-9e43bc86b9095f3f6c2cfa4bd58dcd68_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>光猫改造 篇二：光猫 + 路由器，实现端口映射</title>
      <link>https://mars.run/posts/2017-10-18-light_cat_port_forwarding.html</link>
      <guid>https://mars.run/posts/2017-10-18-light_cat_port_forwarding.html</guid>
      <source url="https://mars.run/rss.xml">光猫改造 篇二：光猫 + 路由器，实现端口映射</source>
      <description>光猫默认没有管理权限，需要先获得光猫的超管密码，参考光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2）。 光猫端口映射步骤： 登陆光猫管理地址 192.168.1.1，应用 → 高级 NAT 设置 →DMZ 设置，启用 DMZ 主机绑定路由器地址（路由器 WAN 口 IP 地址 -192.168.1.X) 登陆路由器管理地址 192.168.X.X。这里已梅林 AC5300 为图例。 在路由器设置选项中找到“端口转发”，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</description>
      <category>网络</category>
      <pubDate>Wed, 18 Oct 2017 22:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>光猫默认没有管理权限，需要先获得光猫的超管密码，参考<a href="https://newzone.top/posts/2017-10-18-Light_cat_E8-C-EPON_admin.html" target="_blank" rel="noopener noreferrer">光猫改造 篇一：超级管理员密码破解（E8-C-EPON RG201O-CA_V1A2）</a>。</p>
<p><strong>光猫端口映射步骤：</strong></p>
<ol>
<li>
<p>登陆光猫管理地址 192.168.1.1，应用 → 高级 NAT 设置 →DMZ 设置，启用 DMZ 主机绑定路由器地址（路由器 WAN 口 IP 地址 -192.168.1.X)</p>
<figure><img src="https://pic2.zhimg.com/v2-658d5433201b79da169a520f4b19d495_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>登陆路由器管理地址 192.168.X.X。这里已梅林 AC5300 为图例。</p>
<figure><img src="https://pic4.zhimg.com/v2-32825a6d3d75f4bfe5668f1b0d6c6683_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在路由器设置选项中找到“端口转发”，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</p>
<figure><img src="https://pic2.zhimg.com/v2-8f3eb2c42fd5d1a98f1345c6a5855e99_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://pic2.zhimg.com/v2-b4f5179278da52409f4a04ce7d139f99_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
]]></content:encoded>
      <enclosure url="https://pic2.zhimg.com/v2-658d5433201b79da169a520f4b19d495_r.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>小型网站管理员，快放弃 CDN！</title>
      <link>https://mars.run/posts/2018-01-19-forget_the_cdn.html</link>
      <guid>https://mars.run/posts/2018-01-19-forget_the_cdn.html</guid>
      <source url="https://mars.run/rss.xml">小型网站管理员，快放弃 CDN！</source>
      <description>CDN 的全称是 Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN 系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet 网络拥挤的状况，提高用户访问网站的响应速度。 国内 CDN 有阿里云、腾讯、百度、网宿、七牛云、又拍云等。</description>
      <category>服务器</category>
      <pubDate>Fri, 19 Jan 2018 12:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>CDN 的全称是 Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN 系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet 网络拥挤的状况，提高用户访问网站的响应速度。</p>
</blockquote>
<p>国内 CDN 有阿里云、腾讯、百度、网宿、七牛云、又拍云等。</p>
<p>这里以阿里云 CDN 为例。我之前使用阿里云全站 CDN，一直以为速度会加快。但命中率只有 7%，在更换为 ECS 后，命中率更降为 2%。</p>
<p>更可怕的是，我提交工单后才得到的事实。<strong>CDN 运营商会根据 DNS 分配就近分配 CDN 节点，抓取网站缓存。</strong></p>
<p>第一反应：「不错啊。如果网站在北京，访客在上海，直接访问上海的节点，速度必然要快一些。」</p>
<p>但事实并没有这么完美。<strong>CDN 是根据本地 DNS 来分配节点。</strong></p>
<p>你从上海放出访问申请，DNS 有可能帮你分配去广东的节点。极端情况下，有可能分配到不同运营商，<strong>导致无法打开网站。</strong></p>
<p>我进行了三个测试，本地网络环境都是上海电信，更换了 DNS 设置。</p>
<p>第一次测试使用 114DNS，分配了广州鹏博士网络，网站打不开。提交工单后，客服反映<strong>这个节点是局域网节点，只有鹏博士网络才能打开。</strong></p>
<p>第二次测试使用电信默认 DNS，分配苏州电信，网站正常。</p>
<p>第三次测试使用阿里云 DNS，分配杭州电信，网站正常</p>
<p>后面两次虽然都能打开网站，但没有一个分配在上海电信，这种加速又能快多少呢？</p>
<p>在网站<strong>配置足够、流量不大（日均访客 1000 以内）</strong> 时，不建议使用全站 CDN，这只会拖累访问体验。小网站只适合将图片部署在 CDN。</p>
]]></content:encoded>
    </item>
    <item>
      <title>雇个机器人帮你干活</title>
      <link>https://mars.run/posts/2018-01-31-hire_a_robot.html</link>
      <guid>https://mars.run/posts/2018-01-31-hire_a_robot.html</guid>
      <source url="https://mars.run/rss.xml">雇个机器人帮你干活</source>
      <description>机器人会取代你工作！ 计算云会取代你工作！ AI 会取代你的工作！ 我相信科技终究有一天会消灭所有工作，但我们这代人的无奈就是很难等到这一天。 作为懒人、宅男，等不及了怎么办？ 既然还没被取代，那就雇个机器人帮你干活！ 我每天第一件事是去各个网站看热门新闻、行业资料。以前是用 RSS，但 RSS 被视为落后，越来越多的网站不再提供 RSS 源。离开 RSS，我就一直没找到更合适的方法去将内容聚合起来，不得不在一个个网站间疲于奔命，逐渐不再看内容。</description>
      <category>自动化</category>
      <pubDate>Wed, 31 Jan 2018 22:51:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>机器人会取代你工作！
计算云会取代你工作！
AI 会取代你的工作！</p>
</blockquote>
<p>我相信科技终究有一天会消灭所有工作，但我们这代人的无奈就是很难等到这一天。</p>
<p>作为懒人、宅男，等不及了怎么办？</p>
<p>既然还没被取代，那就<strong>雇个机器人帮你干活</strong>！</p>
<p>我每天第一件事是去各个网站看热门新闻、行业资料。以前是用 RSS，但 RSS 被视为落后，越来越多的网站不再提供 RSS 源。离开 RSS，我就一直没找到更合适的方法去将内容聚合起来，不得不在一个个网站间疲于奔命，逐渐不再看内容。</p>
<blockquote>
<p>RSS(Really Simple Syndication) 是一种描述和同步网站内容的格式，是使用最广泛的 XML 应用。简易信息聚合（也叫聚合内容）是一种 RSS 基于 XML 标准，在互联网上被广泛采用的内容包装和投递协议。</p>
</blockquote>
<ul class="task-list-container">
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 增加 <code>Alfred</code> 搜索</label></li>
</ul>
<p><strong>直到遇到了我的第一个机器人雇员 <a href="https://github.com/huginn/huginn" target="_blank" rel="noopener noreferrer">Huginn</a></strong></p>
<blockquote>
<p>Huginn 是一个可以创建为你在线执行自动化任务的系统。Huginn 可以读取网页，监测事件并且执行符合你需求的动作。Huginn 通过 agents 创建并执行任务（事件流）。你可以将它看作是一个运行在你自己服务器上的 IFTTT 或 Zapier。</p>
</blockquote>
<p>Huginn 帮我将所有信息聚合成 RSS，24 小时帮我获取我要的内容。</p>
<ul>
<li><a href="http://news.163.com/rank" target="_blank" rel="noopener noreferrer">网易热门新闻</a>：抓取网易顶贴最多的 100 条新闻</li>
<li><a href="http://top.baidu.com/buzz?b=1" target="_blank" rel="noopener noreferrer">百度实时热点</a>：实时更新每天的百度热点</li>
<li><a href="https://www.guokr.com/" target="_blank" rel="noopener noreferrer">果壳网</a>：果壳首页推荐，官方更新速度较慢，刚好可以了解些奇思妙想</li>
<li>工作类：梅花、SocialBeta、数英网、艾瑞网</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>提早晚餐，饿死算逑</title>
      <link>https://mars.run/posts/2018-03-06-no_more_dinner.html</link>
      <guid>https://mars.run/posts/2018-03-06-no_more_dinner.html</guid>
      <source url="https://mars.run/rss.xml">提早晚餐，饿死算逑</source>
      <description>上大学后，每天晚上都打游戏点「叉鸭例牌 + 两碗米饭」，体重成功上到 85KG。后来减肥在 13 年达到历史低点 75KG，但后来持续上升，在 18 年春节达到顶点，93KG，比婚前胖了38 斤。 目前以在家办公为主，很少出门，每天走路都没走多少，更别说运动了。 解决方案： 增加运动：每天划船机 2 公里，后期再逐步加量 调节饮食，多喝水不吃炸鸡 早餐：9 点，牛奶 + 麦片 午餐：12 点，正常 晚餐：4 点，晚餐后不再吃东西</description>
      <category>健康</category>
      <pubDate>Tue, 06 Mar 2018 22:06:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>上大学后，每天晚上都打游戏点「叉鸭例牌 + 两碗米饭」，体重成功上到 85KG。后来减肥在 13 年达到历史低点 75KG，但后来持续上升，在 18 年春节达到顶点，93KG，比婚前胖了<strong>38 斤</strong>。</p>
<p>目前以在家办公为主，很少出门，每天走路都没走多少，更别说运动了。</p>
<p><strong>解决方案：</strong></p>
<ol>
<li>
<p>增加运动：每天划船机 2 公里，后期再逐步加量</p>
</li>
<li>
<p>调节饮食，多喝水不吃炸鸡</p>
<ul>
<li>
<p>早餐：9 点，牛奶 + 麦片</p>
</li>
<li>
<p>午餐：12 点，正常</p>
</li>
<li>
<p>晚餐：4 点，晚餐后不再吃东西</p>
</li>
</ul>
</li>
</ol>
<table>
<thead>
<tr>
<th>日期</th>
<th>历史体重</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>2012 年 9 月 2 日 23:04:51</td>
<td>85KG</td>
<td>今天吃了 3 个苹果，3 块钱煎饼。刚洗完澡</td>
</tr>
<tr>
<td>2013 年 4 月 11 日 21:24:54</td>
<td>86.4KG</td>
<td>脱去外套</td>
</tr>
<tr>
<td>2013 年 9 月 5 日 8 点</td>
<td>81.8kg</td>
<td></td>
</tr>
<tr>
<td>2013 年 10 月 3 日 9:55:02</td>
<td>78.7KG</td>
<td></td>
</tr>
<tr>
<td>2014 年 2 月 25 日春节</td>
<td>83KG</td>
<td>重新开始减重</td>
</tr>
<tr>
<td>2014 年 10 月 19 日 16:50:10</td>
<td>86.1KG</td>
<td></td>
</tr>
<tr>
<td>2016 年 8 月 4 日</td>
<td>88KG</td>
<td></td>
</tr>
<tr>
<td>2018 年 3 月 6 日 晚</td>
<td>91.6 KG</td>
<td></td>
</tr>
<tr>
<td>2020 年 10 月 6 日</td>
<td>95 KG</td>
<td>巅峰，开始营养健康餐</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>新手建站神器 - 宝塔面板</title>
      <link>https://mars.run/posts/2018-04-30-baota_deploy_vps.html</link>
      <guid>https://mars.run/posts/2018-04-30-baota_deploy_vps.html</guid>
      <source url="https://mars.run/rss.xml">新手建站神器 - 宝塔面板</source>
      <description>新手建站最大的痛苦就是代码太多，无法轻松管理。 国产的宝塔面板完美解决新手建站难题，在可视化界面中为服务器安装应用、同步文件、定期执行代码、管理服务。 一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，PHP 多版本共存及切换；自带 LNMP 与 LAMP 宝塔面板界面图</description>
      <category>服务器</category>
      <pubDate>Mon, 30 Apr 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>新手建站最大的痛苦就是代码太多，无法轻松管理。</p>
<p>国产的宝塔面板完美解决新手建站难题，在可视化界面中为服务器安装应用、同步文件、定期执行代码、管理服务。</p>
<blockquote>
<p>一键创建网站、FTP、数据库、SSL；安全管理，计划任务，文件管理，PHP 多版本共存及切换；自带 LNMP 与 LAMP</p>
</blockquote>
<figure><img src="http://tc.seoipo.com/18-4-30/97791164.jpg" alt="宝塔面板界面图" tabindex="0" loading="lazy"><figcaption>宝塔面板界面图</figcaption></figure>
<p>宝塔安装说明：<a href="https://www.bt.cn/bbs/thread-1186-1-1.html" target="_blank" rel="noopener noreferrer">https://www.bt.cn/bbs/thread-1186-1-1.html</a></p>
<h2> 宝塔安装 LNMP 或 LAMP 环境</h2>
<p><strong>LNMP</strong> 和 <strong>LAMP</strong> 都是成熟的建站环境，根据自己的需求二选一即可。
如果有定制需求，可以在左侧「软件管理」中选定要安装的环境
<img src="http://tc.seoipo.com/18-4-30/21951434.jpg" alt="软件安装界面" loading="lazy"></p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/18-4-30/97791164.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Jekyll 篇一：3 分钟搭建 Github Pages 博客</title>
      <link>https://mars.run/posts/2018-05-01-jekyll_blog_on_github_pages.html</link>
      <guid>https://mars.run/posts/2018-05-01-jekyll_blog_on_github_pages.html</guid>
      <source url="https://mars.run/rss.xml">Jekyll 篇一：3 分钟搭建 Github Pages 博客</source>
      <description>一直都想建立自己的个人博客，重装过 N 次 WordPress，又因为种种原因而放弃。 偶然看到了 Hux 的 Jekyll 模板，被漂亮的设计给迷住了。Github Pages 默认支持 Jekyll 环境，并提供了免费空间和流量，因此开始了 Github Pages + Jekyll 之路。 搭建流程 注册并登录 Github。 选择一个喜欢的 Jekyll 模板, 进入对应的 Github 主页。我选了黄玄的 Hux Blog。 点击 Fork, 将喜欢的模板复制到自己的 Github 仓库中。 点击 Setting, 修改 Repository name 为 xxx.github.io, xxx 是你的 Github 用户名。 同一页面选择「Code and automation」&amp;gt;「Pages」&amp;gt;「Build and deployment」&amp;gt;「Branch」, 将 master branch 设为 Github Pages 来源，网站运行目录默认为 /(root)。设置好后，点击「Save」。 最后，按页面提示访问链接 https://xxx.github.io/，新博客搭建完毕。</description>
      <category>博客</category>
      <pubDate>Tue, 01 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>一直都想建立自己的个人博客，重装过 N 次 WordPress，又因为种种原因而放弃。</p>
<p>偶然看到了 Hux 的 Jekyll 模板，被漂亮的设计给迷住了。Github Pages 默认支持 Jekyll 环境，并提供了免费空间和流量，因此开始了 Github Pages + Jekyll 之路。</p>
<h3> 搭建流程</h3>
<ol>
<li>
<p>注册并登录 <a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a>。</p>
</li>
<li>
<p>选择一个喜欢的 <a href="http://jekyllthemes.org/" target="_blank" rel="noopener noreferrer">Jekyll 模板</a>, 进入对应的 Github 主页。我选了黄玄的 <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener noreferrer">Hux Blog</a>。</p>
</li>
<li>
<p>点击 <code>Fork</code>, 将喜欢的模板复制到自己的 Github 仓库中。</p>
<figure><img src="http://tc.seoipo.com/20180505201522.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>点击 <code>Setting</code>, 修改 <code>Repository name</code> 为 <code>xxx.github.io</code>, <code>xxx</code> 是你的 Github 用户名。</p>
<figure><img src="http://tc.seoipo.com/20180505202201.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>同一页面选择「Code and automation」&gt;「Pages」&gt;「Build and deployment」&gt;「Branch」, 将 master branch 设为 Github Pages 来源，网站运行目录默认为 <code>/(root)</code>。设置好后，点击「Save」。</p>
<figure><img src="http://tc.seoipo.com/2022-08-08-11-42-16.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>最后，按页面提示访问链接 <code>https://xxx.github.io/</code>，新博客搭建完毕。</p>
<figure><img src="http://tc.seoipo.com/20180505202859.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180505201522.png" type="image/png"/>
    </item>
    <item>
      <title>Jekyll 扩展篇：服务器搭建 Jekyll 博客</title>
      <link>https://mars.run/posts/2018-05-02-jekyll_blog_on_vps.html</link>
      <guid>https://mars.run/posts/2018-05-02-jekyll_blog_on_vps.html</guid>
      <source url="https://mars.run/rss.xml">Jekyll 扩展篇：服务器搭建 Jekyll 博客</source>
      <description>Github 墙得太厉害，就想在服务器上自建 Jekyll 环境，用上 Travis CI 和 Docker 后才发现完全没必要。。 Jekyll 环境官方安装指南： 使用 RVM 安装 Ruby (rvm -&amp;gt; ruby -&amp;gt; gem 网上大量教程就不赘述了) 安装 jekyll：gem install jekyll。 进入 jekyll 网站，执行命令行 jekyll build，生成 Jekyll 静态网页。 网站的执行目录需要指定在 _site，这是 Jekyll 生成的静态页面目录。之后每次更新博客，都需要进入服务器执行一次 jekyll build，重新生成静态页面。</description>
      <category>博客</category>
      <pubDate>Wed, 02 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Github 墙得太厉害，就想在服务器上自建 Jekyll 环境，用上 Travis CI 和 Docker 后才发现完全没必要。。</p>
<p>Jekyll 环境官方<a href="https://www.jekyll.com.cn/docs/quickstart/" target="_blank" rel="noopener noreferrer">安装指南</a>：</p>
<ol>
<li>
<p>使用 RVM 安装 Ruby (rvm -&gt; ruby -&gt; gem 网上大量教程就不赘述了)</p>
</li>
<li>
<p>安装 jekyll：<code>gem install jekyll</code>。</p>
</li>
<li>
<p>进入 jekyll 网站，执行命令行 <code>jekyll build</code>，生成 Jekyll 静态网页。</p>
</li>
<li>
<p>网站的执行目录需要指定在 <code>_site</code>，这是 Jekyll 生成的静态页面目录。之后每次更新博客，都需要进入服务器执行一次 <code>jekyll build</code>，重新生成静态页面。</p>
</li>
</ol>
<p>愿意折腾的话，可以使用 Travis CI 和 Docker 完成全自动化更新。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Jekyll 篇二：自动部署服务器博客</title>
      <link>https://mars.run/posts/2018-05-03-jekyll_blog_autodeploy.html</link>
      <guid>https://mars.run/posts/2018-05-03-jekyll_blog_autodeploy.html</guid>
      <source url="https://mars.run/rss.xml">Jekyll 篇二：自动部署服务器博客</source>
      <description>Github 上搭建 Jekyll 是最方便的，空间免费、流量免费、部署简单。但 Github 属于被墙状态，将博客部署在那，速度实在太慢。在玩了几天后，我开始在服务器上直接搭建 Jekyll 博客。 服务器搭建需要人工执行 jekyll build, 完全背离了最开始搭建博客的初衷-方便。之后结合了网络上多个自动化方案，选定入门成本最低的 Github -&amp;gt; Travis CI -&amp;gt; Docker-&amp;gt; VPS。</description>
      <category>博客</category>
      <pubDate>Thu, 03 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Github 上搭建 Jekyll 是最方便的，空间免费、流量免费、部署简单。但 Github 属于被墙状态，将博客部署在那，速度实在太慢。在玩了几天后，我开始在服务器上直接搭建 Jekyll 博客。</p>
<p>服务器搭建需要人工执行 <code>jekyll build</code>, 完全背离了最开始搭建博客的初衷-<strong>方便</strong>。之后结合了网络上多个自动化方案，选定入门成本最低的 <code>Github</code> -&gt; <code>Travis CI</code> -&gt; <code>Docker</code>-&gt; <code>VPS</code>。</p>
<h2> 搭建思路</h2>
<ul>
<li>本地提交博客 Markdown 文件 到 Github 源文件 repository</li>
<li>Github 触发 Travis CI 执行自动编译</li>
<li>Travis CI 编译后 push 静态文件到 Github 静态文件 repository</li>
<li>Travis CI 通知 Docker 重建镜像（预计 5 分钟）</li>
<li>服务器休眠 5 分钟后，Travis CI 通知服务器</li>
<li>服务器拉取最新镜像，然后停止并删除原容器，用最新镜像重建容器</li>
</ul>
<h2> Travis CI 基本配置</h2>
<p>Travis CI 对于开源项目完全免费，并且能自动感知到 Github 的 commit，帮我们解决了静态文件生成问题。</p>
<p>先用 Github 登录 Travis CI，然后点击最右侧的头像，开启想要使用 Travis CI 的项目</p>
<figure><img src="http://tc.seoipo.com/20180504135244.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>点击设置按钮，进入项目设置</p>
<figure><img src="http://tc.seoipo.com/20180504135541.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 静态文件更新</h2>
<p>Travis CI push 静态文件到 Github 通过 Github 的 token 实现授权，push 代码如下</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>$DEPLOY_TOKEN</code> 是从 Github 授权得到的，「setting」&gt;「Developer settings」&gt;「Personal access tokens」&gt;「Generate new token」, 然后给于相应权限即可，<code>admin:public_key, admin:repo_hook, repo</code>。</p>
<figure><img src="http://tc.seoipo.com/20180504153729.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>进入 Travis 的 repo 项目，「More options」&gt;「Settings」&gt;「Environment Variables」, 新建一个变量<code>DEPLOY_TOKEN</code>，把 Github 的授权 token 保存在里面。</p>
<figure><img src="http://tc.seoipo.com/20180504154229.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Travis CI 提供了存放加密文件的方式，参考 <a href="https://docs.travis-ci.com/user/encrypting-files/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p>
<h2> Dockerfiles 设置</h2>
<p>在 Github 中新建一个 repository，可以命名为 <code>dockerfiles</code>, 专门用来存储 Docker 镜像的设置文件。在 <code>dockerfiles</code> 新建文件夹 <code>jekyll</code> ，并在 <code>jekyll</code> 中新建文件 <code>Dockerfile</code>, 放入以下代码：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 Travis CI 生成的静态文件推送到 Github，博客的 docker 化部署，采用 nginx + 静态文件 方式</p>
<p>样例 Dockerfile: <a href="https://github.com/mritd/dockerfile/tree/master/mritd" target="_blank" rel="noopener noreferrer">https://github.com/mritd/dockerfile/tree/master/mritd</a></p>
<h2> Docker 镜像设置</h2>
<p>注册并登录 <a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">Docker Hub</a>，点击 「Create」&gt;「Create Automated Build」&gt;「Create Auto-build Github」, 选择之前新建的 <code>dockerfiles</code> repository。</p>
<p>建立 Automated Build 镜像后，进入 <code>Build Seeting</code>, 点击 Trigger，建立第一个 Docker 镜像。</p>
<figure><img src="http://tc.seoipo.com/20180504161016.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>然后在「Building Settings」&gt;「Build Triggers」&gt;「Activate Triggers」，复制 Trigger URL。</p>
<figure><img src="http://tc.seoipo.com/20180504161245.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>然后在服务器上执行下列代码，拉取并<strong>启动 Docker 镜像</strong>。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>--name=jekyll_blog 中的 <code>jekyll_blog</code> 是对容器的命名，方便后续操作。</p>
<p>-d 让容器在后台运行。</p>
<p>-p 映射端口：80 是容器内对应的端口，39100 是主机端口，也就是最终用户访问的端口，本端口可以自由选择。</p>
<p>--privileged=true 关闭安全权限，否则你容器操作文件夹没有权限。</p>
<p>--<code>rockben/jekyll:latest</code> 是容器名称，可省略 <code>:latest</code>。</p>
<p>运行容器后，访问 <code>seoipo.com:39100</code> 就可以看到镜像网页。如果每次用端口访问，可以在域名 DNS 中设置显性 URL，将二级域名 <code>blog.seoipo.com</code> 指向 <code>seoipo.com:39100</code></p>
<h3> Docker 扩展阅读</h3>
<p><strong>Docker 命令符</strong>：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>docker run</code> 进阶设置</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>-v 挂载目录/root/software 本地目录 /software 容器目录，在创建前容器是没有 software 目录的，docker 容器会自己创建
--<code>/bin/bash</code> 这是 CMD 命令行，可不填</p>
<h2> SSH 免密码登录</h2>
<p>Travis 不能利用用户名和密码登陆，我们只有利用<strong>SSH 免密登陆</strong>服务器，更新并重启 Docker 容器。</p>
<p><strong>1、生成公钥/私钥对</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2、将生成的公钥添加为受信列表</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3、在.ssh 目录下新增配置文件 config</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 <code>i</code> 进入编辑状态，输入下列代码。完毕后，点击 <code>Esc</code> 退出编辑状况，然后输入 <code>:wq!</code> 强制保存后离开文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4、在 Linux 服务器安装 Travis 客户端</strong>（rvm -&gt; ruby -&gt; gem -&gt;Travis）</p>
<p><code>gem install travis</code></p>
<p><strong>5、服务器创建空白<code>.travis.yml</code>文件</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6、服务器登录 Travis，添加加密的私钥至代码仓库</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>成功加密后，会提示</strong></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p><strong>将新生成的 <code>id_rsa.enc</code> 文件上传到 Github 源文件 repository 中</strong></p>
</li>
<li>
<p>将 <code>.travis.yml</code> 中的 <code>openssl aes-256-cbc -K $encrypted_5c280379e96c_key -iv $encrypted_5c280379e96c_iv -in id_rsa.enc -out ~/.ssh/id_rsa -d</code> 放入最终的 <code>.travis.yml</code> 文件中。</p>
<figure><img src="http://tc.seoipo.com/20180504184508.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
<h2> travis.yml 配置</h2>
<p>当项目内存在 <code>.travis.yml</code> 文件时，Travis CI 会按照其定义完成自动 build 过程，所以开启了上述配置以后还要在 Github 的 Jekyll 源文件项目下创建 <code>.travis.yml</code> 配置文件。</p>
<figure><img src="http://tc.seoipo.com/20180504141827.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><code>.travis.yml</code> 配置文件内容样例如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体 .travis.yml 配置，请参考 <a href="https://docs.travis-ci.com/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p>
<p>参考资料&amp;引用：</p>
<ul>
<li>
<p><a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener noreferrer">Jekyll 模板 hux blog</a></p>
</li>
<li>
<p><a href="https://zhuanlan.zhihu.com/p/25066056" target="_blank" rel="noopener noreferrer">一点都不高大上，手把手教你使用 Travis CI 实现持续部署</a></p>
</li>
<li>
<p><a href="https://mritd.me/2017/02/25/jekyll-blog-+-travis-ci-auto-deploy/" target="_blank" rel="noopener noreferrer">Jekyll + Travis CI 自动化部署博客</a></p>
</li>
<li>
<p><a href="https://juejin.im/post/5a9e1a5751882555712bd8e1" target="_blank" rel="noopener noreferrer">Travis-CI 自动化测试并部署至自己的 CentOS 服务器</a></p>
</li>
<li>
<p><a href="https://segmentfault.com/a/1190000011218410" target="_blank" rel="noopener noreferrer">Travis CI 系列：自动化部署博客</a></p>
</li>
<li>
<p><a href="https://juejin.im/post/5a2941ad6fb9a045030ffc95" target="_blank" rel="noopener noreferrer">SSH 免密登录远程服务器</a></p>
</li>
<li>
<p><a href="http://www.cnblogs.com/scofi/p/6617394.html" target="_blank" rel="noopener noreferrer">SSH 公钥登录原理</a></p>
</li>
<li>
<p><a href="https://blog.csdn.net/yinweitao12/article/details/73165914" target="_blank" rel="noopener noreferrer">如何将 dockerhub 与 github 关联</a></p>
</li>
<li>
<p><a href="http://www.cnblogs.com/YasinXiao/p/7736075.html" target="_blank" rel="noopener noreferrer">docker 启动，端口映射，挂载本地目录</a></p>
</li>
<li>
<p><a href="https://yeasy.gitbooks.io/docker_practice/" target="_blank" rel="noopener noreferrer">Docker — 从入门到实践</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180504135244.png" type="image/png"/>
    </item>
    <item>
      <title>怎么用 Adobe Audition 快速剪切音频？</title>
      <link>https://mars.run/posts/2018-05-04-audition_cut_mp3.html</link>
      <guid>https://mars.run/posts/2018-05-04-audition_cut_mp3.html</guid>
      <source url="https://mars.run/rss.xml">怎么用 Adobe Audition 快速剪切音频？</source>
      <description>很久没剪音频了，突然被朋友拜托，才发现 Audition 剪切音频有多非人性，操作跟 10 年前的软件相比，没任何进步。 简易剪切流程 在 Audition 中打开音频文件。 选定要删除的音频部分：左键按住在删除音频起点，然后拉动到删除音频重点，放开左键。 点击右键，选择删除。刚才选择的音频就被删除了。 在混音器中点击，用鼠标滚轮放大音频的可选间距，重复上面 3 步，继续剪切音频。 精修完后，点击「文件」&amp;gt;「另存为」，就可以保存我们的音频文件了。</description>
      <category>工具</category>
      <pubDate>Fri, 04 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>很久没剪音频了，突然被朋友拜托，才发现 Audition 剪切音频有多非人性，操作跟 10 年前的软件相比，没任何进步。</p>
<h2> 简易剪切流程</h2>
<ol>
<li>
<p>在 Audition 中打开音频文件。</p>
<figure><img src="http://tc.seoipo.com/20180504152233.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>选定要删除的音频部分：左键按住在<strong>删除音频起点</strong>，然后拉动到<strong>删除音频重点</strong>，放开左键。</p>
<figure><img src="http://tc.seoipo.com/20180504151226.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>点击右键，选择<strong>删除</strong>。刚才选择的音频就被删除了。</p>
<figure><img src="http://tc.seoipo.com/20180504151306.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>在混音器中点击，用<strong>鼠标滚轮</strong>放大音频的可选间距，重复上面 3 步，继续剪切音频。</p>
<figure><img src="http://tc.seoipo.com/20180504151816.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>精修完后，点击「文件」&gt;「另存为」，就可以保存我们的音频文件了。</p>
</li>
</ol>
<p>PS：原本是想用时间来截取音频，但找遍 Audition 菜单，也没发现能按时间来剪切的选项。最后还是靠鼠标完成的。。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180504152233.png" type="image/png"/>
    </item>
    <item>
      <title>抛弃迅雷，Aria2 新手入门</title>
      <link>https://mars.run/posts/2018-05-15-aria2_a_new_download_tool.html</link>
      <guid>https://mars.run/posts/2018-05-15-aria2_a_new_download_tool.html</guid>
      <source url="https://mars.run/rss.xml">抛弃迅雷，Aria2 新手入门</source>
      <description>迅雷已经用了 10 年，一直将它视为最快也最方便的下载工具，也一直购买迅雷会员。 但是，迅雷已经堕落。 thunder:\\ 迅雷专属链接越来越少，下载基本是磁力链接和 BT 种子； 迅雷会员加速不再有效，大量资源速度为 0（会员虽然还有一年多，但已经没用了）； 迅雷关闭旧版功能，迫使大家升级迅雷 U 享版，但升级后，发现新版迅雷会强制接收所有下载。 有些小文件，我只想用浏览器直接下载，而一些不想下载的链接，也会被迅雷非常敏感地感应到，强制下载，真的特别流氓。</description>
      <category>工具</category>
      <pubDate>Tue, 15 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>迅雷已经用了 10 年，一直将它视为最快也最方便的下载工具，也一直购买迅雷会员。</p>
<p>但是，<strong>迅雷已经堕落</strong>。</p>
<ul>
<li><code>thunder:\\</code> 迅雷专属链接越来越少，下载基本是磁力链接和 BT 种子；</li>
<li>迅雷会员加速不再有效，大量资源速度为 0（会员虽然还有一年多，但已经没用了）；</li>
<li>迅雷关闭旧版功能，迫使大家升级迅雷 U 享版，但升级后，发现新版迅雷会强制接收所有下载。
<blockquote>
<p>有些小文件，我只想用浏览器直接下载，而一些不想下载的链接，也会被迅雷非常敏感地感应到，强制下载，真的特别流氓。</p>
</blockquote>
</li>
</ul>
<h2> 为什么选择 Aria2？</h2>
<p>Aria2 下载功能比较全面，支持 BT 和磁力链接，性能也相当不错，<strong>速度不比迅雷慢</strong>。</p>
<p>虽然没有原生应用界面，配置也比较麻烦，但这些可以通过懒人包轻松解决。</p>
<h2> 真·懒人包</h2>
<p>Aria2 真·懒人包无需配置，下载即可使用，适合不想折腾的人。</p>
<p>真·懒人包：<a href="https://www.seoipo.com/software/Aria2/" target="_blank" rel="noopener noreferrer">https://www.seoipo.com/software/Aria2/</a></p>
<p>将懒人包解压到 <code>D:\Aria2</code>，点击 <code>AriaNg 启动器.exe</code> 即可开始下载。两个启动器任选其一，都集成了后端服务和前端 UI，无需启动其他程序。包内均为开源绿色软件，不涉及任何隐私和安装，AutoHotkey 插件容易被误报。</p>
<p>2023.01.12 重构启动器，更新 Aria2 1.36.0，AriaNG 1.3.2，并增加 bt-tracker 至 137 个，以便 BT 和磁力链接提速。</p>
<p>新增功能：任务开始、完成和出错时，会推送系统通知，可在 aria2.conf 的特别功能区块中设置通知的开启与关闭，此功能由 @我真的爱发明 提出。</p>
<hr>
<p>如果不想使用懒人包，想了解 Aria2 背后的设置，请往下看配置步骤。</p>
<h2> Aria2 设置</h2>
<ol>
<li>
<p>下载 <a href="https://aria2c.com/archiver/aria2.zip" target="_blank" rel="noopener noreferrer">Aria2 快速设置包</a>或<a href="https://wwz.lanzouf.com/iROZE0eai3xe" target="_blank" rel="noopener noreferrer">备用链接</a>，将其解压到存放文件夹，例如 <code>D:\Aria2</code>。</p>
</li>
<li>
<p>官网下载 <a href="https://github.com/aria2/aria2/releases" target="_blank" rel="noopener noreferrer">Aria2 程序</a>（Windows 选择 <a href="https://github.com/aria2/aria2/releases/download/release-1.36.0/aria2-1.36.0-win-64bit-build1.zip" target="_blank" rel="noopener noreferrer">aria2-1.36.0-win-64bit-build1.zip</a>），然后解压到快速设置包的存放文件夹中，替代其中的 <code>aria2c.exe</code> 程序。</p>
<figure><img src="http://tc.seoipo.com/20191210232831.png" alt="" tabindex="0" loading="lazy"><figcaption>GitHub 官方仓库下载 Aria2</figcaption></figure>
</li>
<li>
<p>点击 <code>aria2.exe</code> 启动 aria2，系统托盘区会同步出现应用图标。</p>
</li>
<li>
<p>参照<a href="https://wwz.lanzouf.com/iwv6f0eadq9i" target="_blank" rel="noopener noreferrer">懒人包配置</a>修改 <code>aria2.conf</code>，更多设置参考 <a href="https://aria2.github.io/manual/en/html/aria2c.html" target="_blank" rel="noopener noreferrer">aria2c 官方文档</a>。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><a class="footnote-anchor" id="footnote-ref1">
<p>修改默认下载目录：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改服务器默认连接数：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>开启 BT 下列设置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></a><p><a class="footnote-anchor" id="footnote-ref1">在文档最后一行添加 BT trackers，最新 trackers 列表从 </a><a href="https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_best.txt" target="_blank" rel="noopener noreferrer">ngosang/trackerslist</a> 中获取，tracker 中用 <code>,</code> 隔开。</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其他设置不常用，有时间的话，你可以慢慢调整。</p>
</li>
<li>
<p>Aira2 没有原生应用界面，可以输入网址 <code>http://aria2c.com</code> 使用第三方下载界面。该页面会自动与本地的 aira2c 程序关联，实现下载管理，建议把其收藏到书签，以便日后使用。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><a class="footnote-anchor" id="footnote-ref2">
</a></li><a class="footnote-anchor" id="footnote-ref2">
</a></ol><a class="footnote-anchor" id="footnote-ref2">
</a><p><a class="footnote-anchor" id="footnote-ref2">如果出现「Aria2 RPC 服务器错误」，请检查 JSON-RPC Path 是否为 <code>http://localhost:6800/jsonrpc</code>。如果依然报错，则说明 aria2.conf 配置有误，建议下载 </a><a href="https://www.seoipo.com/software/Aria2/" target="_blank" rel="noopener noreferrer">真·懒人包</a>。</p>
<h2> Aria2 进阶</h2>
<h3> 更换 Aria2 界面</h3>
<p><a href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener noreferrer">AriaNg</a> 的界面类似传统的下载软件，使用简单。</p>
<figure><img src="http://tc.seoipo.com/20180516104758.png" alt="" tabindex="0" loading="lazy"><figcaption>AriaNg 界面</figcaption></figure>
<p>使用方法：下载并解压 <a href="https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip" target="_blank" rel="noopener noreferrer">AriaNg</a>，运行目录下的 index.html，打开 Aria2 WebUI 界面，将页面链接收藏到书签以便后续使用 Aria2。</p>
<p>如果 AriaNg 页面出现报错，则从页面左侧选择「AriaNg 设置」&gt;「RPC」，检查 RPC 地址，默认地址为 <code>localhost:6800</code>。</p>
<h3> Aira2 下载预热</h3>
<p>Aira2 下载预热是 BT 下载前的必备步骤，否则速度容易很慢。</p>
<p>找一个热门影视的 BT 种子（注意是种子，不是磁力链接），然后下载并挂着做种。过几个小时后，退出 Aria2 或者等待 Aria2 会话自动保存，你会发现 dht.dat 从空文件变成有数据了，之后的 BT 下载速度就会快很多。</p>
<blockquote>
<p>很多 BT 客户端一样，Aria2 有个 dht.dat 文件 (开启 ipv6 还有个 dht6.dat)，这玩意用于存储一种叫做 DHT Routing Table 的东西，DHT 网络由无数节点组成，你接触到一个后能通过它接触到更多的节点，Aria2 我记得是有内置的节点，但是！如果你在 Aria2 第一次运行的时候直接下载磁力链接或者冷门种子，你很可能遇到连 MetaData 都无法获取的情况，这就是因为第一次只是初始化 dht.dat 文件，你本地不存在 DHT Routing Table 的缓存，所以你无法从 DHT 网络中获取足够的数据。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><a class="footnote-anchor" id="footnote-ref3">
</a></blockquote><a class="footnote-anchor" id="footnote-ref3">
</a><h3><a class="footnote-anchor" id="footnote-ref3"></a> 接管浏览器下载</h3>
<p>如果想用 Aria2 接管浏览器的下载管理，需安装插件/扩展。</p>
<ul>
<li>Chrome：安装<a href="https://chrome.google.com/webstore/detail/nimeojfecmndgolmlmjghjmbpdkhhogl" target="_blank" rel="noopener noreferrer">添加到 aria2</a> 扩展。下载包可以用<a href="https://wwi.lanzoui.com/i4Fmeetsdaj" target="_blank" rel="noopener noreferrer">国内搬运地址</a>，或是懒人包内置文件。
如果浏览器无法直接安装 <code>.crx</code> 格式的扩展，可以将文件解压到新文件夹「xxx」，然后在浏览器的地址栏输入 <code>chrome://extensions/</code> 开启开发者模式，点击加载已解压的扩展程序，选中刚才解压的文件夹「xxx」。</li>
<li>Firefox：安装 <a href="https://addons.mozilla.org/en-US/firefox/addon/aria2-integration/" target="_blank" rel="noopener noreferrer">Aria2 Download Manager Integration</a> 扩展，可参考下方的 Chrome 扩展设置进行配置。</li>
</ul>
<p>安装完「添加到 aria2」扩展后，右键扩展图标，点击「选项」&gt;「设置」，设置如下：</p>
<ul>
<li>最小监视：<code>10</code> M，低于该容量将由浏览器下载。如果 Aria2 要接手所有下载，可以将最小监视设为 <code>0.001</code>。</li>
<li>JSON-RPC 链接：<code>http://localhost:6800/jsonrpc</code>。</li>
</ul>
<p>注意：「添加到 aria2」图标显示的 <code>en</code> 表示处于开启状态，<code>dis</code> 表示处于关闭状态，点击图标可以切换使用状态。</p>
<h2> Aria2 启动器</h2>
<p>每次启动 Aria2 下载时，都需要执行两个文件：打开 WebUI 链接和 aria2c，这有点麻烦。因此，我使用 AutoHotkey 做了一个启动器，它可以检测 aria2c 运行状态，并一键打开下载界面，以简化 Aria 的启动过程。</p>
<p>下载 <a href="https://wwz.lanzouf.com/iqud50ebl06d" target="_blank" rel="noopener noreferrer">Aria2 启动器</a>，然后将其解压到 Aria2 运行目录，例如 <code>D:\Aria2</code>。Aria2 启动器提供了两种方式，只需选择其中一种即可。</p>
<ul>
<li><strong>AriaNg 启动器</strong>（推荐）：使用 AriaNg 本地版作为下载管理界面。在使用该启动器前，需将 <a href="https://github.com/mayswind/AriaNg-DailyBuild/archive/master.zip" target="_blank" rel="noopener noreferrer">AriaNg</a> 解压到 Aria2 目录下，并将文件夹名改为 AriaNg，然后打开文件 index.html，该文件位于 <code>Aria2\AriaNg\index.html</code>。</li>
<li><strong>Aria2c 启动器</strong>：将 <code>https://aria2c.com</code> 作为默认下载界面。该设置较旧，需确保 JSON-RPC Path 为 <code>http://localhost:6800/jsonrpc</code>。</li>
</ul>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/30666881" target="_blank" rel="noopener noreferrer">Aria2 基础上手指南</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://www.appinn.com/aria2-in-windows-setup/" target="_blank" rel="noopener noreferrer">aria2 懒人安装教程</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="http://www.senra.me/solutions-to-aria2-bt-metalink-download-slowly/" target="_blank" rel="noopener noreferrer">解决 Aria2 BT 下载速度慢没速度的问题</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>真· Airtable 3 分钟菜鸟入门</title>
      <link>https://mars.run/posts/2018-05-24-airtable_noob.html</link>
      <guid>https://mars.run/posts/2018-05-24-airtable_noob.html</guid>
      <source url="https://mars.run/rss.xml">真· Airtable 3 分钟菜鸟入门</source>
      <description>Airtable 是新型的表格制作工具，可以把文字、图片、链接、文档等各种资料聚合在一起，成为我们的私人定制资料库。 之前好几次看到介绍 Airtable 的文章，但每次的尝试都被繁多的模板给击败了。 这次换了个思路，抛弃既有的官方模板。从空白表格开始，小白也可以 3 分钟入门 Airtable。 建立空白 Airtable 注册并登录 Airtable。 点击「Add a base」, 然后选择「Start from scratch」, 从空白表格启动。 进入刚刚新建的表格，界面跟 Excel 蛮像的。 在第一栏单击右键，唤出 field 栏目选项，可以更改 filed 栏目类型和名称。 filed 栏目类型可以设为文本、链接、附件、单选多选等多种玩法，在使用中可以多试试。</description>
      <category>工具</category>
      <pubDate>Thu, 24 May 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Airtable 是新型的表格制作工具，可以把文字、图片、链接、文档等各种资料聚合在一起，成为我们的<strong>私人定制资料库</strong>。</p>
<p>之前好几次看到介绍 Airtable 的文章，但每次的尝试都被繁多的模板给击败了。</p>
<p>这次换了个思路，抛弃既有的官方模板。从空白表格开始，小白也可以 3 分钟入门 Airtable。</p>
<h2> 建立空白 Airtable</h2>
<ol>
<li>
<p>注册并登录 <a href="https://airtable.com/" target="_blank" rel="noopener noreferrer">Airtable</a>。</p>
</li>
<li>
<p>点击「Add a base」, 然后选择「Start from scratch」, 从空白表格启动。
<img src="http://tc.seoipo.com/20180524095238.png" alt="" loading="lazy"></p>
</li>
<li>
<p>进入刚刚新建的表格，界面跟 Excel 蛮像的。
<img src="http://tc.seoipo.com/20180524095557.png" alt="" loading="lazy"></p>
</li>
<li>
<p>在第一栏单击右键，唤出 field 栏目选项，可以更改 filed 栏目类型和名称。
<img src="http://tc.seoipo.com/20180524095935.png" alt="" loading="lazy"></p>
</li>
<li>
<p>filed 栏目类型可以设为文本、链接、附件、单选多选等多种玩法，在使用中可以多试试。
<img src="http://tc.seoipo.com/20180524100437.png" alt="" loading="lazy"></p>
</li>
</ol>
<p>更多玩法，参考<a href="https://support.airtable.com/hc/en-us/articles/203229705" target="_blank" rel="noopener noreferrer">官方说明文档</a>。</p>
<h2> 应用 Airtable</h2>
<p>既然 Airtable 是个资料库，我们需要先为这个资料库准备个主题。</p>
<p><strong>想想自己有什么需求，怎么的资料库才可以帮助你？</strong></p>
<p>我喜欢玩一些新奇软件。这些软件的入门学习大多会超过 3 小时。从产生学习冲动到实际学习，中间间隔一个月。等实际学习入门的时候，收集的信息早已忘光，不得不重新收集。</p>
<p>因此，我需要一个能汇集「入门学习资源」的资料库。</p>
<ol>
<li>
<p>按资源需求，列出应用名、资源说明、链接、进度。</p>
<figure><img src="http://tc.seoipo.com/20180524102247.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>点击「Group」，按类别重组表格。</p>
<figure><img src="http://tc.seoipo.com/20180524102641.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>选定后，表格会按类型分开显示，界面简洁许多。（Group 是我个人最爱的功能，太漂亮了）。</p>
<figure><img src="http://tc.seoipo.com/20180524102740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>当表格越来越多后，我们可以使用「Hide fields」和「Filter」来只显示需要的元素。</p>
</li>
</ol>
<p><strong>Hide fields</strong> : 取消后，隐藏不需要的 fields 栏目。</p>
<figure><img src="http://tc.seoipo.com/20180524104251.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>Filter</strong> 和 <strong>Group</strong> 功能类似，都是通过特定条件，过滤出符合要求的 fields</p>
<figure><img src="http://tc.seoipo.com/20180524105035.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>以上的内容虽然和 Excel 有些不同，但大都能通过 Excel 实现。<strong>Airtable 与众不同的是视图变形功能，同样的内容却能通过不同的图表形式传达出来。</strong></p>
<h2> Airtable 变形记</h2>
<p>Airtable 拥有 <strong>Grid、Form、Calendar、Gallery、Kanban</strong> 这 5 种视图。</p>
<figure><img src="http://tc.seoipo.com/20180524110129.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Grid view 是默认的格子视图，我们接下来一个个了解另外 4 种视图。</p>
<h3> Form view 表单视图</h3>
<p>Form view 表单视图是调查问卷（协同工作？）工具。其他人可以通过加密链接，为你添加表格数据。</p>
<figure><img src="http://tc.seoipo.com/20180524112225.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>打开加密链接后，看到如下视图，填写后发送。</p>
<figure><img src="http://tc.seoipo.com/20180524112534.png?imageMogr2/thumbnail/!60p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>切换到 Grid view，刚才添加的数据已经添加如表格了。</p>
<figure><img src="http://tc.seoipo.com/20180524112659.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> Calendar view 日期视图</h3>
<p>Calendar view 日期视图是日程安排表，一定要包含<strong>日期 field</strong>。</p>
<figure><img src="http://tc.seoipo.com/20180524111028.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>所有的项目都按设定日期排列了。这个表格的第一列名字大都相同，所以看不出区别。</p>
<figure><img src="http://tc.seoipo.com/20180524111455.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>点击单个事件，会有具体说明。</p>
<figure><img src="http://tc.seoipo.com/20180524111716.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> Gallery view 卡片视图</h3>
<p>Gallery view 把每行数据变成一个卡片。</p>
<figure><img src="http://tc.seoipo.com/20180524113003.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> Kanban view 看板视图</h3>
<p>Kanban view 将数据重新排列为一个个看板。 (Kanban 这名字简洁明了，Airtable 开发团队里有国人？)</p>
<p>如果表中没有「Single select」或「Collaborator」的 fields , Airtable 会提示新建 field 来命名看板，普通用户建议选第一个「<strong>Create a new single select field</strong>」。</p>
<figure><img src="http://tc.seoipo.com/20180524113513.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>Kanban 的界面和操作类似于 Trello，手动拖动卡片就可以操作。</p>
<figure><img src="http://tc.seoipo.com/20180524114139.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>参考资料：</p>
<ul>
<li><a href="http://www.playpcesor.com/2016/06/airtable.html" target="_blank" rel="noopener noreferrer">Airtable 最強大線上表格製作，免費資料庫重整任何事</a></li>
<li><a href="https://sspai.com/post/36402" target="_blank" rel="noopener noreferrer">重新想像 Excel 该有的样子：Airtable 评测</a></li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180524095238.png" type="image/png"/>
    </item>
    <item>
      <title>光猫改造 篇三：百卓 GP1700 进阶设置 - 端口映射</title>
      <link>https://mars.run/posts/2018-06-08-baizhuo_gp1700.html</link>
      <guid>https://mars.run/posts/2018-06-08-baizhuo_gp1700.html</guid>
      <source url="https://mars.run/rss.xml">光猫改造 篇三：百卓 GP1700 进阶设置 - 端口映射</source>
      <description>宽带升级到千兆网络后，电信全面更新了光猫，关闭了的光猫管理地址，只能通过官方 APP「网络管家」管理光猫。 电信「网络管家」功能 重启光猫； 开启 UPnp； 开启 DMZ 主机，建立端口映射； 建立虚拟服务器，内网穿透访问。 开启光猫端口映射、内网穿透 登录路由器管理地址 192.168.X.X。这里以梅林 AC5300 为图例。 打开电信官方 APP「网络管家」，依次点击中间的「路由器图标」→「高级设置」→「DMZ 主机」，启用 DMZ 主机并绑定刚刚获得的路由器 WAN IP 地址 - 192.168.1.X 。 光猫内网穿透：当外网要访问局域网（192.168.1.3:1194）时，进入网络管家中「高级设置」→「虚拟服务器」，添加内部 IP 192.168.1.3、内部端口号 1194 和服务器端口号。服务器端口号可根据需求设置。假设光猫 IP 为 180.154.109.143，外网只需访问「180.154.109.143:12345」就可以计入局域网（192.168.1.3:1194）。 路由端口转发：进入路由器「高级设置」-「外部网络（WAN）」-「端口转发」，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</description>
      <category>网络</category>
      <pubDate>Fri, 08 Jun 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>宽带升级到千兆网络后，电信全面更新了光猫，关闭了的光猫管理地址，只能通过官方 APP「网络管家」管理光猫。</p>
<h2> 电信「网络管家」功能</h2>
<ul>
<li>重启光猫；</li>
<li>开启 UPnp；</li>
<li>开启 DMZ 主机，建立端口映射；</li>
<li>建立虚拟服务器，内网穿透访问。</li>
</ul>
<h2> 开启光猫端口映射、内网穿透</h2>
<ol>
<li>
<p>登录路由器管理地址 192.168.X.X。这里以梅林 AC5300 为图例。</p>
<figure><img src="http://tc.seoipo.com/20180608183159.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>打开电信官方 APP「网络管家」，依次点击中间的「路由器图标」→「高级设置」→「DMZ 主机」，启用 DMZ 主机并绑定刚刚获得的路由器 WAN IP 地址 - 192.168.1.X 。</p>
<figure><img src="http://tc.seoipo.com/20180608185618.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p><strong>光猫内网穿透</strong>：当外网要访问局域网（192.168.1.3:1194）时，进入网络管家中「高级设置」→「虚拟服务器」，添加内部 IP 192.168.1.3、内部端口号 1194 和服务器端口号。服务器端口号可根据需求设置。假设光猫 IP 为 180.154.109.143，外网只需访问「180.154.109.143:12345」就可以计入局域网（192.168.1.3:1194）。</p>
<figure><img src="http://tc.seoipo.com/20190330175000.png?imageMogr2/auto-orient/strip|imageView2/2/h/600" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p><strong>路由端口转发</strong>：进入路由器「高级设置」-「外部网络（WAN）」-「端口转发」，按要求设置端口。我这是 eMule TCP 和 UDP 转发，设置完成后，变成 High ID。</p>
</li>
</ol>
<p>PS. 新版光猫<strong>不需要管理员权限</strong>就可以获取端口映射、DMZ、UPnp 等权限，但光猫桥接功能也很难破解了。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180608183159.png" type="image/png"/>
    </item>
    <item>
      <title>koolproxy 无法下载 https 证书？</title>
      <link>https://mars.run/posts/2018-06-10-koolproxy_https.html</link>
      <guid>https://mars.run/posts/2018-06-10-koolproxy_https.html</guid>
      <source url="https://mars.run/rss.xml">koolproxy 无法下载 https 证书？</source>
      <description>koolproxy 是可以运行在路由器上的广告屏蔽软件，跟其他最大的区别就是支持 https , 能有效屏蔽最新的视频应用广告（播个 10 分钟视频，广告 60 秒。。。） 为了屏蔽 https 广告，koolproxy 需要在每台设备上安装 https 证书。但我访问证书地址 110.110.110.110 时，却被提示无法访问。 这是我们需要进入路由器后台，对证书地址进行操作。 进入路由器后台，一般设置-Tools-Run Cmd ,运行命令 iptables -t nat -I PREROUTING -d 110.110.110.110 -p tcp --dport 80 -j REDIRECT --to 3000。重启后，该命令失效。</description>
      <category>网络</category>
      <pubDate>Sun, 10 Jun 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>koolproxy 是可以运行在路由器上的广告屏蔽软件，跟其他最大的区别就是支持 https , 能有效屏蔽最新的视频应用广告（播个 10 分钟视频，广告 60 秒。。。）</p>
<p>为了屏蔽 https 广告，koolproxy 需要在每台设备上安装 https 证书。但我访问证书地址 110.110.110.110 时，却被提示无法访问。</p>
<p>这是我们需要进入路由器后台，对证书地址进行操作。</p>
<p>进入路由器后台，一般设置-Tools-Run Cmd ,运行命令 <code>iptables -t nat -I PREROUTING -d 110.110.110.110 -p tcp --dport 80 -j REDIRECT --to 3000</code>。重启后，该命令失效。</p>
<figure><img src="http://tc.seoipo.com/20180610143928.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>运行命令后，就可以下载 https 证书，之后的设置参考 <a href="http://koolshare.cn/thread-80430-1-1.html" target="_blank" rel="noopener noreferrer">Merlin 版 Koolproxy3.1.x 使用教程</a>。</p>
<p>保存 Koolproxy 设置后，一定要<strong>重启路由</strong>，否则可能部分屏蔽设置未成功生效。</p>
<p><strong>参考资料：</strong></p>
<ul>
<li><a href="https://github.com/koolproxy/merlin-koolproxy" target="_blank" rel="noopener noreferrer">koolproxy 项目地址</a></li>
<li><a href="http://koolshare.cn/thread-81712-1-1.html" target="_blank" rel="noopener noreferrer">失效链接</a></li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180610143928.png" type="image/png"/>
    </item>
    <item>
      <title>客厅、书房、卧室，任意收看 IPTV 直播！（上海电信）</title>
      <link>https://mars.run/posts/2018-06-19-iptv_direckly.html</link>
      <guid>https://mars.run/posts/2018-06-19-iptv_direckly.html</guid>
      <source url="https://mars.run/rss.xml">客厅、书房、卧室，任意收看 IPTV 直播！（上海电信）</source>
      <description>回放服务器已屏蔽公网 IP 的访问，仅限 vlan85 的 B 平面专网 IP 访问，本文章已失效！ 参考：电信公网疑似已屏蔽回放源 IP · Issue #28 电视 + 机顶盒 + IPTV 盒，家里的遥控器越来越多。为了摆脱众多的遥控器，开始使用 lucifersun 的直播源（原理上仅限上海电信）。</description>
      <category>网络</category>
      <pubDate>Tue, 19 Jun 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>回放服务器已屏蔽公网 IP 的访问，仅限 vlan85 的 B 平面专网 IP 访问，本文章已失效！</strong></p>
<p>参考：<a href="https://github.com/lucifersun/China-Telecom-ShangHai-IPTV-list/issues/28" target="_blank" rel="noopener noreferrer">电信公网疑似已屏蔽回放源 IP · Issue #28</a></p>
<hr>
<p>电视 + 机顶盒 + IPTV 盒，家里的遥控器越来越多。为了摆脱众多的遥控器，开始使用 lucifersun 的直播源（原理上<strong>仅限上海电信</strong>）。</p>
<p>lucifersun 抓取了<a href="https://github.com/lucifersun/China-Telecom-ShangHai-IPTV-list" target="_blank" rel="noopener noreferrer">上海电信 IPTV 视频回放源</a>。借助直播源地址，我们可以在 PC、电视、手机上直接看电视直播。</p>
<blockquote>
<p>这个播放列表使用 IPTV 的频道 回放 功能。IPTV 直播用的是专网组播，无法直接通过 Internet 播放。
因为不是所有频道都支持回放，所以这个列表里的频道 必然少于 IPTV 的直播频道。
还有部分频道的回放地址播放错误，所以也没有收录。</p>
</blockquote>
<p>lucifersun 的 IPTV 直播源比电视直播<strong>慢 15 秒</strong>，对普通用户来说已经足够了。</p>
<h2> 提取直播源列表</h2>
<p>进入<a href="https://htmlpreview.github.io/?https://raw.githubusercontent.com/lucifersun/China-Telecom-ShangHai-IPTV-list/master/IPTV.html" target="_blank" rel="noopener noreferrer">上海电信 IPTV 视频流地址</a>。点击「生成 txt 内容」，然后复制下方的<strong>视频直播源列表</strong>，保存为 tv.txt，并将 tv.txt 文本转为 <strong>ANSI 编码</strong>（避免节目名会出现中文乱码）。</p>
<figure><img src="http://tc.seoipo.com/20180619170944.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 电视盒子直播</h2>
<ol>
<li>
<p>电视盒子上安装 APP-「超级直播」。</p>
</li>
<li>
<p>进入「超级直播」应用后，点击「设置」-「二维码扫一扫 开启更多功能」，调出隐藏管理地址 <code>192.168.2.203:9188</code>。</p>
</li>
<li>
<p>用与电视盒子位于同一局域网的电脑或手机访问<strong>隐藏管理地址</strong>，点击「我」-「上次自定义 (tv.txt)」-「上传」，上传刚保存好的 tv.txt。</p>
<figure><img src="http://tc.seoipo.com/20180619164137.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>将「超级直播」的播放列表切换到<strong>自定义</strong>，直接观看导入的电视节目。</p>
</li>
</ol>
<h2> PC 端电视直播</h2>
<ol>
<li>
<p>PC 端安排 <a href="http://www.potplayer.org/" target="_blank" rel="noopener noreferrer">Potplayer</a>。</p>
</li>
<li>
<p>复制节目 rtsp 直播源链接，打开 Potplayer , 右键单击主界面 &gt;「打开」&gt;「打开剪贴板」。</p>
<figure><img src="http://tc.seoipo.com/20180619140722.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>这样就可以在 PC 端看电视了。</p>
<p>参考资料：</p>
<ul>
<li><a href="http://koolshare.cn/thread-133246-1-1.html" target="_blank" rel="noopener noreferrer">丢了你的 iptv 吧！上海电信 IPTV 直播源</a></li>
<li><a href="https://github.com/lucifersun/China-Telecom-ShangHai-IPTV-list" target="_blank" rel="noopener noreferrer">上海电信 IPTV 视频流项目主页</a></li>
<li><a href="http://htmlpreview.github.io/?https://raw.githubusercontent.com/lucifersun/China-Telecom-ShangHai-IPTV-list/master/iptvplayseek.html" target="_blank" rel="noopener noreferrer">上海电信 IPTV 视频流地址</a></li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20180619170944.png" type="image/png"/>
    </item>
    <item>
      <title>RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</title>
      <link>https://mars.run/posts/2018-10-07-huginn_scraping_any_website.html</link>
      <guid>https://mars.run/posts/2018-10-07-huginn_scraping_any_website.html</guid>
      <source url="https://mars.run/rss.xml">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</source>
      <description>烧制网页 RSS 源，主要有 FEED43 和 Huginn 两种方法。 FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。 Huginn：自由度高，能自定义抓取频率、内容结构、js 结果、输出样式等；需要搭建服务器，学习 Huginn 抓取规则。 Huginn 准备工作 准备 NAS 或 Debian/Ubuntu 环境的服务器； 参考 deploy Huginn inside of Docker、installation guide for Debian/Ubuntu 来搭建 Huginn。 注册 PhantomJs Cloud ,然后将 API key 保存在 Huginn 的 Credentials 中。很多网站是用 JS 加载动态内容，因此需要 PhantomJs Cloud 来抓取页面 JS 缓存。免费版每天限制抓取 500 次页面，需求不大可建立多个账号使用不同 API key，足够个人使用。</description>
      <category>自动化</category>
      <pubDate>Sun, 07 Oct 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>烧制网页 RSS 源，主要有 <strong>FEED43</strong> 和 <strong>Huginn</strong> 两种方法。</p>
<ul>
<li>FEED43：简单免费，六小时抓取一次，每次抓取 20 条静态页面。</li>
<li>Huginn：自由度高，能自定义<strong>抓取频率、内容结构、js 结果、输出样式</strong>等；需要搭建服务器，学习 Huginn 抓取规则。</li>
</ul>
<h2> Huginn 准备工作</h2>
<ul>
<li>
<p>准备 NAS 或 Debian/Ubuntu 环境的服务器；</p>
</li>
<li>
<p>参考 <a href="https://github.com/huginn/huginn/blob/master/doc/docker/install.md" target="_blank" rel="noopener noreferrer">deploy Huginn inside of Docker</a>、<a href="https://github.com/huginn/huginn/blob/master/doc/manual/installation.md" target="_blank" rel="noopener noreferrer">installation guide for Debian/Ubuntu</a> 来搭建 Huginn。</p>
</li>
<li>
<p>注册 <a href="https://phantomjscloud.com/" target="_blank" rel="noopener noreferrer">PhantomJs Cloud</a> ,然后将 API key 保存在 Huginn 的 Credentials 中。很多网站是用 JS 加载动态内容，因此需要 <strong>PhantomJs Cloud</strong> 来抓取页面 JS 缓存。免费版每天限制抓取 500 次页面，需求不大可建立多个账号使用不同 API key，足够个人使用。</p>
<figure><img src="http://tc.seoipo.com/20181006010447.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
<h2> PhantomJs 网页抓取</h2>
<p>新建 Huginn 任务组 Scenario「国内应急新闻」，样例抓取链接为 <code>http://www.cneb.gov.cn/guoneinews/</code>。</p>
<figure><img src="http://tc.seoipo.com/20181008131549.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 页面缓存</h3>
<p>使用 Phantom Js Cloud Agent，获得动态网页缓存。</p>
<figure><img src="http://tc.seoipo.com/20181008111704.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 解析网页内容</h3>
<p>使用 WebsiteAgent，抓取网页内容。</p>
<figure><img src="http://tc.seoipo.com/20181008112658.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> 获取内容路径</h3>
<p>使用火狐浏览器打开目标页面，获取 css path 路径。</p>
<ol>
<li>
<p>按下 <code>F12</code>, 然后点击 <em>Developer Tools</em> 左上角的<em>检查指针</em>。</p>
<figure><img src="http://tc.seoipo.com/20181008114911.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>选中要抓取的部分。</p>
<figure><img src="http://tc.seoipo.com/20181008113925.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>回到 <em>Developer Tools</em> 窗口，右键选中的蓝色部分，获取 css path、Xpath。这里以 css path 为例。</p>
<figure><img src="http://tc.seoipo.com/20181008114207.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>初始 css path 路径，<code>html body div.area.areabg1 div.area-half.right div.tabBox div.tabContents.active table tbody tr td.red a</code>。</p>
</li>
<li>
<p>css path 原始路径过长，删去不带 <code>.</code> 或 <code>#</code> 的节点（节点间以空格“ ”分割），并删去每个节点在 <code>.</code> 或 <code>#</code> 前的第一个标签，得到 <code>.area.areabg1 .area-half.right .tabBox .tabContents.active .red a</code>。</p>
</li>
<li>
<p>前半部分对节点定位无用，继续省略（比如：中国上海，省略掉中国，大家也知道上海在哪），获得短路径 <code>.tabContents.active .red a</code>。</p>
</li>
</ol>
<p><strong>特殊路径处理</strong>：</p>
<ul>
<li>有些路径中的<strong>节点带空格</strong>，如 <code>&lt;div class="packery-item article"&gt;</code>,路径中的空格由 <code>.</code> 代替，截取为 <code>.packery-item.article</code>。</li>
<li>当抓取<strong>多种 css path 规则</strong>时，用逗号分割，比如 <code>"css": ".focus-title .current a , .stress h2 a",</code>。</li>
</ul>
<h3> 导出 RSS</h3>
<p>使用 DataOutputAgent，将抓取内容导出为 RSS。</p>
<figure><img src="http://tc.seoipo.com/20181008130943.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>回到 Scenarios，点击 Data Output Agent 旁的按钮「Actions」&gt;「Show」，复制导出的 xml 链接 <code>http://xxx.xxx/users/1/web_requests/xxx/xxxx.xml</code>。</p>
<figure><img src="http://tc.seoipo.com/20181008131059.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><a href="https://pan.baidu.com/s/1JdsFkLN9kczR9C92tKi83A" target="_blank" rel="noopener noreferrer">点击网盘下载</a>国内应急新闻的详细设置，导入到 Huginn 即可使用。其他问题参考 <a href="https://github.com/huginn/huginn/wiki/Browser-Emulation-Using-PhantomJs-Cloud" target="_blank" rel="noopener noreferrer">PhantomJs Cloud 英文攻略</a>。</p>
<p>微信的屏蔽措施非常之多，公众号抓取可以尝试 <a href="https://wechat.privacyhide.com/" target="_blank" rel="noopener noreferrer">wechat-feeds</a>。</p>
<h2> RSS 合集</h2>
<p>汇总的 RSS 永久订阅 feeds，均通过 RSSHub 和 Huginn 制作。如果有兴趣自制 RSS，可参考以下教程。</p>
<ul>
<li>
<p><a href="https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html" target="_blank" rel="noopener noreferrer">RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html" target="_blank" rel="noopener noreferrer">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2019-04-01-rsshub_noob.html" target="_blank" rel="noopener noreferrer">RSS 速成篇：RSSHub 捡现成的轮子</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2020-03-25-rsshub_on_vps.html" target="_blank" rel="noopener noreferrer">RSS 速成篇 2：RSSHub 自部署</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html" target="_blank" rel="noopener noreferrer">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html" target="_blank" rel="noopener noreferrer">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20181006010447.png" type="image/png"/>
    </item>
    <item>
      <title>等了十年，PC 端能用的语音输入方案来了</title>
      <link>https://mars.run/posts/2018-12-28-voice_input_try.html</link>
      <guid>https://mars.run/posts/2018-12-28-voice_input_try.html</guid>
      <source url="https://mars.run/rss.xml">等了十年，PC 端能用的语音输入方案来了</source>
      <description>从 XP 时代开始，我幻想用语音转文字。后来，手机提前实现了这功能，电脑端的语音录入却一直没进展。 为了能在 PC 上用语音打字，我从 2013 折腾到 2022，经历了各种硬件和软件，终于找到最适合 PC 端的语音输入方案。 讯飞 + 小麦克风 2013 年，讯飞推出 PC 版输入法。我以为 PC 语音输入的时代已经来临，买了个十几块的小麦克风，尝试语音转文字。 可测试结果却让人大跌眼镜，语音识别准确率异常的低。即便我把麦放在嘴边，依然无法录清楚，超过 80% 内容识别错误。 过低的识别率，让我怀疑是麦克风的收音出了问题，要想语音打字就需要换个好点的话筒。但囊中羞涩，只能暂停尝试。</description>
      <category>自动化</category>
      <pubDate>Fri, 28 Dec 2018 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>从 XP 时代开始，我幻想用语音转文字。后来，手机提前实现了这功能，电脑端的语音录入却一直没进展。</p>
<p>为了能在 PC 上用语音打字，我从 2013 折腾到 2022，经历了各种硬件和软件，终于找到最适合 PC 端的语音输入方案。</p>
<h2> 讯飞 + 小麦克风</h2>
<p>2013 年，讯飞推出 PC 版输入法。我以为 PC 语音输入的时代已经来临，买了个十几块的小麦克风，尝试语音转文字。</p>
<p>可测试结果却让人大跌眼镜，语音识别准确率异常的低。即便我把麦放在嘴边，依然无法录清楚，超过 80% 内容识别错误。</p>
<p>过低的识别率，让我怀疑是麦克风的收音出了问题，要想语音打字就需要换个好点的话筒。但囊中羞涩，只能暂停尝试。</p>
<h2> 讯飞 + Blue Yeti</h2>
<p>过了几年，经济宽裕点后，下单网红录音话筒 Blue Yeti，幻想着 4 位数的话筒能带来完美的收音识别效果。</p>
<figure><img src="http://tc.seoipo.com/20181228052211.png?imageMogr2/thumbnail/!60p" alt="Blue Yeti" tabindex="0" loading="lazy"><figcaption>Blue Yeti</figcaption></figure>
<p>但事实却是<strong>再度被打击</strong>。</p>
<p>对 Blue Yeti 的收音测试中，再次发现大量杂音，收货当天就直接退货。</p>
<p>十几元的麦克风和一千元的话筒收音效果差不多，语音输入的识别率也都超低。这让我猜测，语音输入识别率低与硬件无关，而是 PC 端的语音输入方案尚未成熟，是软件方面导致的问题。</p>
<p>就这样，我再次暂停了 PC 上的语音输入尝试。</p>
<h2> 外置声卡 + 动圈话筒</h2>
<p>之后，用了 5 年的音箱出现问题，我升级了音响，并顺势添置了外置声卡，视听体验大幅提升。玩着玩着，突然想起我的语音输入梦，决定再尝试一次。</p>
<p>有了外置声卡，麦克风的选择多了许多，可以连接卡侬线接口的话筒了。</p>
<p>麦克风分为两类：电容麦、动圈麦。</p>
<p>电容麦收音好，但比较娇贵，怕潮怕摔，不能用桌面话筒架，适合用悬臂挂在空中，每次用完之后需要收起来。动圈麦的灵敏度和还原度都低于电容麦，存放和使用没什么要求，费用也会低些。</p>
<p>电容麦克风太麻烦，就选了简单的动圈麦 - 舒伯乐 PRO248S。</p>
<p>选好话筒后，又配了麦克风支架和卡侬线，连上原本的外置声卡，搞定语音输出的硬件配置。</p>
<figure><img src="http://tc.seoipo.com/2022-05-25-18-02-54.jpg?imageMogr2/thumbnail/!15p" alt="收音设备" tabindex="0" loading="lazy"><figcaption>收音设备</figcaption></figure>
<h2> 输入法之争</h2>
<p>音频硬件搞定后，开始折腾语音输入法。</p>
<p>虽然讯飞在语音输入领域的牌子最响，但是讯飞 PC 输入法并不受重视，长年不更新。所以，我尝试了其他输入法的语音功能。测试中，搜狗的语音识别功能并不比讯飞弱，缺点也只有无法设置语音输入快捷键，整体体验上佳。于是，语音输入法切换成了搜狗。</p>
<p>然而，有次备份系统设置，我发现搜狗词库高达 27 万条，其中 99% 的内容是垃圾词条，即使偶尔输入过一次的内容也被输入法记录。更可怕的是，这次词库无法从云端删除，<strong>只要你输入过一次，搜狗就永远记住了</strong>。</p>
<p>这哪里是输入法，根本是<strong>键盘记录器</strong>。</p>
<p>国内其他输入法在这点上也都半斤八两，为了不被键盘记录器惦记，我只能切换为开源的小狼毫输入法。</p>
<p>语音输入则转用开源的 <a href="https://github.com/HaujetZhao/QuickCut" target="_blank" rel="noopener noreferrer">Quick Cut</a>，使用阿里云、腾讯云的商用语音接口，识别率比免费的搜狗和讯飞都高。</p>
<figure><img src="http://tc.seoipo.com/2022-05-25-18-08-06.png?imageMogr2/thumbnail/!60p" alt="Quick Cut 界面" tabindex="0" loading="lazy"><figcaption>Quick Cut 界面</figcaption></figure>
<p>Quick Cut 的缺点：语音输入时，要一直按大写键，不适合长语音录入；触发键无法更改，大写键与我的常用脚本冲突了。因此，长时间的语音输入只能借助手机上的飞书妙记来完成转录。</p>
<h2> 最终方案：微软语音输入</h2>
<p>面对 Quick Cut 的长语音输入难题时，@李乐 推荐了微软语音输入-<a href="https://support.microsoft.com/zh-cn/windows/%E4%BD%BF%E7%94%A8%E8%AF%AD%E9%9F%B3%E9%94%AE%E5%85%A5%E6%9D%A5%E8%AF%B4%E8%AF%9D-%E8%80%8C%E4%B8%8D%E6%98%AF%E5%9C%A8%E7%94%B5%E8%84%91%E4%B8%8A%E9%94%AE%E5%85%A5-fec94565-c4bd-329d-e59a-af033fa5689f" target="_blank" rel="noopener noreferrer">使用语音键入来说话，而不是在电脑上键入</a>。</p>
<blockquote>
<p>微软自带的语音输入，快捷键 Win + H。3 块钱的麦克风，距离 50 厘米，很低的声音读出来了。</p>
</blockquote>
<p>测试后，发现微软语音输入确实是好用，甚至好用到有点恐怖。测试中，我临时有事，走到另外一个房间和家人说话，回来后发现刚刚的对话也被微软语音输入正确识别。</p>
<figure><img src="http://tc.seoipo.com/2022-05-25-18-13-17.png" alt="微软语音输入" tabindex="0" loading="lazy"><figcaption>微软语音输入</figcaption></figure>
<p>微软语音输入非常敏感，距离远、声音低也能识别。这样我不用为语音输入而特意移动话筒，可以继续把话筒放在不遮挡视野的远角。</p>
<p>「语音键入功能在此应用上受限制」在 Notepad++ 和微信都出现了，Visual Studio Code 没出现，但实际上这提示对语音输入并没造成影响，平常可以忽略这个提示。</p>
<p>虽然微软语音输入的识别率只有 85%，不如阿里云方案的 95%，可系统自带的优势太明显，微软语音输入体验感非常顺滑。</p>
<p>启动快捷键 <code>Win + H</code>，语音识别立即会启动。如果中途没说话，应用会自动暂停，并对前面的输入进行整理，插入合适的标点符号。停止超过一分钟，语音识别才会暂停，等待再次启动。换言之，微软语音输入能一键完成长语音录入。</p>
<p>之前的麦克风放着放着就坏了，所以我没测 @李乐 说的低价麦克风的语音输入效果。不过，微软输入的软件优化非常好，按照目前效果推测，用便宜的麦克风也能实现完美的收音效果。综合来说，微软语音输入是当前最完美也是兼容性最高的语音输入方案。</p>
<h2> 总结与展望</h2>
<p>语音输入的 3 种方案：</p>
<ul>
<li>文章输入：<code>微软语音输入 + 外置声卡 + 动圈话筒</code>，兼容性最高，使用方便，但精度一般，用于文章草稿阶段。</li>
<li>一句话输入：<code>Quick Cut + 外置声卡 + 动圈话筒</code>，一句话识别精度最高，适合聊天时使用。</li>
<li>语音转录：<code>飞书妙记 + 手机</code>，录音转文字，长语音的识别率超高。</li>
</ul>
<p>与 2018 年相比，2022 年的语音输入方案已经完善了许多。硬件已经不再是问题了，便宜的话筒也能达到语音输入标准。语音识别进步明显，在 AI 技术的加持下，短句识别率从 90% 上升到 95%，长句识别率则从 50% 上升到 70%，标点符号均能正确插入。</p>
<p>目前语音输入算法在提升最后 10% 的准确率，期待早日达到「口述与键盘输入完全一致」的一天。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20181228052211.png?imageMogr2/thumbnail/!60p" type="image/"/>
    </item>
    <item>
      <title>OpenVPN 随时随地回家的路</title>
      <link>https://mars.run/posts/2019-03-31-openvpn_back_to_home.html</link>
      <guid>https://mars.run/posts/2019-03-31-openvpn_back_to_home.html</guid>
      <source url="https://mars.run/rss.xml">OpenVPN 随时随地回家的路</source>
      <description>有时在外面需要访问家里的文件，或直接利用家中网络设置翻墙。为此，利用路由器 OpenVPN 搭建了一条回家的路。 内网穿透 连接家中内网，家里必须有个固定的访问地址。我将子域名 home.xxx.com 指向家中 IP。 梅林路由器进入「高级设置」→「外部网络（WAN）」→「DDNS」，将路由器指向准备好的子域名。</description>
      <category>网络</category>
      <pubDate>Sun, 31 Mar 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>有时在外面需要访问家里的文件，或直接利用家中网络设置翻墙。为此，利用路由器 OpenVPN 搭建了一条回家的路。</p>
<h2> 内网穿透</h2>
<p>连接家中内网，家里必须有个固定的访问地址。我将子域名 <a href="http://home.xxx.com" target="_blank" rel="noopener noreferrer">home.xxx.com</a> 指向家中 IP。</p>
<p>梅林路由器进入「高级设置」→「外部网络（WAN）」→「DDNS」，将路由器指向准备好的子域名。</p>
<figure><img src="http://tc.seoipo.com/20190331203233.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>电信分配的公网 IP 经常会更换，每次都需要重定向子域名。在路由器 koolshare - 软件中心中安装 Aliddns，帮助更新家的公网 IP。插件中输入定向子域名和阿里云的 appkey，配置就完成了。如果没有自动在阿里云解析，可以先手动解析设置。</p>
<p>光猫设置参考<a href="https://newzone.top/posts/2018-06-08-Baizhuo_GP1700.html" target="_blank" rel="noopener noreferrer">光猫改造 篇三：百卓 GP1700 进阶设置 - 端口映射</a>。</p>
<h2> OpenVPN 配置</h2>
<p>内网穿透完成后，开始 OpenVPN 配置。梅林路由器进入「高级设置」→「VPN」→「虚拟专用网（VPN）服务器」，开启路由器自带的 OpenVPN。</p>
<figure><img src="http://tc.seoipo.com/20190331200921.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>高级配置红色的部分有修改，特别是<strong>VPN 子网必须修改为与路由器不同的号段</strong>，如 192.168.3.0。如果使用默认子网，会无法顺利翻墙。</p>
<p>应用设置后，点击「一般设置」，并导出 .ovpn 文件。打开该配置文件，将远程端口改为光猫上虚拟服务器映射的端口。</p>
<figure><img src="http://tc.seoipo.com/20190331202017.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>最后，手机导入 <code>.ovpn</code> 设置文件，就可以上网回家了！</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20190331203233.png" type="image/png"/>
    </item>
    <item>
      <title>RSS 速成篇：RSSHub 捡现成的轮子</title>
      <link>https://mars.run/posts/2019-04-01-rsshub_noob.html</link>
      <guid>https://mars.run/posts/2019-04-01-rsshub_noob.html</guid>
      <source url="https://mars.run/rss.xml">RSS 速成篇：RSSHub 捡现成的轮子</source>
      <description>RSS 使用已经介绍了 feed43 和 Huginn，但这些工具或需要学习，或需要硬件。与之相比，RSSHub 有着成熟的配置，可以直接使用。 RSSHub 是个开源项目，对微博、知乎、豆瓣、bilibili、Youtube 等主流网站进行 RSS 转化。我们只要访问 RSSHub 官网，上面定期更新了主流媒体的 rss 项目。</description>
      <category>自动化</category>
      <pubDate>Mon, 01 Apr 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>RSS 使用已经介绍了 feed43 和 Huginn，但这些工具或需要学习，或需要硬件。与之相比，RSSHub 有着成熟的配置，可以直接使用。</p>
<p><strong>RSSHub</strong> 是个开源项目，对微博、知乎、豆瓣、bilibili、Youtube 等主流网站进行 RSS 转化。我们只要访问 <a href="https://docs.rsshub.app/" target="_blank" rel="noopener noreferrer">RSSHub 官网</a>，上面定期更新了主流媒体的 rss 项目。</p>
<figure><img src="http://tc.seoipo.com/20190331012441.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 抓取示例：bilibili 番剧</h2>
<ol>
<li>
<p>打开 <a href="https://docs.rsshub.app/social-media.html#bilibili" target="_blank" rel="noopener noreferrer">RSSHub bilibili 专区</a> ，上面能根据番剧、UP 主等定制 rss。</p>
<figure><img src="http://tc.seoipo.com/20190406131343.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>准备抓取番剧《盾之勇者成名录》的更新，番剧主页链接为 <code>https://www.bilibili.com/bangumi/media/md4316482/</code> ，mediaid 为 <code>4316482</code>。</p>
</li>
<li>
<p>按照路由参数修改 rss 链接 <code>https://rsshub.app/bilibili/bangumi/media/4316482</code>，并在 rss 阅读器中打开。</p>
<figure><img src="http://tc.seoipo.com/20190406134022.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>p.s. RSSHub 使用非常简单，但现在已经太过流行，微博、知乎已经开始反爬限制，动手能力强建议走 Huginn。</p>
<h2> RSS 合集</h2>
<p>汇总的 RSS 永久订阅 feeds，均通过 RSSHub 和 Huginn 制作。如果有兴趣自制 RSS，可参考以下教程。</p>
<ul>
<li>
<p><a href="https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html" target="_blank" rel="noopener noreferrer">RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html" target="_blank" rel="noopener noreferrer">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2019-04-01-rsshub_noob.html" target="_blank" rel="noopener noreferrer">RSS 速成篇：RSSHub 捡现成的轮子</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2020-03-25-rsshub_on_vps.html" target="_blank" rel="noopener noreferrer">RSS 速成篇 2：RSSHub 自部署</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html" target="_blank" rel="noopener noreferrer">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html" target="_blank" rel="noopener noreferrer">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20190331012441.png" type="image/png"/>
    </item>
    <item>
      <title>scrcpy - 手机无线投屏到电脑</title>
      <link>https://mars.run/posts/2019-08-26-scrcpy_screen_projection.html</link>
      <guid>https://mars.run/posts/2019-08-26-scrcpy_screen_projection.html</guid>
      <source url="https://mars.run/rss.xml">scrcpy - 手机无线投屏到电脑</source>
      <description>scrcpy 是一款免费开源的投屏软件，可以将安卓手机屏幕投放在 Windows、macOS、GNU/Linux 上，并可以直接使用鼠标在投屏窗口中进行交互和录制。 市面上主流的多屏协同软件大多都是基于 scrcpy 开发的套壳产品，而且 bug 也没有得到修复，因此建议直接使用官方的 scrcpy。 本文以 Windows 投屏为例，可以前往官方站点下载 scrcpy-win64-v1.25.zip，或者使用国内搬运链接。</description>
      <category>工具</category>
      <pubDate>Mon, 26 Aug 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><a href="https://github.com/Genymobile/scrcpy" target="_blank" rel="noopener noreferrer">scrcpy</a> 是一款免费开源的投屏软件，可以将安卓手机屏幕投放在 Windows、macOS、GNU/Linux 上，并可以直接使用鼠标在投屏窗口中进行交互和录制。</p>
<p>市面上主流的多屏协同软件大多都是基于 scrcpy 开发的套壳产品，而且 bug 也没有得到修复，因此建议直接使用官方的 scrcpy。</p>
<p>本文以 Windows 投屏为例，可以前往官方站点下载 <a href="https://github.com/Genymobile/scrcpy/releases/download/v1.25/scrcpy-win64-v1.25.zip" target="_blank" rel="noopener noreferrer">scrcpy-win64-v1.25.zip</a>，或者使用<a href="https://wwva.lanzoue.com/iHnRJ0jm0uhe" target="_blank" rel="noopener noreferrer">国内搬运链接</a>。</p>
<h2> 有线投屏</h2>
<ol>
<li>下载并解压 scrcpy。</li>
<li>手机端开启 <code>开发者选项</code> 和 <code>USB 调试</code>。开发者选项默认处于隐藏状态，手机上选择「设置」&gt;「关于手机」，然后点击版本号七次，返回上一屏幕，即可在底部找到开发者选项。</li>
<li>使用数据线将手机和电脑连接，此时手机上会弹出授权提示，点击「允许 USB 调试」。</li>
<li>双击解压得到的 scrcpy.exe 文件，即可进行有线投屏。</li>
</ol>
<h2> 无线投屏</h2>
<p>无线投屏的前提是，电脑和手机处于<strong>同一局域网</strong>中。</p>
<p>有线投屏中的前三步也适用于无线投屏，完成这些步骤后，打开 PowerShell（~ cmd），依次输入操作命令。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="http://tc.seoipo.com/20190829093407.png" alt="" tabindex="0" loading="lazy"><figcaption>scrcpy 命令行截图</figcaption></figure>
<h2> 屏幕录制</h2>
<p>如果想在投屏的同时，对手机屏幕进行录制，可以输入下方命令进行操作。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 常见问题</h2>
<h3> 错误检查</h3>
<p>遇到报错时，检查下列三种情况，可以解决 90% 的错误：</p>
<ul>
<li>更换数据线；</li>
<li>检查手机的「本机 IP」是否正确；</li>
<li>核对有线连接步骤，选择「开启 USB 调试」&gt;「连接手机与电脑」&gt;「启动 scrcpy」。</li>
</ul>
<h3> ERROR: Exception on thread</h3>
<p>报错 <code>ERROR: Exception on thread Thread[main,5,main]</code>，通常是因为手机不兼容 scrcpy 默认的分辨率设置。解决方法是，修改 scrcpy 启动代码，使用较低的分辨率。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 华为不能投屏</h3>
<p>华为/荣耀设备切换为无线投屏时，拔掉数据线，系统会关闭 USB 调试，导致投屏终止。</p>
<p>解决方案来自 @残荷听雨：「进工程模式，把 usb 调成开发模式，先打开“在充电模式下允许 ADB 调试”，再打开 usb 调试。这样操作后，再拔掉数据线，它就不会自动关闭 usb 调试了。副作用是，“在充电模式下允许 ADB 调试”会自动常开，在网吧等公共区域，仅用数据线充电时就需要手动关掉 usb 调试，防止被黑。」</p>
<h3> 投屏模糊</h3>
<p>如果屏幕设置了缩放比例，投屏界面会变得模糊。右键单击 scrcpy.exe，点击「属性」&gt;「兼容性」&gt;「更改高 DPI 设置」，然后勾选「替代高 DPI 缩放行为」，应用该设置后投屏恢复正常。</p>
<figure><img src="http://tc.seoipo.com/20190829095640.png" alt="" tabindex="0" loading="lazy"><figcaption>解决 scrcpy 投屏模糊</figcaption></figure>
<p>更多问题报错的解决方法，可以查看 <a href="https://github.com/Genymobile/scrcpy/blob/master/FAQ.md" target="_blank" rel="noopener noreferrer">scrcpy FAQ</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>这些「医院护肤品」你买了吗？</title>
      <link>https://mars.run/posts/2019-10-04-fake_aka_hospital_skin_care_products.html</link>
      <guid>https://mars.run/posts/2019-10-04-fake_aka_hospital_skin_care_products.html</guid>
      <source url="https://mars.run/rss.xml">这些「医院护肤品」你买了吗？</source>
      <description>日常购买中，国货比例越来越高，护肤品也逐渐想用国货替代。研究过程中，发现国内有许多药妆打着医院研发旗号。 这些有医院背书的护肤品，天然会获取大家更多的信任。但你买的真是医院研发吗？ 协和 一看到「协和」，第一反应会是「协和医院」。但通过爱企查搜索「协和」，找到 33802 家符合条件的企业。这造就了协和在网络上的泛滥，和消费者的无法维权。 京东淘宝均有所谓的协和旗舰店，由不同公司开设，但股东均为自然人。这些协和旗舰店的主要股东大都有自己的护肤品牌，但尚未发现与医院有直接联系，更别说协和医院了。但其均标注「协和正品」，京东协和旗舰店更标注有「中国医学科学院」。</description>
      <category>购物</category>
      <pubDate>Fri, 04 Oct 2019 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>日常购买中，国货比例越来越高，护肤品也逐渐想用国货替代。研究过程中，发现国内有许多药妆打着医院研发旗号。</p>
<p>这些有医院背书的护肤品，天然会获取大家更多的信任。但你买的真是医院研发吗？</p>
<h2> 协和</h2>
<p>一看到「协和」，第一反应会是「协和医院」。但通过爱企查搜索「协和」，找到 33802 家符合条件的企业。这造就了协和在网络上的泛滥，和消费者的无法维权。</p>
<p>京东淘宝均有所谓的协和旗舰店，由不同公司开设，但股东均为自然人。这些协和旗舰店的主要股东大都有自己的护肤品牌，但尚未发现与医院有直接联系，更别说协和医院了。但其均标注「协和正品」，京东协和旗舰店更标注有「中国医学科学院」。</p>
<p><strong>协和维生素 e 乳</strong>是网红大爆款，同名但不同厂家的超过五款，包装类似的更是不下二十款，完全分不清李鬼还是李逵。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-02-27.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 精心</h2>
<p>精心由「北京协和医院」的全资子公司「北京协和精细化学制品有限公司」出品，暂列为可信。根据精心旗舰店的授权说明，其他「协和 XX」都与北京协和医院无关。</p>
<p>使用精心产品后，个人评价一般，并没感受到医院的科技加成。</p>
<figure><img src="http://tc.seoipo.com/20191004143812.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 爱心 301</h2>
<p>爱心 301 打着 301 的抬头，包装盒甚至有「解放军总医院监制」，但背后的「北京市时代美业科技有限责任公司」是自然人独资企业，跟 301 没有关系。</p>
<blockquote>
<p>目前生产爱心 301 产品的公司是北京时代美业科技有限公司，其工商信息显示，该法定代表人也是唯一最终受益人均是陈某某，而陈某某没有解放军总医院（301 医院）的任职信息。
健康时报记者拨打解放军总医院（301 医院）总机，一名工作人员告诉健康时报记者，爱心 301 产品和 301 医院没有任何关系；医院一名皮肤科医生也告知记者两者无关。</p>
</blockquote>
<p>以上引用自健康时报 2019 年 06 月 28 日，<a href="http://paper.people.com.cn/jksb/html/2019-06/28/content_1936727.htm" target="_blank" rel="noopener noreferrer">神秘的“北京 301”祛斑团队</a>。</p>
<h2> 肤倍佳</h2>
<p>打着「中国医学科学院整形外科医院」的名号，但被医院发声明说是冒用。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-02-49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><s>声明链接（已删除）：<a href="http://www.zhengxing.com.cn/ArticleShow4145.aspx" target="_blank" rel="noopener noreferrer">http://www.zhengxing.com.cn/ArticleShow4145.aspx</a></s></p>
<p>肤倍佳背后的「北京臻馨芳草科技发展有限公司」于 2014 年 4 月 3 日成立，并于 2019 年 7 月 15 日注册资本从 10 万元变更为 1000 万元。2014 年到 2019 年，「肤倍佳」这 5 年间的公司资本都只有 10 万元，这是一家护肤品企业的注册资本？而其法人也是一直在高 XX、张 XX 间交替变换。</p>
<h2> 京卫本草</h2>
<p>京卫本草背后公司为「北京华风时代化妆品有限公司」，股东都为自然人，无医院或单位股东。国家食品药品监督管理总局上用京卫本草都无法搜索到相关产品备案。京卫本草官网上甚至带有 Windows 未激活水印。</p>
<figure><img src="http://tc.seoipo.com/20191004135719.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 总结</h2>
<p>医院开的大都是医疗用品，没有处方是无法购买的。所谓北京医院、301 医院出的医用护肤品都必须去医院才能买到，网上购买是非常不靠谱的。</p>
<p>第一次用的护肤品，一定要去「国家食品药品监督管理总局」进行查询，查询入口分别为 国产特殊用途化妆品 和 国产非特殊用途化妆品。</p>
<blockquote>
<p>依据《化妆品卫生监督条例》，我国将化妆品分为特殊用途化妆品及非特殊用途化妆品（2007 年之前称为普通化妆品），特殊用途化妆品是指用于育发、染发、烫发、脱毛、美乳、健美、除臭、祛斑、防晒等的化妆品，特殊用途化妆品必须要有国妆特字批号才能进行销售。</p>
</blockquote>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-14-02-27.png" type="image/png"/>
    </item>
    <item>
      <title>RSS 速成篇 2：RSSHub 自部署</title>
      <link>https://mars.run/posts/2020-03-25-rsshub_on_vps.html</link>
      <guid>https://mars.run/posts/2020-03-25-rsshub_on_vps.html</guid>
      <source url="https://mars.run/rss.xml">RSS 速成篇 2：RSSHub 自部署</source>
      <description>RSSHub 使用非常简单，但随着使用者增多，微博、知乎加大了反爬限制。目前大量源都无法直接使用，只能自建 RSSHub 来解决稳定性。部署前，准备好域名和服务器。 新手使用 RSSHub 部署教程报错较多，本篇将使用宝塔 PM2 管理器进行部署。 部署步骤 将 RSSHub 代码下载到根目录 root，执行命令 git clone https://github.com/DIYgod/RSSHub.git。 安装宝塔面板，查看官方安装教程。 登陆宝塔面板，点击「软件商店」-「运行环境」，安装PM2 管理器。 点击 PM2 管理器右侧的设置，按图中红字添加项目路径，启动文件名称为 lib。 添加后，点击项目中的「映射」，输入指定域名，如 rsshub.xxx.com，服务器的 1200 端口将指向该域名。映射域名需解析到服务器 IP。</description>
      <category>自动化</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>RSSHub 使用非常简单，但随着使用者增多，微博、知乎加大了反爬限制。目前大量源都无法直接使用，只能自建 RSSHub 来解决稳定性。部署前，准备好<strong>域名和服务器</strong>。</p>
<p>新手使用 RSSHub 部署教程报错较多，本篇将使用宝塔 PM2 管理器进行部署。</p>
<h2> 部署步骤</h2>
<ol>
<li>
<p>将 RSSHub 代码下载到根目录 root，执行命令 <code>git clone https://github.com/DIYgod/RSSHub.git</code>。</p>
</li>
<li>
<p>安装宝塔面板，查看<a href="https://www.bt.cn/bbs/thread-19376-1-1.html" target="_blank" rel="noopener noreferrer">官方安装教程</a>。</p>
</li>
<li>
<p>登陆宝塔面板，点击「软件商店」-「运行环境」，安装<strong>PM2 管理器</strong>。</p>
<figure><img src="http://tc.seoipo.com/20200325120705.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>点击 PM2 管理器右侧的设置，按图中红字添加项目路径，启动文件名称为 <code>lib</code>。</p>
<figure><img src="http://tc.seoipo.com/20200325121639.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>添加后，点击项目中的「映射」，输入指定域名，如 <code>rsshub.xxx.com</code>，服务器的 1200 端口将指向该域名。映射域名需解析到服务器 IP。</p>
<figure><img src="http://tc.seoipo.com/20200325121921.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>程序运行时，如果遇到报错，可以直接用命令运行 pm2，如 <code>pm2 start /root/RSSHub/lib/index.js --name rsshub</code>。</p>
<h2> 使用步骤</h2>
<ol>
<li>
<p>打开 <a href="https://docs.rsshub.app/" target="_blank" rel="noopener noreferrer">RSSHub 接口指南</a>，搜索需要订阅的网站。RSSHub 支持国内大部分的主流网站。</p>
</li>
<li>
<p>根据 <a href="https://docs.rsshub.app/social-media.html#bilibili" target="_blank" rel="noopener noreferrer">bilibili 番剧路由</a>的文档，将生成源 <code>https://rsshub.app/bilibili/bangumi/media/9192</code> 其中的域名 <code>https://rsshub.app</code> 替换为你自部署的域名，如 <code>http://rsshub.xxx.com/bilibili/bangumi/media/9192</code>。</p>
</li>
</ol>
<p>另外 RSSHub 支持很多实用的参数，比如内容过滤、全文输出等。全文输出参数为 <code>mode=fulltext</code>，应用举例：果壳科学人全文输出 <code>https://rsshub.xxx.com/guokr/scientific?mode=fulltext</code>。其他可以在<a href="https://docs.rsshub.app/parameter.html" target="_blank" rel="noopener noreferrer">通用参数</a>官方文档了解具体使用方法。</p>
<h2> RSSHub VS. Huginn</h2>
<ul>
<li>RSSHub：使用简单，使用现成的抓取规则，适用于国内主流网站；但无法抓取对小众网站，必须 RSSHub 官方定制订阅源。</li>
<li>Huginn：适用于所有网站，可设定抓取频率、内容结构、js 结果、输出样式等；但部署、配置复杂，入门门槛高，需要针对网站单独定制抓取规则。</li>
</ul>
<h2> RSS 合集</h2>
<p>汇总的 RSS 永久订阅 feeds，均通过 RSSHub 和 Huginn 制作。如果有兴趣自制 RSS，可参考以下教程。</p>
<ul>
<li>
<p><a href="https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html" target="_blank" rel="noopener noreferrer">RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html" target="_blank" rel="noopener noreferrer">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2019-04-01-rsshub_noob.html" target="_blank" rel="noopener noreferrer">RSS 速成篇：RSSHub 捡现成的轮子</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2020-03-25-rsshub_on_vps.html" target="_blank" rel="noopener noreferrer">RSS 速成篇 2：RSSHub 自部署</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html" target="_blank" rel="noopener noreferrer">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html" target="_blank" rel="noopener noreferrer">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20200325120705.png" type="image/png"/>
    </item>
    <item>
      <title>无线路由调整，加快 WIFI 速度</title>
      <link>https://mars.run/posts/2020-09-13-wifi_speed_up.html</link>
      <guid>https://mars.run/posts/2020-09-13-wifi_speed_up.html</guid>
      <source url="https://mars.run/rss.xml">无线路由调整，加快 WIFI 速度</source>
      <description>拖慢 WIFI 速度的最大元凶是无线信号合并。 「双频合一」、「Smart Connect」听起来很美，信号不好就立刻切换信号更强的频道，速度慢就切换为更快的频道，似乎是个完美的方案。但使用后就知道它们的规则多傻了，速度慢到让你想用手机流量。任何将无线信号合一的功能都不推荐使用。 先关闭路由器的合频功能，然后针对无线模式、频道带宽、频道/信道逐步调整，避免 wifi 无故自动断开，提升 wifi 速度和稳定性。 无线模式 无线模式其实是选择 wifi 协议，如 802.11b、802.11g、802.11n 等。兼容旧版本协议，会拖慢 wifi 的速度。</description>
      <category>网络</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>拖慢 WIFI 速度的最大元凶是<strong>无线信号合并</strong>。</p>
<p>「双频合一」、「Smart Connect」听起来很美，信号不好就立刻切换信号更强的频道，速度慢就切换为更快的频道，似乎是个完美的方案。但使用后就知道它们的规则多傻了，速度慢到让你想用手机流量。任何将无线信号合一的功能都不推荐使用。</p>
<p>先关闭路由器的合频功能，然后针对<strong>无线模式、频道带宽、频道/信道</strong>逐步调整，避免 wifi 无故自动断开，提升 wifi 速度和稳定性。</p>
<h2> 无线模式</h2>
<p>无线模式其实是选择 wifi 协议，如 802.11b、802.11g、802.11n 等。兼容旧版本协议，会拖慢 wifi 的速度。</p>
<p>建议建议 2.4GHz 频段的频道带宽设为「N only」，5GHz 频段的频道带宽设为「N/AC mixed」。Legacy 模式为兼容模式，适合家里有 10 年前的设备需求。</p>
<h2> 频道带宽</h2>
<p>频道带宽一般为 20、40、80MHz，一些厂商如华为有自己的 160MHz。频道带宽越大，wifi 速度越快，但穿透性也随之变弱，覆盖范围变小。</p>
<p>建议 2.4GHz 频段的频道带宽设为「20/40MHz」，5GHz 频段的频道带宽设为「80MHz」。这样可以保证 wifi 近距离的链接速度，同时也保证了 wifi 的覆盖范围。</p>
<h2> 调整信道</h2>
<p>无线信道/频道是路由与手机的接收频道，通常家用路由有 161 条信道。当越多设备使用相同信道，会造成信道堵塞，减慢无线速度。</p>
<p>家庭只需要考虑自家和邻居的网络，无线环境较为简单。建议通过「Wifi 分析仪」找到并固定无线信道，避免无线疯狂切换信道，影响无线稳定性。</p>
<p>手机安装「Wifi 分析仪」，点击应用右上角的眼睛，选中「信道评级」。信道评级将显示选中 wifi 的最佳信道选择。切换上方的 wifi 名称，查看其它 wifi 的推荐信道。</p>
<figure><img src="http://tc.seoipo.com/20200913134120.jpg?imageMogr2/thumbnail/!40p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>找到最佳信道后，在路由器中固定无线网络的信道/频道。目前国内大部分路由都不支持 wifi 信道手工调整，只有华硕等少数路由支持，建议新购路由先跟店家确认是否支持手工调整信道。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20200913134120.jpg?imageMogr2/thumbnail/!40p" type="image/"/>
    </item>
    <item>
      <title>100% 蓝屏解决方案：以 DPC_WATCHDOG_VIOLATION 为例</title>
      <link>https://mars.run/posts/2020-10-25-dpc_watchdog_violation.html</link>
      <guid>https://mars.run/posts/2020-10-25-dpc_watchdog_violation.html</guid>
      <source url="https://mars.run/rss.xml">100% 蓝屏解决方案：以 DPC_WATCHDOG_VIOLATION 为例</source>
      <description>Windows 蓝屏的原因众多，你在网上搜到的解决方案，大多与你的情况不同，无法解决实际问题。但是，如果你找到并分析电脑上的 dmp 蓝屏日志，就会发现 Windows 已经给出了你的蓝屏原因。比如 DPC_WATCHDOG_VIOLATION 蓝屏，大多是由于硬件驱动出现问题造成的。你可以通过回退、更新或卸载驱动来修复蓝屏。接下来，我将具体介绍如何导出蓝屏日志、分析并解决蓝屏原因。 导出蓝屏日志 安装 WinDbg Preview，这是微软官方推出的系统调试工具。 启动 WinDbg Preview，软件会自动检测到最新的蓝屏日志，点击 Yes 即可载入。如果想分析其他文件，可以打开文件夹 C:\Windows\Minidump，导出日志 *.dmp。 载入日志过程中，WinDbg Preview 会自动下载所需文件，无需额外操作。载入完成后，点击 !analyze -v，分析具体日志。 分析日志：日志前半部分可以忽略，蓝屏原因多在日志末尾几行。通过分析末尾日志，可以找出引发蓝屏的进程。注意不要强制删除未知文件。</description>
      <category>系统</category>
      <pubDate>Sun, 25 Oct 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Windows 蓝屏的原因众多，你在网上搜到的解决方案，大多与你的情况不同，无法解决实际问题。但是，如果你找到并分析电脑上的 dmp 蓝屏日志，就会发现 Windows 已经给出了你的蓝屏原因。比如 DPC_WATCHDOG_VIOLATION 蓝屏，大多是由于硬件驱动出现问题造成的。你可以通过回退、更新或卸载驱动来修复蓝屏。接下来，我将具体介绍如何导出蓝屏日志、分析并解决蓝屏原因。</p>
<h2> 导出蓝屏日志</h2>
<ol>
<li>
<p>安装 <a href="https://www.microsoft.com/zh-cn/p/windbg/9pgjgd53tn86?rtc=1&amp;activetab=pivot:overviewtab" target="_blank" rel="noopener noreferrer">WinDbg Preview</a>，这是微软官方推出的系统调试工具。</p>
</li>
<li>
<p>启动 WinDbg Preview，软件会自动检测到最新的蓝屏日志，点击 Yes 即可载入。如果想分析其他文件，可以打开文件夹 <code>C:\Windows\Minidump</code>，导出日志 <code>*.dmp</code>。</p>
</li>
<li>
<p>载入日志过程中，WinDbg Preview 会自动下载所需文件，无需额外操作。载入完成后，点击 <code>!analyze -v</code>，分析具体日志。</p>
<figure><img src="http://tc.seoipo.com/20201025223307.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>分析日志：日志前半部分可以忽略，蓝屏原因多在日志末尾几行。通过分析末尾日志，可以找出引发蓝屏的进程。注意不要强制删除未知文件。</p>
<figure><img src="http://tc.seoipo.com/20201025224308.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<h2> 上传社区分析</h2>
<p>有些蓝屏比较复杂，由多方面的原因造成，新手很难分析。如果你看不懂或者不想分析日志，可以将蓝屏日志完整上传到微软社区，一般几个小时就会有人回复。</p>
<ol>
<li>打开文件夹 <code>C:\Windows\Minidump</code>，导出日志 <code>*.dmp</code>。</li>
<li>将 dmp 蓝屏日志上传至<a href="https://answers.microsoft.com/zh-hans/newthread?threadtype=Questions&amp;cancelurl=/zh-hans/windows/forum&amp;forum=windows&amp;filter=" target="_blank" rel="noopener noreferrer">微软社区</a>，会有技术人员帮助你分析蓝屏原因。由于微软社区不支持上传附件，请先将 dmp 日志上传至百度云或微云，然后将分享链接放在问题中。</li>
</ol>
<h2> 蓝屏解决方案</h2>
<p>分析完蓝屏日志后，我们得到了具体的蓝屏冲突进程，然后在引擎中搜索该进程名，以确定它是系统模块、驱动还是某个程序。</p>
<h3> 系统模块报错</h3>
<p><code>ntkrnlmp.exe</code>、<code>*.symbols.exe</code> 是系统模块，该报错不是蓝屏的底层原因，实际是由应用进程与系统冲突引起的蓝屏，需重新深入分析日志。不要尝试<strong>删除系统模块</strong>。</p>
<h3> 驱动冲突</h3>
<p><code>nvlddmkm.sys</code>、<code>amdkmdag.sys</code> 等后缀为 <code>*.sys</code> 的进程报错，多为硬件驱动错误，可通过回退驱动来解决。</p>
<ol>
<li>开始菜单上搜索并打开「设备管理器」。</li>
<li>设备管理器上找到对应硬件，点击「回退驱动程序」。</li>
</ol>
<figure><img src="http://tc.seoipo.com/2022-12-17-10-38-44.png" alt="" tabindex="0" loading="lazy"><figcaption>还原驱动</figcaption></figure>
<p>如果无法回退驱动程序，则去硬件官网下载旧驱动或最新驱动。如果仍然出现蓝屏，可以尝试在设备管理器中卸载设备，然后重启电脑，让系统启用自带驱动。如果上述方案都没有解决问题，可以尝试更新主板 BIOS，关闭超频。</p>
<p>如果你不清楚报错进程与哪个硬件相关，尝试多种方法仍然无法修复，那只能用强行删除来尝试修复。但在删除前，必须<strong>备份好相关文件及其所在路径</strong>。如果删除后无法进入系统，则需要使用 PE 系统来还原备份文件。如果相关文件数量超过 5 个，或者不清楚如何使用 PE，则不要强制删除任何 <code>*.sys</code> 文件。</p>
<h3> 未知程序</h3>
<p>如果是与系统模块、驱动无关的未知程序，可使用 <a href="https://www.voidtools.com/zh-cn/downloads/" target="_blank" rel="noopener noreferrer">Everything</a> 搜索该进程的位置，<strong>备份</strong>后尝试删除该程序。如果提示文件被占用，可使用火绒或 Unlocker 来解除文件占用，但一定要先做好备份。</p>
<p><code>MpKslDrv.sys</code> 通常用于恶意软件保护，对系统影响不大。如果出现该报错，可使用 Defender Control 关闭微软杀毒 Defender Antivirus Service。@yys 爱与诚 反馈，「当我关掉 defender 的时候 他自己消失了，不用我删除。当我打开 他又出现了，又删除不了」。</p>
<h2> 蓝屏解决集锦</h2>
<p>如果不想分析日志，甚至找不到蓝屏日志，可以尝试以下方法，这些方法可以解决 80% 的蓝屏问题：</p>
<ul>
<li>驱动类：更新显卡驱动；更新网卡驱动；重置声卡驱动；重置 SATA AHCI 驱动；</li>
<li>主板类：擦拭内存条；重置 BIOS；增加 CPU 电压；关闭超线程；</li>
<li>系统修复：管理员权限打开命令行（cmd），运行 <code>sfc/Scannow</code>，系统会自动检查损坏文件并修复；</li>
<li>终极方法：重装系统，测试期间尽量<strong>使用默认系统驱动</strong>。如果重装后仍然出现蓝屏，说明你新装的驱动有问题，可以卸掉有问题的驱动。</li>
</ul>
<h2> 常见问题</h2>
<h3> 装不了 WinDbg</h3>
<p>少数情况安装应用报错，本地无法分析日志。此时，我们可以导出蓝屏日志，上传到<a href="https://answers.microsoft.com/zh-hans/newthread?threadtype=Questions&amp;cancelurl=/zh-hans/windows/forum&amp;forum=windows&amp;filter=" target="_blank" rel="noopener noreferrer">微软社区</a>，会有人帮助分析原因。</p>
<h3> 分析日志时报错</h3>
<p>分析蓝屏日志时出错，或 WinDbg 对 minidump 蓝屏日志的访问被拒绝，这都是由于系统盘读取权限未开放所导致的。</p>
<p>解决办法有 3 种：</p>
<ul>
<li>将 minidump 文件复制到 D 盘，然后手动导入到 WinDbg 进行分析。</li>
<li>@天气控制仪：以管理员权限运行 WinDbg。</li>
<li>@紫石英与灯心草：右键单击 minidump 蓝屏日志，点击「属性」&gt;「权限」&gt;「点击用户」&gt;「点击继承」&gt;「同意」。</li>
</ul>
<h3> 找不到 minidump 文件</h3>
<p>默认情况下，蓝屏日志保存在 <code>C:\Windows\Minidump</code> 文件夹中。如果该文件夹为空，则表明蓝屏日志尚未生成，可等待下一次蓝屏时再查看。如果多次发生蓝屏，但该文件夹仍未生成日志，可尝试在资源管理器中打开 <code>%SystemRoot%\Minidump</code>。若失败，可按以下步骤进行设置：</p>
<ol>
<li>打开「控制面板」&gt;「系统」&gt;「高级系统设置」&gt;「高级」&gt;「启动和故障恢复」&gt;「设置」；</li>
<li>选择「写入调试信息」&gt;「小内存转储（256KB）」，并将「小存储目录」设置为 <code>%SystemRoot%\Minidump</code>，确定后重启计算机；</li>
<li>再次异常关机后，可前往 <code>%SystemRoot%\Minidump</code> 提取即可。</li>
</ol>
<p>视频说明：</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20201025223307.png" type="image/png"/>
    </item>
    <item>
      <title>这些全网卖爆的“必备”品，我劝你别买……</title>
      <link>https://mars.run/posts/2020-11-01-gym_equipment_throw_away.html</link>
      <guid>https://mars.run/posts/2020-11-01-gym_equipment_throw_away.html</guid>
      <source url="https://mars.run/rss.xml">这些全网卖爆的“必备”品，我劝你别买……</source>
      <description>受疫情政策的影响，双十一价格普遍比往年实惠，但有些爆款价格再低也值得买。 我整理了自己的购物清单和闲鱼记录，发现 10 件不值得买的「毒草」，为大家提供一些参考意见，避免入坑。 划船机 自从看了《纸牌屋》，就一直想要个划船机。精挑细选舍去昂贵的国外品牌，淘宝众筹 3980 购入国产，却发现了人性 -「懒」。</description>
      <category>购物</category>
      <pubDate>Sun, 01 Nov 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>受疫情政策的影响，双十一价格普遍比往年实惠，但有些爆款价格再低也值得买。</p>
<p>我整理了自己的购物清单和闲鱼记录，发现 10 件不值得买的「毒草」，为大家提供一些参考意见，避免入坑。</p>
<h2> 划船机</h2>
<p>自从看了《纸牌屋》，就一直想要个划船机。精挑细选舍去昂贵的国外品牌，淘宝众筹 3980 购入国产，却发现了人性 -「懒」。</p>
<figure><img src="http://tc.seoipo.com/20200417091952.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：划着船看着电视，运动娱乐两不耽误，轻松减肥。</p>
<p><strong>真实</strong>：划几分钟就累成狗，根本无心看电视。划船机可以直立节省空间，但也意味着每次运动都需要先搬运几十公斤的划船机。慢慢用得越来越少，一个月可能只用一次，最后 499 自提出掉。</p>
<p>出掉过程也很神奇，当晚 12 点突然决定卖掉家里所有非必需品，时间不够就只拍了划船机照片，随手写 499 后睡觉。凌晨 3 点来了买家，问了几个问题无人回复，然后就直接拍了。早上起来，我一查才知道二手划船机一般在 1000-2000，但想着人家都拍了，就还是出给他了。之后，出的器材都必须查闲鱼同款价格，不至于亏这么多。</p>
<h2> 动感单车</h2>
<p>中学时代，每天骑车上学，那会体重最轻。于是淘宝 999 购入动感单车。</p>
<figure><img src="http://tc.seoipo.com/20200418183425.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：骑自行车多轻松，每天一小时，体重回高中。</p>
<p><strong>真实</strong>：最低档确实轻松，但效果也为零。调成高档，骑车也变狗。动感单车最大的锻炼作用是当哑铃，每次使用都得搬运 35KG。占地比划船机更大，很快就闲置了，半年后 399 自提出掉。</p>
<h2> 健腹轮</h2>
<p>每天都想瘦肚子，健腹轮似乎是个完美辅助，于是京东 311 购入貌似高级的自动回弹健腹轮。</p>
<figure><img src="http://tc.seoipo.com/20200417092142.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：每天一百卷腹，一个月后肚子就瘦了。</p>
<p><strong>真实</strong>：咬牙坚持到一百，但动作完全变形。体重太大又导致膝盖、手掌负担过大，逐渐闲置。使用 2 年，健腹轮统计数字停在 4300，最后 130 跟划船机一起自提出掉了。</p>
<h2> TRX 悬挂训练</h2>
<p>TRX 算比较热门的运动设备了，无需安装，随时锻炼。于是美亚 889.4 入手。</p>
<figure><img src="http://tc.seoipo.com/20200421125830.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：一看这专业的装备，就感觉自己瘦了。</p>
<p><strong>真实</strong>：想象中的自己瘦了很多回，但人懒再专业的设备也没用，最后送给腰伤的朋友了。</p>
<h2> 电动瑜伽柱</h2>
<p>运动后需要放松筋肉，我们需要瑜伽柱。人懒不愿动的话，那就需要电动的，于是严选 347.6 购入电动肌肉按摩滚。</p>
<figure><img src="http://tc.seoipo.com/20200417100520.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：运动完大汗淋漓，电动瑜伽柱款缓解疲劳，加速消耗脂肪。</p>
<p><strong>真实</strong>：运动呢？大汗呢？使用场景太少，甚至不如筋膜枪，直接闲置。这款挂了一周也没人买，最后 60 到付低价出了。</p>
<h2> 开跨拉筋器</h2>
<p>「筋长一寸寿长十年」，于是淘宝 519 购入拉筋器。</p>
<figure><img src="http://tc.seoipo.com/20201101114736.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：每天多拉一毫米，明年炼成一字马。</p>
<p><strong>真实</strong>：原理与自重下压拉伸相同，但占位且笨重，使用频率越来越低，最后 150 自提出掉。</p>
<h2> 头皮按摩器</h2>
<p>头皮健康才是真的健康，于是严选 179 购入龙爪手头皮按摩仪。</p>
<figure><img src="http://tc.seoipo.com/20200417095327.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：电动按摩头皮，能活一百八。</p>
<p><strong>真实</strong>：仪器需要 3 颗电池驱动，举着一斤的重量来按摩头皮，真的大丈夫？花了 5.5 买入 2 个八爪鱼按摩器 (推荐)，重量不过 10g，效果好太多。最终 52 包邮出。</p>
<h2> 理发器</h2>
<p>不愿出门理发，于是京东 99 购入电动理发器。</p>
<figure><img src="http://tc.seoipo.com/20201101115630.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：楼下理发一次 45，用 2 次就能回本，多理几次自动晋升理发师。</p>
<p><strong>真实</strong>：确实回本了，两次光头，然后闲置。春节带回老家，给爷爷添加了一个剃头神器。</p>
<p>永远别相信身边人的剃头技术，除非你想要光头。</p>
<h2> 灭蚊灯</h2>
<p>夏天一到，就被推送灭蚊灯。没抵御住，于是淘宝 78 购入灭蚊灯。</p>
<figure><img src="http://tc.seoipo.com/20201101115348.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：每天一小时，蚊子去无踪。</p>
<p><strong>真实</strong>：该来的蚊子总是会来，小功率的灭蚊灯等于安慰剂。效果还不如紫外线灯直接杀菌来得爽快，最后 38 包邮出掉。</p>
<h2> Dyson 吸尘器</h2>
<p>搬新家，怎少得了帅 (z) 气 (b) 的电器，于是美亚 1536.51 购入 Dyson DC58 V6 吸尘器。</p>
<figure><img src="http://tc.seoipo.com/20200421110937.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p><strong>想象</strong>：快速打扫，轻松无灰尘。</p>
<p><strong>真实</strong>：吸尘器需要人来使用，打扫也不可能轻松。Dyson 造型不错，但吸力就远没吹得那么厉害。打扫阿姨也嫌弃 Dyson，推荐我买了海尔一款 109 的吸尘器。用后感觉真香，比 Dyson 实用太多。Dyson 545 包邮出。</p>
<p>生活电器必须实用为先，否则再好看也只会闲置。</p>
<h2> 总结</h2>
<p>运动器材需要大量空间，不适合居家使用。普通人健身，靠自重或简单器材就足够了。大型运动器材只会占据房屋位置，不会带来任何的健身加成。</p>
<p>买东西前，千万要看看是否会常用。这方面，我是完美的反面教材，除了上面一系列用品外，还有墙角落的神舟笔记本（各种神奇 Bug，改装黑苹果）、胸带 + 心率表（先保持运动吧）、玩客云（专注废硬盘，被 NAS 替代）、北通游戏手柄 (永远买但永远不用)、小米 + 微软馒头鼠标（入手 3 个 MX Vertical 替代）、BackJoy + 电脑手托架（Embody 替代）、松下蒸汽眼罩（眼部按摩仪替代）、美容灯 (已变床头桌垫)、艾灸仪 (搭配防毒面具使用)。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20200417091952.png" type="image/png"/>
    </item>
    <item>
      <title>小狼毫 3 分钟入门及进阶指南</title>
      <link>https://mars.run/posts/2020-11-27-rime_input.html</link>
      <guid>https://mars.run/posts/2020-11-27-rime_input.html</guid>
      <source url="https://mars.run/rss.xml">小狼毫 3 分钟入门及进阶指南</source>
      <description>常年使用搜狗输入法，备份时发现搜狗词库高达 27 万条，其中 99% 的内容是垃圾词条，即使偶尔输入过一次的内容也被输入法记录。更可怕的是，词库无法从云端删除，只要你输入过一次，搜狗就永远记住了。这哪里是输入法，根本是个键盘记录器。 之后，我尝试了各种输入法：百度、讯飞、手心等依旧是键盘记录器；影子输入法开源但不稳定；谷歌拼音停止更新；微软拼音词库收录慢且难以转移；只有小狼毫开源、稳定，而且又能多设备同步词库。 Rime 小狼毫输入法下载：官方渠道，国内搬运。</description>
      <category>工具</category>
      <pubDate>Fri, 27 Nov 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>常年使用搜狗输入法，备份时发现搜狗词库高达 27 万条，其中 99% 的内容是垃圾词条，即使偶尔输入过一次的内容也被输入法记录。更可怕的是，词库无法从云端删除，只要你输入过一次，搜狗就永远记住了。这哪里是输入法，根本是个<strong>键盘记录器</strong>。</p>
<p>之后，我尝试了各种输入法：百度、讯飞、手心等依旧是键盘记录器；影子输入法开源但不稳定；谷歌拼音停止更新；微软拼音词库收录慢且难以转移；只有小狼毫开源、稳定，而且又能多设备同步词库。</p>
<p>Rime 小狼毫输入法下载：<a href="https://github.com/rime/weasel/releases/download/0.14.3/weasel-0.14.3.0-installer.exe" target="_blank" rel="noopener noreferrer">官方渠道</a>，<a href="https://wwi.lanzoui.com/iDyF4pdzmni" target="_blank" rel="noopener noreferrer">国内搬运</a>。</p>
<h2> 基础设置</h2>
<p>安装小狼毫时，不要修改用户文件夹位置，否则后续输入法定制容易出错。安装完成后，右键单击任务栏的小狼毫图标，点击「输入法设定」，勾选输入法（推荐「朙月拼音·简化字」），点击「中」，选择皮肤后即可使用小狼毫输入法。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup><a class="footnote-anchor" id="footnote-ref1"><sup class="footnote-ref"></sup></a><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></p><a class="footnote-anchor" id="footnote-ref2">
</a><p><a class="footnote-anchor" id="footnote-ref2">小狼毫不推荐使用</a><a href="https://github.com/fkxxyz/rime-cloverpinyin" target="_blank" rel="noopener noreferrer">四叶草</a>等集成方案，建议参考 <a href="https://github.com/ssnhd/rime" target="_blank" rel="noopener noreferrer">Squirrel 鼠须管配置</a>和<a href="https://blog.csdn.net/qq_42204675/article/details/86422450" target="_blank" rel="noopener noreferrer">小狼毫 [rime_win][眀月拼音] 简单配置方法</a> 以「朙月拼音·简化字」为基础定制自己的输入法，最大限度提升输入法效率。小狼毫的魅力在于可自定义，让输入法按你的想法输出，定制流程参考下面的进阶指南。</p>
<h2> 扩充词库</h2>
<p>扩充词库包含英文联想、网络流行语、成语、俗语等，能提高输出效率。热门词库有 <a href="https://github.com/Chernfalin/better-rime-dict" target="_blank" rel="noopener noreferrer">BetterRime 词库</a>、<a href="https://github.com/Chernfalin/SuperRimeDict" target="_blank" rel="noopener noreferrer">SuperRime 拓展词库</a>、<a href="https://gist.github.com/lotem/5440677" target="_blank" rel="noopener noreferrer">自定义短语</a>和 <a href="https://github.com/rime-aca/dictionaries" target="_blank" rel="noopener noreferrer">Rime 擴充詞庫</a>。</p>
<p>从容量上来说，SuperRime 词库 &gt; BetterRime 词库 &gt; Rime 擴充詞庫，但词库越大错误收录也越多，建议按实际需求选择词库。</p>
<p>词库解压后，修改 <code>luna_pinyin.extended.dict.yaml</code>，选择词库范围。<code>mysymbols.yaml</code> 对全角和半角符号都做了优化，有其他需求可以自行修改。</p>
<h2> 双拼方案</h2>
<p>为了提高输出效率，我使用的是小鹤双拼方案。<a href="https://github.com/rime/rime-double-pinyin" target="_blank" rel="noopener noreferrer">小狼毫官方配置库</a>收录了自然码双拼、智能 ABC 双拼、小鹤双拼、MSPY 双拼和拼音加加双拼。</p>
<p>配置时，将官方配置库中的 <a href="https://github.com/rime/rime-double-pinyin/blob/master/double_pinyin_flypy.schema.yaml" target="_blank" rel="noopener noreferrer">double_pinyin_flypy.schema.yaml</a> 下载到小狼毫的用户文件夹。然后，右键单击任务栏小狼毫图标，选「输入法设定」，只勾选一个「小鹤双拼」。默认方案为繁体，可使用按键 F5 (部分版本是 F4)，将配置默认为简体。如果你不想翻页找字，可以参考由 @functoreality 提供的<a href="https://github.com/functoreality/rime-flypy-zrmfast" target="_blank" rel="noopener noreferrer">双拼加辅助码方案</a>。</p>
<p>双拼的自定义短语可参考<a href="https://blog.csdn.net/neninee/article/details/83692270" target="_blank" rel="noopener noreferrer">小狼毫自定义短语-Rime-双拼</a>。如果设定后无法使用简体输入，可将 <code>double_pinyin_flypy.schema.yaml</code> 中的 filters 模块剪贴到 translators 模块上方。</p>
<p>双拼不会显示当前输出字母，可参考<a href="https://github.com/rime/rime-double-pinyin/issues/6#issuecomment-754367706" target="_blank" rel="noopener noreferrer">使用双拼时如何同时显示按下的键以及双拼对应的拼音</a>。在 double_pinyin_flypy.schema.yaml 文件中，找到下方的代码行，然后换行加入 <code>- 'xform/^(.*)$/\U$1\E\t | $1/'</code>。这是同时显示拼音的核心代码，配置后的双拼会显示为 <code>{原始输出}|{对应拼音}</code>。</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 进阶指南</h2>
<p>在进阶前，需要进入小狼毫的默认用户文档位置，新建 YAML 文档来存储输入法设置修改。如果使用「朙月拼音·简化字」输入法方案，则新建「luna_pinyin_simp.custom.yaml」。<code>%APPDATA%\Rime</code> 是小狼毫默认的用户文档位置。如果安装时修改了用户文档位置，右键单击任务栏小狼毫图标，选择「用户文件夹」，即可进入用户文档。<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup></p><a class="footnote-anchor" id="footnote-ref3">
</a><p><a class="footnote-anchor" id="footnote-ref3">Rime 的官方文档非常详细，涵盖几乎所有的进阶需求，比如</a><a href="https://github.com/rime/home/wiki/CustomizationGuide" target="_blank" rel="noopener noreferrer">定制指南</a>、<a href="https://github.com/rime/home/wiki/RimeWithSchemata#rime-%E4%B8%AD%E7%9A%84%E6%95%B8%E6%93%9A%E6%96%87%E4%BB%B6%E5%88%86%E4%BD%88%E5%8F%8A%E4%BD%9C%E7%94%A8" target="_blank" rel="noopener noreferrer">文件配置说明</a>、<a href="https://github.com/rime/rime-emoji" target="_blank" rel="noopener noreferrer">emoji 集成</a> 和 <a href="https://github.com/rime/home/wiki/CustomizationGuide#%E6%A8%A1%E7%B3%8A%E9%9F%B3" target="_blank" rel="noopener noreferrer">模糊音设置</a>。</p>
<p>如果要在多个设备上<a href="https://github.com/rime/home/wiki/UserGuide#%E5%90%8C%E6%AD%A5%E7%94%A8%E6%88%B6%E8%B3%87%E6%96%99" target="_blank" rel="noopener noreferrer">同步用户资料</a>，请打开用户文件夹中的 <code>installation.yaml</code>，将其中的设备名称 <code>installation_id</code> 从长字符串修改为方便识别的名称，并在 <code>installation.yaml</code> 文本末尾添加用户资料同步位置 <code>sync_dir: 'D:\Sync\RIME'</code>，路径中不能出现中文。</p>
<p>打字习惯会保存在 <code>&lt;词典名&gt;.userdb.txt</code> 或 <code>&lt;词典名&gt;.userdb.kct.snapshot</code> 中。要还原个人输入习惯，则点击「用户词典管理」&gt;「导入文本码表」来恢复词频记录。</p>
<p>小狼毫主版本已多年未更新，可以用 rime 核心库 <a href="https://github.com/rime/librime/releases" target="_blank" rel="noopener noreferrer">librime</a> 替换小狼毫程序文件夹中的 rime.dll 来更新输入法。如果输入法中使用了 <code>Rime.lua</code> 的动态输出功能，可能会与核心库发生冲突，不要更换 rime.dll。</p>
<h2> 常见问题</h2>
<h3> 开机后不能输出中文</h3>
<p>有时开机后，不能正常输出中文，这是由于 <code>WeaselServer.exe</code> 未正常启动的原因。</p>
<p>此时，我们可以打开程序文件夹中的 <code>WeaselServer.exe</code> 来解决问题。该程序默认位置为 <code>C:\Program Files (x86)\Rime\weasel-0.14.3\WeaselServer.exe</code>。不要将 <code>WeaselServer.exe</code> 放入开启启动程序，会导致程序报错。</p>
<p>如果不想手动启动 <code>WeaselServer.exe</code>，可以使用 <a href="https://github.com/rockbenben/rime-WeaselServer" target="_blank" rel="noopener noreferrer">WeaselServerAutostart</a> 脚本工具。首先把脚本放置于小狼毫「程序文件夹」内，然后将脚本的快捷方式移动至开机启动目录 <code>%AppData%\Microsoft\Windows\Start Menu\Programs\Startup</code>。当开机时，如果检测到小狼毫未正常启动，脚本会自动启动对应程序。WeaselServerAutostart 脚本国内下载：<a href="https://wwx.lanzoux.com/if3znkka01g" target="_blank" rel="noopener noreferrer">https://wwx.lanzoux.com/if3znkka01g</a>。</p>
<h3> 输入法报错</h3>
<p>将用户文件夹设置为同步文件夹后，出现提示「有错误，请查看日志%TEMP%\rime.weasel.*.INFO」。这是由于用户文件夹设置为同步文件夹后导致的进程冲突。日志中有提示「另一个程序正在使用此文件，进程无法访问」。</p>
<p>遇到报错后，关闭任务管理器中的 <code>WeaselServer.exe</code> 进程，然后重新执行小狼毫算法服务。</p>
<h3> 切换输入法状态</h3>
<p>小狼毫只支持按键切换中英文，支持的按键是 Caps_Lock, Shift_L, Shift_R, Control_L, control_R，配置参考<a href="https://gist.github.com/lotem/2981316" target="_blank" rel="noopener noreferrer">使用 Control 鍵切換中西文</a>，修改 default.custom.yaml。</p>
<p>虽然小狼毫不能组合键切换，但可以使用 Windows 键盘切换设置组合键。设置中选择「时间和语言」&gt;「输入」&gt;「高级键盘设置」&gt;「语言栏选项」&gt;「高级键设置」，Ctrl+Space 是 Windows 默认的中文输入法/非输入法切换的快捷键。</p>
<h3> 输入法候选框闪烁</h3>
<p>中文输入法的候选框闪烁，无法显示候选词。排除键盘硬件问题，可以尝试拔除或更换键盘，以确认问题是否复现。Word 2016 下候选框闪烁可以参考 <a href="https://github.com/rime/weasel/issues/228" target="_blank" rel="noopener noreferrer">issue 228</a>。</p>
<h3> 删除错误「上屏」的词</h3>
<p>有时打错几次的字会出现在预选词的前排，影响了输入法的习惯词典。要删除这些错误的「上屏」词，只需将选字光标移到错词上，然后按下 Shift+Delete 或 Control+Delete 即可。</p>
<h3> 符号直接上屏</h3>
<p>小狼毫给字符提供了多个候选，比如 / 默认有 <code>"、", "/", "／", "÷"</code> 四个候选词。若要按 / 键直接输出「、」，则按下方代码修改 luna_pinyin.schema.yaml 中的 punctuator 区块。<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup></p><a class="footnote-anchor" id="footnote-ref4">
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></a><h3><a class="footnote-anchor" id="footnote-ref4"></a> 指定程序中默认输入法</h3>
<p>如果想在特定程序中默认使用英文输入法，可以在 <code>.\weasel.custom.yaml</code> 中加入下列代码。</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 不能输出 emoji</h3>
<p>根据官方文档的教程设置了 emoji，但无法输出符号。经过多种方案的测试，目前输出特殊字符最稳定的是 <a href="https://github.com/ssnhd/rime" target="_blank" rel="noopener noreferrer">Squirrel 鼠须管配置</a>，Windows 用户可以参考它来调整自己的输入法。</p>
<h3> 无法触发词库的特殊符号</h3>
<p>SuperRime 词库自带的标点及特殊表情设置有问题，需要在输入法设置文件夹 <code>luna_pinyin_simp.custom.yaml</code> 中植入触发标点及特殊表情的代码。</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://www.jianshu.com/p/296bba666604" target="_blank" rel="noopener noreferrer">30 分钟搞定 自由输入法 RIME 简明配置指南</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://www.jianshu.com/p/cffc0ea094a7" target="_blank" rel="noopener noreferrer">Rime 输入法—鼠须管 (Squirrel) 词库添加及配置</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote3" class="footnote-item"><p><a href="https://www.dazhuanlan.com/2019/10/06/5d995d43e4432/" target="_blank" rel="noopener noreferrer">小狼毫 RIME 输入法配置</a> <a href="#footnote-ref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote4" class="footnote-item"><p><a href="https://github.com/rime/home/wiki/CustomizationGuide#%E4%B8%80%E4%BE%8B%E5%AE%9A%E8%A3%BD%E6%A8%99%E9%BB%9E%E7%AC%A6%E8%99%9F" target="_blank" rel="noopener noreferrer">一例、定製標點符號</a> <a href="#footnote-ref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>减肥日志：4 周 15 斤</title>
      <link>https://mars.run/posts/2020-12-17-weight_log.html</link>
      <guid>https://mars.run/posts/2020-12-17-weight_log.html</guid>
      <source url="https://mars.run/rss.xml">减肥日志：4 周 15 斤</source>
      <description>巅峰时刻 190 斤，一个半月后 170 斤，最大的心得是控制吃。 一直不爱运动，又特喜欢吃肉，体重持续飙升。中间试过水果、胴体、一日两餐，但都无法坚持，出现了些效果但容易迅速反弹。 190 斤后发现自己的指标全部异常，放弃了快速减肥的想法，改为更换营养食谱，好好控制指数，让身体健康些。网上多为西餐食谱，一直吃不惯，后来改为中式营养食谱。 严格按照食谱吃后，前两周瘦 10 斤，其中 8 斤脂肪，速度太快都有点担心。4 周共瘦 15 斤，掉肉速度逐渐变缓。</description>
      <category>健康</category>
      <pubDate>Thu, 17 Dec 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>巅峰时刻 190 斤，一个半月后 170 斤</strong>，最大的心得是<strong>控制吃</strong>。</p>
<p>一直不爱运动，又特喜欢吃肉，体重持续飙升。中间试过水果、胴体、一日两餐，但都无法坚持，出现了些效果但容易迅速反弹。</p>
<p>190 斤后发现自己的指标全部异常，放弃了快速减肥的想法，改为更换营养食谱，好好控制指数，让身体健康些。网上多为西餐食谱，一直吃不惯，后来改为中式营养食谱。</p>
<p>严格按照食谱吃后，<strong>前两周瘦 10 斤</strong>，其中 <strong>8 斤脂肪</strong>，速度太快都有点担心。<strong>4 周共瘦 15 斤</strong>，掉肉速度逐渐变缓。</p>
<p>食谱初期容易有点饿，我逐渐将作息推早。原本睡觉多在凌晨 2、3 点，提前到 10、11 点睡。早睡后，起床时间也自动提早，一般 6 点起床。有时会 3、4 点突然起床，不知是什么原因。如果早起了，就直接起来工作，整天一样有精神。</p>
<p>个人体验，前两周掉的主要是浮肉，平常吃的太多，一直在身体积累。对于超重的人，控制摄入量后，掉肉会非常明显。</p>
<figure><img src="http://tc.seoipo.com/20201217094443.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>使用食谱前，先需要养成正确的减重习惯和心态。</p>
<ul>
<li>不要让自己饿肚子，每天至少要吃 3 顿正餐。</li>
<li>吃点心或正餐之前和之后都要喝一杯水，进食顺序按蔬菜&gt; 鱼肉蛋&gt; 主食</li>
<li>饭后半小时不要坐下</li>
<li>临睡前至少 1 小时停止用餐，并且要多喝水。</li>
<li>每咬一口食物，都要咀嚼一段时间。从身体真正饱足到大脑产生饱足感需要 15 分钟。吃慢一点，就不容易吃得过多。</li>
<li>每天称体重，然后找出 7 天的平均值。确保体重持续下降就好，不需要规定自己每周必须减掉多少体重。有时候体重可能会增加，尤其是女性在月经期间体内水分潴留，容易水肿，和你的饮食或锻炼习惯没有关系。</li>
<li>每周只减掉 0.5-1 公斤。快速减肥会减掉肌肉，而不是脂肪，而且也很难长期维持体重。</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>早餐</th>
<th>午餐</th>
<th>晚餐</th>
</tr>
</thead>
<tbody>
<tr>
<td>Day01</td>
<td>谷物牛奶 (燕麦片 40g+ 全脂奶粉 40g+ 蛋白粉 5g+ 黑咖啡 2g)；12 粒巴旦木；苹果 200g</td>
<td>什锦饭 (大米 30g+ 小米 30g+ 甜豌豆 15g+ 松子仁 5g+ 酱牛肉碎 30g+ 胡萝卜丁 30g)；蔬菜沙拉 (生菜 100g+ 熟鸡蛋 + 油醋汁半汤匙 4g)；猕猴桃 120g；无糖酸奶 100g</td>
<td>燕麦米饭 (燕麦粒 20g+ 大米 15g)；油煮蘑菇鸡肉菠菜 (菠菜 200g+ 蘑菇 50g+ 鸡腿 40g+ 香油 1 汤匙 8g)；豆浆 (黄豆 50g)</td>
</tr>
<tr>
<td>Day02</td>
<td>全麦三明治 (生菜 70g+ 鸡蛋 + 全麦吐司 60g+ 香油 2g)；12 粒原味开心果；牛奶 250g</td>
<td>双色菜花 (西兰花 100g+ 菜花 100g+ 香油 5g)；茄汁虾仁 (虾仁 75g+ 番茄酱 30g+ 油 8g)；二米饭 (小米 30g+ 糙米 30g)；牛奶咖啡 (低脂奶粉 20g+ 黑咖啡 2g)(先吃一半菜花)</td>
<td>木耳小白菜杂煮 (小白菜 150g+ 北豆腐 60g+ 鸡心 60g+ 黑木耳 6g+ 香油 3g)；红豆紫米薏米粥 (紫红糯米 30g+ 薏米 15g+ 赤小豆 30g)；蜜橘 100g(加餐)</td>
</tr>
<tr>
<td>Day03</td>
<td>红豆紫米薏米粥 (紫红糯米 30g+ 薏米 15g+ 赤小豆 30g)；水煮蛋；果仁菠菜 (菠菜 80g+ 花生仁 10g+ 香油 3g)；牛奶咖啡 (低脂奶粉 20g+ 黑咖啡 2g)</td>
<td>土豆沙拉 (土豆 200g+ 甜豌豆 30g+ 白芝麻 3g+ 鸡蛋 + 千岛酱 1 汤匙 8g)；酱卤鸭肝 60g；无糖酸奶 100g；10 粒小番茄</td>
<td>燕麦小米粥 (燕麦片 30g+ 小米 30g+ 小麦胚芽 10g)；蒸虾皮小油菜 (小油菜 180g+ 虾皮 5g+ 全麦粉 30g+ 花椒油 3g)；烤鸡腿 80g</td>
</tr>
<tr>
<td>Day04</td>
<td>奶香醪糟燕麦 (醪糟 100g+ 燕麦片 30g+ 全脂奶粉 40g)；鸡蛋；12 粒巴旦木</td>
<td>紫菜蛋花汤 (海苔 4g+ 熟芝麻 1g+ 鸡蛋)；牛奶燕麦 (燕麦片 20g+ 全脂牛奶 250g)；酸奶 100g；小叶橘 150g；全麦吐司 30g</td>
<td>火腿木耳煮油菜 (油菜 250g+ 木耳 10g+ 方火腿 60g+ 香油 1 汤匙 8g)；蒸红薯 180g；无糖酸奶 (酸奶 100g+ 蛋白粉 5g)(先吃油菜)</td>
</tr>
<tr>
<td>Day05</td>
<td>蒸食物套餐 (铁棍山药 80g+ 糯玉米带轴 150g+ 胡萝卜半根 100g)；奶香黄豆浆 (黄豆 20g+ 黑芝麻 5g+ 全脂奶粉 20g)；鸡蛋羹 (鸡蛋 + 香油 2g)；桂圆 150g</td>
<td>冲杂粮糊 (烤红豆粉 15g+ 燕麦粉 20g+ 小米粉 15g+ 全脂奶粉 10g)；生菜沙拉 (生菜 150g+ 千岛酱 10g)；酸奶 200g；蓝莓 100g；葡萄干 10g</td>
<td>坚果土豆泥 (土豆 250g+ 烤花生碎 12g+ 方火腿 70g)；油煮木耳小白菜 (小白菜 200g+ 木耳 6g+ 香油 4g)；酸奶 100g</td>
</tr>
<tr>
<td>Day06</td>
<td>香蕉燕麦蛋糕 (香蕉 120g+ 燕麦片 30g+ 鸡蛋 + 牛奶 200g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 100g+ 核桃仁 15g+ 芝麻油 4g)</td>
<td>鸡腿炖四宝 (鸡腿肉 100g+ 鲜蘑 80g+ 黄花菜 10g+ 甜豌豆 80g+ 木耳 10g)；银耳西兰花 (西兰花 200g+ 银耳 8g+ 香油 4g)</td>
<td>炖素三鲜 (冬笋 80g+ 香菇 10g+ 黄豆芽 120g+ 香油半汤匙 4g)；清蒸鱼 (蒸鲈鱼 120g+ 花生油 4g)；烤红薯 250g(按序食用)</td>
</tr>
<tr>
<td>Day07</td>
<td>苹果全麦煎饼 (苹果肉 180g+ 全麦粉 20g+ 葡萄干 3g+ 全脂奶粉 10g+ 油 3g)；麦胚红枣豆浆 (烤黄豆 15g+ 烤黑芝麻 8g+ 大枣肉 10g+ 熟小麦胚芽 10g)</td>
<td>生菜鸡蛋沙拉 (生菜 200g+ 鸡蛋*2+ 千岛沙拉酱 8g)；麦胚红枣豆浆 (烤黄豆 15g+ 烤黑芝麻 8g+ 大枣肉 10g+ 熟小麦胚芽 10g)；酸奶 150g；猕猴桃 120g</td>
<td>甘薯红米饭 (红薯 100g+ 红米 20g+ 白米 20g)；牛肉炖菜 (牛肉 100g+ 香菇 8g+ 胡萝卜 40g+ 魔芋粉丝 20g)；果仁菠菜 (菠菜 200g+ 花生仁 8g+ 香油 4g)</td>
</tr>
<tr>
<td>Day08</td>
<td>全麦面包 70g；牛奶 240g；水煮鸡蛋；桂圆 120g；9 粒巴旦木</td>
<td>油煮木耳小白菜鸡 (小白菜 25g+ 卤水豆腐 100g+ 鸡心 50g+ 黑木耳 2g+ 香油 3g)；炖素三鲜 (冬笋 40g+ 香菇 4g+ 黄豆芽 20g+ 香油 2g)；蒸红薯 200g；去皮小叶橘 200g</td>
<td>杂粮糊 (烤红豆粉 13g+ 燕麦粉 13g+ 小米粉 13g+ 脱脂奶粉 4g)；火腿木耳煮油菜 (油菜 100g+ 木耳 5g+ 方火腿 75g+ 香油 5g)；无糖酸奶 130g</td>
</tr>
<tr>
<td>Day09</td>
<td>香蕉燕麦蛋糕 (香蕉 120g+ 燕麦片 50g+ 鸡蛋 + 牛奶 240g)；15 粒开心果</td>
<td>燕麦小米浓粥 (燕麦片 25g+ 小米 13g+ 小麦胚芽 13g)；生菜沙拉 (生菜 200g+ 千岛酱 4g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 4g)；豆浆 (黄豆 44g)</td>
<td>二米饭 (小米 38g+ 糙米 15g)；蒸虾皮小油菜 (小油菜 200g+ 虾皮 6g+ 全麦粉 10g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 花生油 4g)；烤鸡腿肉 45g</td>
</tr>
<tr>
<td>Day10</td>
<td>苹果全麦煎饼 (苹果肉 105g+ 全麦粉 50g+ 葡萄干 3g+ 全脂奶粉 30g+ 油 3g)；鸡蛋羹 (鸡蛋 + 香油 2g)</td>
<td>蒸土豆 (土豆 200g+ 方火腿 75g+ 花生碎 2g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 花生油 3g)；猕猴桃 150g</td>
<td>甘薯红米饭 (红薯 50g+ 红米 25g+ 白米 25g)；油煮木耳小白菜鸡 (小白菜 100g+ 卤水豆腐 50g+ 鸡心 50g+ 木耳 4g)；豆浆 (黄豆 30g)</td>
</tr>
<tr>
<td>Day11</td>
<td>谷物牛奶 (燕麦片 50g+ 全脂奶粉 30g+ 黑咖啡 2g)；鸡蛋；10 粒巴旦木；蜜橘 120g</td>
<td>什锦饭 (大米 50g+ 小米 25g+ 甜豌豆 8g+ 松子仁 2g+ 酱牛肉碎 70g+ 胡萝卜丁 20g)；银耳西兰花 (西兰花 50g+ 银耳 4g+ 香油 4g)</td>
<td>燕麦米饭 (燕麦粒 25g+ 大米 38g)；牛肉炖菜 (牛肉 50g+ 香菇 7g+ 胡萝卜 20g+ 魔芋粉丝 20g)；烤鸡腿肉 50g</td>
</tr>
<tr>
<td>Day12</td>
<td>奶香醪糟燕麦 (醪糟 69g+ 燕麦片 38g+ 全脂奶粉 30g)；果仁菠菜 (菠菜 150g+ 花生仁 3g+ 香油 3g)；鸡蛋羹</td>
<td>土豆鸡蛋豌豆沙拉 (土豆 300g+ 甜豌豆 16g+ 白芝麻 3g+ 鸡蛋 + 千岛酱 4g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 20g+ 魔芋粉丝 20g+ 香油 2g)</td>
<td>蒸食物套餐 (铁棍山药 100g+ 糯玉米带轴 300g+ 胡萝卜 20g)；油煮蘑菇鸡肉菠菜 (菠菜 50g+ 蘑菇 35g+ 鸡腿 50g+ 香油 5g)；无糖酸奶 120g</td>
</tr>
<tr>
<td>Day13</td>
<td>红豆紫米薏米粥 (紫红糯米 25g+ 薏米 25g+ 红小豆 13g)；蔬菜沙拉 (生菜 200g+ 熟鸡蛋 + 油醋汁 5g)；牛奶咖啡 (牛奶 240g+ 咖啡 2g)</td>
<td>核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 100g+ 核桃仁 8g+ 香油 3g)；烤红薯 200g；酱牛肉 70g；猕猴桃 150g</td>
<td>麦胚红枣豆浆 (烤黄豆 30g+ 烤黑芝麻 16g+ 大枣肉 20g+ 熟小麦胚芽 20g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 2g)；果仁菠菜 (菠菜 150g+ 花生仁 2g+ 香油 1g)</td>
</tr>
<tr>
<td>Day14</td>
<td>鸡蛋生菜三明治 (生菜 150g+ 鸡蛋 + 全麦吐司 88g+ 香油 5g)；牛奶 240g</td>
<td>鸡腿炖四宝 (鸡腿肉 50g+ 鲜蘑 35g+ 黄花菜 4g+ 甜豌豆 8g+ 木耳 4g)；燕麦米饭 (燕麦粒 25g+ 大米 25g)；葡萄干 25g</td>
<td>双色菜花 (西兰花 50g+ 菜花 40g+ 油醋汁 2g)；茄汁虾仁 (虾仁 80g+ 番茄 10g+ 油 2g)；二米饭 (小米 38g+ 糙米 25g)；紫菜蛋花汤 (海苔 2g+ 鸡蛋*1)</td>
</tr>
<tr>
<td>Day15</td>
<td>红豆紫米薏米粥 (紫红糯米 25g+ 薏米 25g+ 赤小豆 13g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 75g+ 核桃仁 3g+ 香油 2g)；鸡蛋羹 (鸡蛋*1+ 香油 1g)；无糖酸奶 240g</td>
<td>油煮木耳小白菜鸡 (小白菜 100g+ 卤水豆腐 100g+ 鸡心 50g+ 木耳 4g+ 油 5g)；二米饭 (小米 50g+ 糙米 25g)</td>
<td>甘薯红米饭 (红薯 50g+ 红米 25g+ 大米 25g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 20g+ 魔芋粉丝 20g+ 油 5g)；烤鸡腿肉 50g</td>
</tr>
<tr>
<td>Day16</td>
<td>奶香醪糟燕麦 (醪糟 35g+ 燕麦片 38g+ 全脂奶粉 30g)；鸡蛋；蜜橘 120g</td>
<td>蔬菜沙拉 (生菜 200g+ 鸡蛋 + 油醋汁 5g)；清蒸鱼 (蒸鲈鱼 80g+ 花生油 5g)；蒸土豆 300g</td>
<td>油煮鸡肉蘑菇菠菜 (菠菜菜 100g+ 蘑菇 35g+ 鸡腿肉 75g+ 香油 5g)；蒸红薯 250g；豆浆 (黄豆 50g)</td>
</tr>
<tr>
<td>Day17</td>
<td>香蕉燕麦蛋糕 (香蕉 80g+ 燕麦片 50g+ 鸡蛋 + 牛奶 240g)</td>
<td>粉蒸土豆鸡肉 (土豆 200g+ 鸡腿肉 50g+ 蒸肉米粉 5g+ 烤花生碎 3g)；双色菜花 (西兰花 50g+ 菜花 80g+ 油醋汁 3g)；酱牛肉 150g；猕猴桃 35g</td>
<td>麦胚红枣豆浆 (烤黄豆 30g+ 烤黑芝麻 16g+ 大枣肉 20g+ 熟小麦胚芽 20g)；火腿木耳煮油菜 (油菜 100g+ 木耳 4g+ 方火腿 75g+ 香油 4g)</td>
</tr>
<tr>
<td>Day18</td>
<td>鸡蛋生菜三明治 (生菜 150g+ 鸡蛋 + 全麦吐司 88g+ 香油 3g)；奶香黄豆浆 (黄豆 13g+ 黑芝麻 3g+ 全脂奶粉 20g)</td>
<td>杂粮糊 (烤红豆粉 13g+ 燕麦粉 13g+ 小米粉 13g+ 脱脂奶粉 2g)；油煮木耳小白菜鸡 (小白菜 150g+ 卤水豆腐 40g+ 鸡心 75g+ 木耳 4g+ 香油 5g)；苹果 150g</td>
<td>蒸食物套餐 (铁棍山药 60g+ 糯玉米带轴 200g+ 胡萝卜 100g)；鸡腿炖四宝 (鸡腿肉 50g+ 鲜蘑 17g+ 黄花菜 2g+ 甜豌豆 4g+ 黄豆芽 10g)；生菜沙拉 (生菜 50g+ 千岛酱 4g)；无糖酸奶 130g</td>
</tr>
<tr>
<td>Day19</td>
<td>苹果全麦煎饼 (苹果肉 60g+ 全麦粉 50g+ 葡萄干 3g+ 全脂奶粉 20g+ 油 5g)；牛奶 240g</td>
<td>土豆鸡蛋豌豆沙拉 (土豆 300g+ 甜豌豆 32g+ 白芝麻 2g+ 鸡蛋 + 千岛酱 4g)；茄汁虾仁 (虾仁 80g+ 番茄酱 2g+ 油 10g)</td>
<td>燕麦小米浓粥 (燕麦片 13g+ 小米 38g+ 小麦胚芽 13g)；火腿木耳煮油菜 (油菜 100g+ 木耳 4g+ 方火腿 75g)；无糖酸奶 130g</td>
</tr>
<tr>
<td>Day20</td>
<td>蒸食物套餐 (铁棍山药 60g+ 糯玉米带轴 200g+ 胡萝卜 100g)；紫菜蛋花汤 (海苔 2g+ 鸡蛋*1)；果仁菠菜 (菠菜 100g+ 花生仁 3g+ 香油 3g)</td>
<td>炖素三鲜 (冬笋 40g+ 香菇 17g+ 黄豆芽 20g+ 香油 3g)；牛肉炖菜 (牛肉 50g+ 香菇 4g+ 胡萝卜 10g+ 魔芋粉丝 20g)；燕麦米饭 (燕麦粒 25g+ 大米 50g)；烤鸡腿肉 50g</td>
<td>什锦饭 (大米 38g+ 小米 25g+ 甜豌豆 8g+ 松子仁 3g+ 酱牛肉碎 70g+ 胡萝卜丁 20g)；银耳西兰花 (西兰花 25g+ 银耳 4g+ 香油 2g)</td>
</tr>
<tr>
<td>Day21</td>
<td>谷物牛奶 (燕麦片 50g+ 全脂奶粉 30g+ 黑咖啡 2g)；鸡蛋；桂圆 120g</td>
<td>油煮鸡肉蘑菇菠菜 (菠菜菜 100g+ 蘑菇 70g+ 鸡腿肉 50g+ 香油 5g)；烤红薯 200g；猕猴桃 150g；无糖酸奶 130g</td>
<td>粉蒸土豆鸡肉 (土豆 100g+ 鸡腿肉 50g+ 蒸肉米粉 5g+ 烤花生碎 2g)；茄汁虾仁 (虾仁 80g+ 番茄酱 10g+ 油 1g)；二米饭 (小米 25g+ 糙米 13g)；核桃仁拌豌豆苗 (豌豆苗/鸡毛菜 75g+ 核桃仁 5g+ 香油 2g)</td>
</tr>
</tbody>
</table>
<p>以上食谱整理自范志红老师的《吃出好身材－21 天营养食谱》，侵权删。</p>
<p>食谱注意：</p>
<ul>
<li>晚餐时补充复合 B 族维生素药片，乳糖敏感者可以将纯牛奶换成低乳糖奶</li>
<li>蒸蛋羹可以用水煮蛋替代；鸡心、鸭肝、方火腿可以用鸡腿肉、酱牛肉替换；什锦饭中的酱牛肉碎换成炒鸡丁；松子仁可以换成熟芝麻或开心果碎；小叶橘可以替换成等量其他甜度低的新鲜水果，如草莓或半个苹果等；桂圆可以换成其他自己爱吃、吃了之后胃肠舒服的应季水果，比如橘子、橙子、猕猴桃等。水果可以午饭前一小时食用。</li>
<li>小米、燕麦提前浸泡半小时到一小时再和大米一起煮口感较好。如果没有杂粮粉，可以直接用这些杂粮煮成饭，每次煮多一点，分成几份冷冻起来，每次蒸热吃一份。</li>
<li>食谱部分可进行微调，如果不会做，可直接按原料食用。</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20201217094443.png" type="image/png"/>
    </item>
    <item>
      <title>抛弃 Lastpass，拥抱 KeePass-免费开源的绿色密码管理软件</title>
      <link>https://mars.run/posts/2021-01-02-keepass_the_real_lastpassword.html</link>
      <guid>https://mars.run/posts/2021-01-02-keepass_the_real_lastpassword.html</guid>
      <source url="https://mars.run/rss.xml">抛弃 Lastpass，拥抱 KeePass-免费开源的绿色密码管理软件</source>
      <description>用了 5 年的 Lastpass，但随着网站密码的增加，遇到的 bug 也越来越多。有次误操作，合并了 Lastpass 密码库，丢失了一大批密码，对云端密码库的信任度直接降为零。 之后，尝试了 1Password、Bitwarden、Enpass、Remembear 多种密码管理软件，最终选择开源免费且自动填充超强的 KeePass。 KeePass 的密码保存在本地的 .kdbx 数据库中，让你真正掌握自己的账号密码。搭配坚果云或同步盘的 KeePass，能实现密码多端同步，让手机与电脑使用同一密码库。</description>
      <category>工具</category>
      <pubDate>Sat, 02 Jan 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>用了 5 年的 Lastpass，但随着网站密码的增加，遇到的 bug 也越来越多。有次误操作，合并了 Lastpass 密码库，丢失了一大批密码，对云端密码库的信任度直接降为零。</p>
<p>之后，尝试了 1Password、Bitwarden、Enpass、Remembear 多种密码管理软件，最终选择<strong>开源免费且自动填充超强</strong>的 KeePass。</p>
<p>KeePass 的密码保存在本地的 <code>.kdbx</code> 数据库中，让你真正掌握自己的账号密码。搭配坚果云或同步盘的 KeePass，能实现密码多端同步，让手机与电脑使用同一密码库。</p>
<p>KeePass 官网下载（Windows）：<a href="https://keepass.info/download.html" target="_blank" rel="noopener noreferrer">https://keepass.info/download.html</a>。安卓推荐 <code>Keepass2Android</code>，iOS/Mac 推荐 <code>Strongbox</code> 或 <code>KeePassium</code>。</p>
<p>接着我会逐步介绍 KeePass 的配置和插件，也可以直接拖到文章底部，下载懒人包，开箱即用。</p>
<h2> KeePass 设置</h2>
<h3> 选项设置</h3>
<p>点击菜单栏上的「工具」&gt;「选项」&gt;「外观」，在「主窗口」中勾选「最小化到系统托盘（而不是任务栏）」和「关闭按钮 [X] 最小化主窗口，而不是退出程序」。</p>
<p>然后从「选项」中选择「集成」，将「全局自动输入」设为 Ctrl+Alt+A，「全局自动输入（仅密码）」设为 Ctrl+Alt+Shift+A。</p>
<h3> 自动输入规则</h3>
<p>选中左侧的数据库，右键单击「编辑群组」&gt;「自动输入」，替换默认规则为 <code>^{SPACE}{DELAY 100}{CLEARFIELD}{USERNAME}{TAB}{PASSWORD}{DELAY 100}{ENTER}^{SPACE}</code>。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><a class="footnote-anchor" id="footnote-ref1">
<p><code>^{SPACE}</code> 即 <code>Ctrl+Space</code>，该热键能关闭或启用当前输入法。关闭输入法后，默认为美式键盘输入。</p>
<p><code>Ctrl+Space</code> 需在输入法编辑状态下才能生效，而密码区都禁用输入法编辑。因此，输入密码完成后，可能输入法并未重置，要按 <code>Ctrl+Space</code> 才能正常启用输入法。</p>
</a><h3><a class="footnote-anchor" id="footnote-ref1"></a> 匹配多个网址</h3>
<p>KeePass 不能在一个条目填写多个匹配网址，但不同条目可以共享用户名、密码等字段数据，并且通过更改被引用的数据条目，所有其他条目也会同步使用更新值。<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></p><a class="footnote-anchor" id="footnote-ref2">
<p>比如 <code>163.com</code> 和 <code>youdao.com</code> 都使用网易账户，账号密码相同，根据网址建立了 2 个条目。首先，在 163 条目输入实际的账户密码，将其作为网易账户的主条目。然后，双击进入 youdao 条目，点击 Edit Entry 界面左下角的「工具」&gt;「插入字段引用」&gt;「在用户名/密码字段」，选中需要引用的条目。设置好后，字段旁边会出现分享符，表明这是引用字段，该字段数值会跟随主条目更新。引用字段的实际内容类似 <code>{REF:P@I:8CC19B988F0F9D499459B741753BEE5F}</code>，更改账户密码只能在主条目上进行。</p>
<figure><img src="http://tc.seoipo.com/2022-10-18-11-41-15.png" alt="" tabindex="0" loading="lazy"><figcaption>引用字段设置步骤</figcaption></figure>
</a><h2><a class="footnote-anchor" id="footnote-ref2"></a> 必备插件</h2>
<p>KeePass 需要配置插件，才能实现密码自动输入。下载插件并放入指定文件夹 <code>\Plugins</code>，重启 KeePass 即可使插件生效。</p>
<h3> KeePassHttp</h3>
<p><a href="https://github.com/pfn/keepasshttp" target="_blank" rel="noopener noreferrer">KeePassHttp</a> 是 Keepass 的连接核心，搭配浏览器插件 KeePassHttp-Connector，可以实现浏览器自动填充密码效果。</p>
<p>如果网页有不能被识别用户名或密码框，可使用 KeePassHttp-Connector 的「Choose own credential fields for this page」功能。</p>
<h3> KPEnhancedEntryView</h3>
<p><a href="https://keepass.info/plugins.html#kpenhentryview" target="_blank" rel="noopener noreferrer">KPEnhancedEntryView</a> 增强视觉效果，为达到最佳显示效果，按以下配置：</p>
<ul>
<li>在主界面中点击「显示」&gt;「窗口布局」&gt;「平铺」；</li>
<li>在主界面中点击「显示」&gt;「列设置」，只选择：「标题」&gt;「确定」。大家也可以按自己要求选择。</li>
</ul>
<h3> AutoTypeSearch</h3>
<p><a href="https://keepass.info/plugins.html#atsearch" target="_blank" rel="noopener noreferrer">AutoTypeSearch</a> 提供全局框，输入热键 <code>Ctrl+Shift+A</code> 后，搜索关键词输入密码。</p>
<figure><img src="http://tc.seoipo.com/20191013083950.png" alt="" tabindex="0" loading="lazy"><figcaption>AutoTypeSearch 通用设置</figcaption></figure>
<h3> KP Entry Templates</h3>
<p><a href="https://github.com/mitchcapper/KPEntryTemplates" target="_blank" rel="noopener noreferrer">KP Entry Templates</a> 可以设置保存模板，配置方法如下：</p>
<ol>
<li>点击 KeePass 主界面的「文件」&gt;「数据库设置」&gt;「高级」，在「模板记录组」中选择一个群组，点击「确定」；</li>
<li>返回主界面，点击步骤 1 中选择的群组，按 Ctrl+I（或点击上方工具栏的钥匙图标）添加记录；</li>
<li>点击「自动输入」，勾选「双通道自动输入混淆」（<strong>以后用模板添加记录时就不需要再勾选，一劳永逸</strong>）；</li>
<li>点击最左边的「Template」&gt;「Init As Template」，配置好所需模板，点击「确定」。</li>
</ol>
<h3> KPSourceForgeUpdateChecker</h3>
<p><a href="https://sourceforge.net/projects/kpsfupdatechecker/reviews" target="_blank" rel="noopener noreferrer">KPSourceForgeUpdateChecker</a> 可以帮助检查 KeePass 及其插件是否有更新，功能从菜单栏上点击「帮助」&gt;「检查更新」进入，会使用 SourceForge 上的插件更新信息。</p>
<h2> 可选插件</h2>
<h3> KeeTrayTOTP</h3>
<p>如果你有更高安全要求，<a href="https://github.com/victor-rds/KeeTrayTOTP/releases/" target="_blank" rel="noopener noreferrer">KeeTrayTOTP</a> 能增加二次动态验证，使用参考<a href="https://www.cnblogs.com/tielemao/p/9613839.html" target="_blank" rel="noopener noreferrer">使用 KeePass 管理两步验证</a>。</p>
<h3> WebAutoType</h3>
<p><a href="https://keepass.info/plugins.html#webautotype" target="_blank" rel="noopener noreferrer">WebAutoType</a> 是很多人的推荐插件，启动密码热键后会自动匹配当前网址、标题。这对于已经有大量密码的人来说，并不实用，可不安装。</p>
<h3> Yet Another Favicon Downloader</h3>
<p><a href="https://keepass.info/plugins.html#yafd" target="_blank" rel="noopener noreferrer">Yet Another Favicon Downloader</a> 插件能自动匹配下载网站图标，但会大幅增加数据库的大小。不在意界面美观度的话，无需安装 Yet Another Favicon Downloader。</p>
<h3> HIBP Offline Check</h3>
<p><a href="https://github.com/mihaifm/HIBPOfflineCheck" target="_blank" rel="noopener noreferrer">HIBP Offline Check</a> 可以使用 <a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">have i been pwned?</a> 在线检查密码库，也能使用本地数据库离线检查。</p>
<h3> KeePassRPC</h3>
<p><a href="https://github.com/kee-org/keepassrpc/releases/" target="_blank" rel="noopener noreferrer">KeePassRPC</a> 搭配浏览器插件 Kee，能实现<strong>自动填充密码并登录</strong>。</p>
<p>其他插件不能自动登录，只有 Kee 能做到该功能。使用 Kee 的自动登录功能后，少数页面会出现循环登录，需暂停 Kee 扩展来停止循环错误。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-29-32.png" alt="" tabindex="0" loading="lazy"><figcaption>Kee 设置</figcaption></figure>
<h3> KeePassNatMsg</h3>
<p>浏览器插件 KeePassHttp-Connector 已不再更新，有段时间甚至不兼容新版 KeePass。</p>
<p>如果遇到不兼容，可使用 <a href="https://github.com/smorks/keepassnatmsg" target="_blank" rel="noopener noreferrer">KeePassNatMsg</a> 和 KeePassXC-Browser 连接浏览器，本方案不支持搜狗浏览器。</p>
<blockquote>
<p>如果报错「proxy download error」，备份并删除文件夹 C:\Users%Username%\AppData\Local\KeePassNatMsg，然后重新加载 Native Messaging Host。</p>
</blockquote>
<h2> 常见问题</h2>
<h3> 多账户排序</h3>
<p>同一网址有多个账户密码时，无将其中一个账户密码默认置顶。通过插件 KeePassHttp 和 KeePassNatMsg，能按 username 或 title 对账户进行排序。</p>
<h3> 为什么不选 KeepassXC</h3>
<p>KeepassXC 基于 KeePass 开发，界面更美观，应用设置更简单，并开发了专属的浏览器插件。</p>
<p>入门 KeepassXC 也比 KeePass 来得轻松，但 KeePass 操控和定制性更强。密码库的使用是以年为单位，比起节约一两天的时间，个人推荐使用 KeePass 原版定制你自己的密码库。</p>
<h2> KeePass 懒人包</h2>
<p>2022.09.17 更新懒人包：<a href="https://wwz.lanzouy.com/iJ6yA0bve7wb" target="_blank" rel="noopener noreferrer">蓝奏云</a>，<a href="https://pan.baidu.com/s/1dm0djnDGq8SOsTPy3jByZg?pwd=nrwj" target="_blank" rel="noopener noreferrer">百度云盘</a> 提取码：nrwj。</p>
<p>KeePass 懒人包为绿色版，集成了常用插件，建立数据库即可使用 KeePass。</p>
<p><strong>建立数据库：</strong></p>
<ol>
<li>
<p>解压懒人包，打开程序 <code>KeePass.exe</code>。</p>
</li>
<li>
<p>屏幕右下角托盘处，打开 KeePass。</p>
</li>
<li>
<p>菜单栏上点击「文件」&gt;「新建」，建立属于你的密码数据库。</p>
<figure><img src="http://tc.seoipo.com/KeePass_new_kdbx.gif" alt="" tabindex="0" loading="lazy"><figcaption>KeePass 懒人包设置</figcaption></figure>
</li>
</ol>
<p>懒人包集成插件：AutoTypeSearch，Entry Templates，KeePassHttp，KeePassNatMsg，KeePassRpc，KeeTrayTOTP，KPEnhancedEntryView，SourceForgeUpdateChecker，WebAutoType。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="footnote1" class="footnote-item"><p><a href="https://blog.csdn.net/SingWarm/article/details/90669580" target="_blank" rel="noopener noreferrer">Keepass 教程之二——完美的通用自动输入规则</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="footnote2" class="footnote-item"><p><a href="https://keepass.info/help/base/fieldrefs.html" target="_blank" rel="noopener noreferrer">Field References-KeePass</a> <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>Jekyll 博客迁移－从 Markdown 到 WordPress</title>
      <link>https://mars.run/posts/2021-01-27-blog_jekyll_to_wordpress.html</link>
      <guid>https://mars.run/posts/2021-01-27-blog_jekyll_to_wordpress.html</guid>
      <source url="https://mars.run/rss.xml">Jekyll 博客迁移－从 Markdown 到 WordPress</source>
      <description>2005 年开始在 MSN space 写博客，期间配合 Google Sidewiki(短命) 记录感想。六年后，MSN space 关闭，旧博客被动转移到 WordPress 托管，暂停使用博客。 2018 年偶尔接触到 Jekyll，被其简洁的界面和便捷性打动，博客复活。本地用 Markdown 编辑排版，同步 github 发布，博客方向则从感想记录转移到知识输出。 Jekyll 用着太舒服，不知不觉就过了三年。但随着文章越来越多，修改也愈加困难，甚至逐渐习惯只更新专栏，而将博客仅作初版发布。Jekyll 已经失去了知识记录参考的初衷，决定将博客从 Jekyll 迁移到 WordPress，文章的初次排版编辑依旧使用 Markdown。</description>
      <category>博客</category>
      <pubDate>Wed, 27 Jan 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>2005 年开始在 MSN space 写博客，期间配合 Google Sidewiki(短命) 记录感想。六年后，MSN space 关闭，旧博客被动转移到 WordPress 托管，暂停使用博客。</p>
<p>2018 年偶尔接触到 Jekyll，被其简洁的界面和便捷性打动，博客复活。本地用 Markdown 编辑排版，同步 github 发布，博客方向则从感想记录转移到知识输出。</p>
<p>Jekyll 用着太舒服，不知不觉就过了三年。但随着文章越来越多，修改也愈加困难，甚至逐渐习惯只更新专栏，而将博客仅作初版发布。Jekyll 已经失去了知识记录参考的初衷，决定将博客从 Jekyll 迁移到 WordPress，文章的初次排版编辑依旧使用 Markdown。</p>
<figure><img src="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!50p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 迁移步骤</h2>
<p>这里迁移的是 Jekyll 的 <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener noreferrer">Hux blog 模板</a>，Hexo 或其他 Jekyll 博客可以参照微调。</p>
<ol>
<li>
<p>复制博客主目录下的 feed.xml 文件，重命名为「feed-wp.xml」。如果目录内不存在 feed.xml，可尝试 rss.xml 或 atom.xml。</p>
</li>
<li>
<p>修改 feed-wp.xml 文件中的 <code>for post in site.posts limit:100 %</code>，该项为 rss 最低生成量，我们导出所有文章，因此将该值修改为 100。</p>
</li>
<li>
<p>参照下方内容，按 WordPress 所需 rss 格式修改 feed-wp.xml 文件的 <code>item</code> 部分，并在文件顶部的 <code>&lt;rss&gt;</code> 元素内添加 <code>xmlns:content="http://purl.org/rss/1.0/modules/content/"</code>，避免 xml 格式报错。</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>登录 WordPress 后台，工具－导入－安装并启用插件 <strong>FeedWordPress</strong> 。自带 RSS 导入器许久不更新，极易报错，不推荐。</p>
</li>
<li>
<p>后台－Syndication－添加 rss 源，比如添加源 <code>xxx.com/feed-wp.xml</code>，其中 <code>xxx.com</code> 指你的博客网址。</p>
<figure><img src="http://tc.seoipo.com/20210128120956.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>参考资料：</p>
<ul>
<li>
<p><a href="https://www.v2ex.com/t/73385" target="_blank" rel="noopener noreferrer">有没有办法把 Markdown 写的博客迁移到 wordpress？</a></p>
</li>
<li>
<p><a href="https://www.yiyult.com/201903155699.html" target="_blank" rel="noopener noreferrer">WordPress 从 RSS 导入文章</a></p>
</li>
<li>
<p><a href="https://www.cnblogs.com/u0mo5/p/4100927.html" target="_blank" rel="noopener noreferrer">有关 WordPress 的 Rss 导入指南</a></p>
</li>
<li>
<p><a href="https://stackoverflow.com/questions/33212592/how-to-create-contentencoded-in-rss" target="_blank" rel="noopener noreferrer">How to create </a><a href="content:encoded">content:encoded</a> in RSS</p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!50p" type="image/"/>
    </item>
    <item>
      <title>普通人的生活原则－批评与自我批评</title>
      <link>https://mars.run/posts/2021-05-31-principles_criticism_and_self-criticism.html</link>
      <guid>https://mars.run/posts/2021-05-31-principles_criticism_and_self-criticism.html</guid>
      <source url="https://mars.run/rss.xml">普通人的生活原则－批评与自我批评</source>
      <description>读 Ray Dalio 的《原则》时，联想到「党的三大作风」，两者理论类似，都是在强调「拥抱现实，应对现实」。所以，在读《原则》的同时，把党建理论也翻出来看了一遍，并将其中的理论与积极心理学一起融入到个人生活中。试行过程中，发现对自身的认知、目标都得到明显的提升。 理论支撑 党的三大作风 《原则》 个人生活 理论联系实际的作风，一切从实际出发 拥抱现实，应对现实 实事求是 相信群众，依靠群众，尊重群众，向群众学习，对群众负责 头脑极度开放 公开分享想法 对自身的缺点、错误认真地进行自我检查，提出纠正的方法 发现问题，不容忍问题 批评和自我批评</description>
      <category>头脑驿站</category>
      <pubDate>Mon, 31 May 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>读 Ray Dalio 的《原则》时，联想到「党的三大作风」，两者理论类似，都是在强调「拥抱现实，应对现实」。所以，在读《原则》的同时，把党建理论也翻出来看了一遍，并将其中的理论与积极心理学一起融入到个人生活中。试行过程中，发现对自身的认知、目标都得到明显的提升。</p>
<h2> 理论支撑</h2>
<table>
<thead>
<tr>
<th style="text-align:left">党的三大作风</th>
<th style="text-align:left">《原则》</th>
<th style="text-align:left">个人生活</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">理论联系实际的作风，一切从实际出发</td>
<td style="text-align:left">拥抱现实，应对现实</td>
<td style="text-align:left">实事求是</td>
</tr>
<tr>
<td style="text-align:left">相信群众，依靠群众，尊重群众，向群众学习，对群众负责</td>
<td style="text-align:left">头脑极度开放</td>
<td style="text-align:left">公开分享想法</td>
</tr>
<tr>
<td style="text-align:left">对自身的缺点、错误认真地进行自我检查，提出纠正的方法</td>
<td style="text-align:left">发现问题，不容忍问题</td>
<td style="text-align:left">批评和自我批评</td>
</tr>
</tbody>
</table>
<p>中国共产党的三大作风有：</p>
<blockquote>
<p>第一，理论联系实际的作风，就是坚持实事求是，一切从实际出发，把马克思主义的普遍真理同中国革命的具体实践相结合，也就是运用马克思主义的立场、观点和方法，去分析、研究和解决中国革命的实际问题。</p>
<p>第二，密切联系群众的作风，就是相信群众，依靠群众，尊重群众，向群众学习，对群众负责的作风，也就是要坚持历史唯物主义关于历史是人民群众创造的观点和辩证唯物主义认识论关于人民群众是认识的主体的观点，坚持党的群众路线和群众观点，实行“从群众中来，到群众中去”的工作方法，就是要求党一刻也不能脱离群众，一刻也不能放松群众工作，要为广大群众求解放，谋幸福。</p>
<p>第三，批评和自我批评的作风，就是对党内、同志之间在思想上、作风上、工作中存在的缺点、错误，真诚而又严肃地提出批评，帮助犯错误的同志提高认识，取得进步；对自身的缺点、错误认真地进行自我检查，提出纠正的方法，取得深刻教训。</p>
</blockquote>
<p>融入到个人生活中变为：</p>
<blockquote>
<p>第一，理论联系实际的作风，就是坚持实事求是，一切从实际出发，把理论知识与个人生活相结合，也就是站在客观角度，去分析、研究和解决个人生活的实际问题。</p>
<p>第二，头脑极度透明，公开分享想法，在不擅长的领域请教擅长的其他人，不要固守你对事物「应该」是怎样的看法。</p>
<p>第三，批评和自我批评的作风，就是对朋友、家人之间在思想上、工作中存在的缺点、错误，真诚而又严肃地提出批评，帮助其他人提高认识，取得进步；对自身的缺点、错误认真地进行自我检查，提出纠正的方法，取得深刻教训。</p>
</blockquote>
<p>以下是我给自己制订的方案，可结合自己的实际生活做出调整。</p>
<h2> 实事求是地制订方案</h2>
<p>根据「<strong>你想要什么；事实是什么；面对事实，你如何实现目标</strong>」设定目标，然后写下清晰具体的方案，让任何人都能对照方案执行。</p>
<p>方案要求：</p>
<ul>
<li>有明确的目标。</li>
<li>找到问题：找到阻碍你实现这些目标的问题，准确诊断问题，发掘问题的根源，并且不容忍问题。</li>
<li>制订方案：规划可以解决问题的方案，并严格执行。做一切必要的事来践行这些方案，实现成果。</li>
<li>执行方案需要严格遵守方案的自律，如果执行中出现问题，思考该步任务是否符合目标。</li>
</ul>
<h2> 头脑透明地分享想法</h2>
<p>公开想法：让其他人无比清晰地看到你在做什么、为什么这么做。头脑越透明，越不会自欺，其他人也会给你诚实的反馈。</p>
<p>同时注意：</p>
<ul>
<li>不要固守你对事物「应该」是怎样的看法，这将使你无法了解真实的情况。</li>
<li>在不擅长的领域请教擅长的其他人，或外包，或使用成熟的工具，或查看教程攻略。</li>
<li>不要把不好的结果归咎于任何人，从自己身上找原因。</li>
</ul>
<h2> 批评和自我批评</h2>
<p>每月固定一个时间 (月底)，对自身行为进行反思，并与家人、朋友分享自己的现状，征求他们的意见、批评。不用担心其他人的看法，不要担心自己的形象，而关心如何实现目标。</p>
<h2> 行动计划</h2>
<p>按上列原则，制定行动计划 (不断调整)：</p>
<p><strong>每日</strong>：</p>
<ul>
<li>
<p><strong>早上创造美好情绪</strong>：赞美、仪式感、吃好吃的、看搞笑视频、听歌。</p>
<ul>
<li>唱歌：唱一首你喜欢的歌。（为减肥，我选择了外语美声歌曲，秋山雅史 - 千の風になって）</li>
<li>录自拍视频：说一句话（当日目标？）鼓励自己。录制内容在前一天准备好，目的是给你带来积极情绪。</li>
<li>参考<a href="https://www.xuetangx.com/course/THU07111001088/" target="_blank" rel="noopener noreferrer">积极心理学</a>，收集积极情绪材料放在醒目的地方：家人的照片、取得的成绩、美好的回忆、憧憬的未来、向往的地方、喜欢的艺术 (音乐、名画、诗句)。</li>
</ul>
</li>
<li>
<p><strong>人际连接</strong>：通过直播连麦与陌生人沟通 15 分钟。如：抖音 PK 语音直播。</p>
<ul>
<li>别人很重要：帮助别人，能让人更健康、更幸福。心情不好事，就去帮助其他人，心情会更好。</li>
<li>表扬和自我表扬：赞美自己、家人，发挥标志性优势，总比弥补缺点更有效。</li>
</ul>
</li>
<li>
<p><strong>微习惯</strong>：</p>
<ul>
<li>工作 20 分钟休息 20 秒，做 10 个深蹲。</li>
<li>出书房或上完厕所，做 10 个俯卧撑。</li>
<li>俯卧撑、深蹲前，在磁性板上写正字来记录，一个笔画代表一组（10 个）。</li>
</ul>
</li>
<li>
<p><strong>间隔学习</strong>：通过 SuperMemo 的记忆模型，复习心理认知、沟通理论、行为反思在内的笔记。</p>
</li>
<li>
<p><strong>当日回顾</strong>：记录 3 件好事，总结好事发生的原因，给家人分享好事。
这可以是日常生活中常见的小事，比如读到一本好书、吃到一道好菜、听到一个亲友的好消息、在公交车上有人为你让座、孩子今天会走路了，等等。</p>
</li>
</ul>
<p><strong>定期</strong>：</p>
<ul>
<li><strong>月底反思</strong>：检查日记和成果，对当月进行复盘，并将其同步给家人，征求意见、批评并记录。
<ul>
<li>复盘笔记参照 <a href="https://allisonseboldt.com/" target="_blank" rel="noopener noreferrer">Allison Seboldt</a>，作者每个月都会进行「回顾」，分享他的收入并反思上个月的成就。</li>
<li>读 <a href="https://justinjackson.ca/bootstrap" target="_blank" rel="noopener noreferrer">JustinJ ackson</a>&nbsp;– 作者在 2018 年初创办 &nbsp;Transistor&nbsp; 以来，一直在分享他的项目。他整理了在此过程中学到的许多经验教训。</li>
</ul>
</li>
<li><strong>积极自我介绍</strong>：每隔三个月，讲述一个「最佳的我」的故事，植入你的优势，进行自我肯定。</li>
</ul>
<p><strong>公开记录</strong>：</p>
<ul>
<li>
<p><a href="https://newzone.top/" target="_blank" rel="noopener noreferrer">学习笔记</a>：将对工具、工作方式和生活的思考记录发布在公开页面，欢迎大家的点评。</p>
</li>
<li>
<p>工作视频：<a href="https://newzone.top/posts/2022-05-22-surveillance_video_for_myself.html" target="_blank" rel="noopener noreferrer">自我监控视频</a>，记录私密工作状态，方便当日回顾。</p>
</li>
<li>
<p>微习惯视频：监督运动习惯。拍摄视频时，使用关键句「切掉/保留」，配合 Quickcut 快速剪辑视频。</p>
</li>
</ul>
<p>下一步，寻找更多的党组理论根据和执行书籍资料，相信一个成熟的组织不是无故崛起，更不会无故持续这么些年。</p>
]]></content:encoded>
    </item>
    <item>
      <title>RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</title>
      <link>https://mars.run/posts/2021-10-23-nas_with_rsshub_and_huginn.html</link>
      <guid>https://mars.run/posts/2021-10-23-nas_with_rsshub_and_huginn.html</guid>
      <source url="https://mars.run/rss.xml">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</source>
      <description>作为重度 RSS 用户，90% 的讯息来自 rss。RSSHub 生成主流媒体 rss，Huginn 定制个性化 rss，TinyTinyRSS 过滤 rss，这帮我从 3 小时的阅读时间节省到只需 1 小时。 这些服务原本托管在 1 核 1G 的低配服务器上，不过配置过低，频繁重启，维护成本持续上升。接着尝试了国外 2 核 4G 的低端服务器，超售严重，性能极度不稳定。买国外的低端服务器 (特别是俄罗斯服务器)，就是把钱丢水里了。 比起花钱升级和不靠谱的国外 VPS，NAS 成为一个高性价比的选择。当然，面临的问题并不少，我们一步步去解决。</description>
      <category>自动化</category>
      <pubDate>Sat, 23 Oct 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>作为重度 RSS 用户，90% 的讯息来自 rss。RSSHub 生成主流媒体 rss，Huginn 定制个性化 rss，TinyTinyRSS 过滤 rss，这帮我<strong>从 3 小时的阅读时间节省到只需 1 小时</strong>。</p>
<p>这些服务原本托管在 1 核 1G 的低配服务器上，不过配置过低，频繁重启，维护成本持续上升。接着尝试了国外 2 核 4G 的低端服务器，超售严重，性能极度不稳定。买国外的低端服务器 (特别是<strong>俄罗斯服务器</strong>)，就是把钱丢水里了。</p>
<p>比起花钱升级和不靠谱的国外 VPS，NAS 成为一个高性价比的选择。当然，面临的问题并不少，我们一步步去解决。</p>
<h2> 事前准备</h2>
<ul>
<li>NAS</li>
<li>域名 (子域名既可)</li>
<li>带动态 DNS 的路由器 (推荐 openwrt 软路由)</li>
</ul>
<h2> Docker 镜像安装</h2>
<ol>
<li>
<p>NAS 管理后台－套件中心－搜索并安装「Docker」，然后在 Docker 容器中安装所需服务。</p>
</li>
<li>
<p>Docker－注册表，搜索对应镜像，选中最高星的项目，点击下载。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-40-43.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>镜像下载完成后，进入「映像」，选中刚下载好的镜像，点击启动。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-41-01.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>高级设置－端口设置，将本地端口从自动改为一个固定的端口，方便后期做端口映射。避免 NAS 重启后，本地端口发生变化。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-41-15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<h2> 域名绑定</h2>
<ol>
<li>
<p><strong>关闭光猫路由</strong>：电话联系宽带运营商，要求关闭光猫的路由功能。少数运营商默认不提供公网 IP，也可以在这环节，让运营商给你分配公网 IP。碰到死板的客服，会找你开通理由，不要正面回答。</p>
</li>
<li>
<p>家用宽带多为动态 ip，且无对外 80 接口。使用动态 DNS 插件，可让域名时刻绑定家用宽带 ip，达到固定链接打开 NAS 服务。</p>
</li>
<li>
<p><strong>动态 DNS(DDNS) 设置</strong>，以下以 openwrt+cloudflare 为例。</p>
<ul>
<li>
<p>cloudflare 动态 DNS 配置 (<a href="https://p3terx.com/archives/openwrt-cloudflare-ddns.html" target="_blank" rel="noopener noreferrer">教程</a>)：系统－软件包，搜索「cloudflare」，安装 ddns-scripts_cloudflare.com-v4，然后重启路由器。</p>
</li>
<li>
<p>服务－动态 DNS，cloudflare 登录密码为 <a href="https://dash.cloudflare.com/profile/api-tokens" target="_blank" rel="noopener noreferrer">cloudflare API</a> 中的 Glodbal API Key。阿里云用户可在 RAM 访问控制中创建专门的 AccessKey。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-41-31.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
</li>
<li>
<p>如果没有宽带为内网，不能提供公网 ip，可借助花生壳等内网穿透工具达到类似效果。</p>
</li>
</ol>
<h2> RSS 转码</h2>
<p>运营商禁用了家用宽带的 80 和 443 端口。这导致 NAS 的服务链接无法隐藏端口，如 <code>home.xxx.com:34567</code>。同时，主流 RSS 阅读器大多不支持配置端口链接，这导致在 NAS 上部署的 rss 源无法直接被读取。比如 Tiny Tiny RSS 订阅 NAS rss 源时不断报错，无法读取带端口的 rss 链接和 https 的 rss 源。</p>
<p>为了顺利获取 NAS 的 rss 源，我用 php 做了条转录链接，参考样例：<code>http://xxx.com/rss.php?type=yyy</code>。这个 php 文件聚合了所有的 rss 源，用链接参数作区分。虽然 php 转录需要部署在另一台服务器，但比起节省高配服务器的费用，还是值得的。对了，php 转录链接不吃配置，如果你已经有了一台，可以像我一样直接部署在工作服务器上。</p>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有服务器，也不愿继续折腾，可以试试其他阅读器。测试 theoldreader 直接获取带端口的 rss 源。</p>
<h2> 总结</h2>
<p>NAS 替代服务器后，Huginn 不再定期崩溃，抓取也不再卡壳，也不需要总惦记给服务器续费。硬件配置也从 1 核 1G 跃升到 4 核 8G，这套流程跑了一年，基本没 bug，可以放心使用。</p>
<p>这篇也是 RSS 系列的完结篇，从 2017 年 4 月的《RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源》开始，零零散散地写了 4 年半，终于把坑都填起来了。</p>
<p>RSS 系列的初衷是为了减少算法推送泛滥而造成的信息过载。来自 Google 的分析师 Gary Illyes 曾表示:「互联网上大约 60% 的内容是重复的。」比如你搜索一项内容，打开前 10 个网页，可能内容完全一样。</p>
<p>RSS (Really Simple Syndication) 中文是「简易信息聚合」，能按你个人所需定制信息聚合，让你脱离算法的掌控，把时间花在你真正需要的信息上。而 RSS 这个对抗信息过载的极佳工具却从 Google Reader 退役后，被很多人认为已经衰弱消亡。实际上 RSS 只是从主流社会中退出，变为少数人的高效信息获取方式。</p>
<p>RSS 定制的系列文章原本只是记录个人心得，我没想到文章发布后收到很多人的支持，才发觉并不是 RSS 在没落，而是缺少布道者。多数人希望了解 RSS，但之前的教程门槛较高，大厂如 Google 也关闭了 RSS 项目，导致新手入门变得更加困难。因此我持续简化 RSS 教程，希望能让大家更轻松入门 RSS。如果你也对 RSS 感兴趣，希望把你遇到的疑问和所得都记录下来，帮助越来越多的人了解 RSS，掌握这项高效的信息获取方式。</p>
<p>我坚信 <strong>RSS 是最适合普通人的信息获取方式</strong>。这可能有些反潮流，但我内心这样相信着，也希望越来越多人能认识到 RSS，开始使用这项只被少数人使用的高效信息获取方式。</p>
<h2> RSS 合集</h2>
<p>汇总的 RSS 永久订阅 feeds，均通过 RSSHub 和 Huginn 制作。如果有兴趣自制 RSS，可参考以下教程。</p>
<ul>
<li>
<p><a href="https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html" target="_blank" rel="noopener noreferrer">RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html" target="_blank" rel="noopener noreferrer">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2019-04-01-rsshub_noob.html" target="_blank" rel="noopener noreferrer">RSS 速成篇：RSSHub 捡现成的轮子</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2020-03-25-rsshub_on_vps.html" target="_blank" rel="noopener noreferrer">RSS 速成篇 2：RSSHub 自部署</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html" target="_blank" rel="noopener noreferrer">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html" target="_blank" rel="noopener noreferrer">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-14-40-43.png" type="image/png"/>
    </item>
    <item>
      <title>想要独一无二的微信红包，你也可以自己做</title>
      <link>https://mars.run/posts/2022-01-23-wechat_lucky_money_cover.html</link>
      <guid>https://mars.run/posts/2022-01-23-wechat_lucky_money_cover.html</guid>
      <source url="https://mars.run/rss.xml">想要独一无二的微信红包，你也可以自己做</source>
      <description>上海撞上疫情，连续三年春节不能回家，对父母始终有些亏欠。 春节前 10 天，微信给我发了 2000 个限时红包封面额度。突然发现这是个好主意，既然不能回家，那就帮父母做个红包封面吧。自己也似乎随着红包一起，跟父母一起给亲戚拜年。微信红包团队的这次活动策划非常出色，不仅为红包封面带来了大量新用户，而且还能让许多人续费红包时间。</description>
      <category>工具</category>
      <pubDate>Sun, 23 Jan 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>上海撞上疫情，连续三年春节不能回家，对父母始终有些亏欠。</p>
<p>春节前 10 天，微信给我发了 2000 个限时红包封面额度。突然发现这是个好主意，既然不能回家，那就帮父母做个红包封面吧。自己也似乎随着红包一起，跟父母一起给亲戚拜年。微信红包团队的这次活动策划非常出色，不仅为红包封面带来了大量新用户，而且还能让许多人续费红包时间。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-16-09-18.png?imageMogr2/thumbnail/!50p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>红包封面的设计并不复杂，新手也能轻松设计，但注册前提是要有至少 100 粉丝的视频号或公众号。</p>
<p>接下来，我会介绍微信红包注册和定制流程。</p>
<h2> 封面平台注册</h2>
<p>首次使用<a href="https://cover.weixin.qq.com/" target="_blank" rel="noopener noreferrer">微信红包封面开放平台</a>，需要注册并实名认证。如果使用个人身份认证，注册中无付费环节。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-16-09-39.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>个人认证环节需要有 100 粉丝以上的视频号或公众号。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-16-09-52.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>如果没有红包封面额度，可以自行购买。封面费用为 1 元/个，购买 n 个，则 n 个用户可以使用此款红包封面，有效期为半年。微信用户领取后，可在 3 个月内无限次使用该封面。</p>
<h2> 红包封面设计</h2>
<p>完成注册环节后，即可定制红包封面。微信提供了 PSD 和  Sketch 的红包封面模板，红包设计可参考<a href="https://cover.weixin.qq.com/cgi-bin/mmcover-bin/readtemplate?t=page/index#/doc?page=design&amp;index=-1" target="_blank" rel="noopener noreferrer">微信红包封面官方文档</a>。</p>
<p>整个流程非常简单，即使不懂设计模板也能轻松上手。零基础用户可以使用小画家，有图层概念的用户可以使用 Figma。无论使用什么工具，只要上传喜欢的图片，就可以完成红包设计。</p>
<figure><img src="http://tc.seoipo.com/2023-01-17-16-36-16.png?imageMogr2/thumbnail/!40p" alt="示例基础图片 (推荐手写字体：杨任东竹石体)" tabindex="0" loading="lazy"><figcaption>示例基础图片 (推荐手写字体：杨任东竹石体)</figcaption></figure>
<h2> 常见问题</h2>
<h3> 封面名称</h3>
<p>红包封面会展示公众号名称和头像，<strong>名称一年可修改两次，头像一个月可申请修改 5 次</strong>。我提交的封面名称与公众号无关，平台并未拒绝。</p>
<h3> 红包审核</h3>
<p>红包审核需要 3 个工作日。如果审核期间接近放假，建议同时提交三个红包封面，以免到了春节，红包尚未审核通过。</p>
<h3> 红包图片</h3>
<p>微信红包封面的肖像需要授权，不过我提交的<strong>全家福红包通过了</strong>。尽量不要使用网络上的图片作为红包封面，容易因版权问题而被驳回。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-16-10-58.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-16-09-18.png?imageMogr2/thumbnail/!50p" type="image/"/>
    </item>
    <item>
      <title>Windows 应用商店 (Microsoft store) 打不开？100% 解决方法 - 兼容 Win10、Win11</title>
      <link>https://mars.run/posts/2022-02-19-microsoft_store_fixed.html</link>
      <guid>https://mars.run/posts/2022-02-19-microsoft_store_fixed.html</guid>
      <source url="https://mars.run/rss.xml">Windows 应用商店 (Microsoft store) 打不开？100% 解决方法 - 兼容 Win10、Win11</source>
      <description>Microsoft store 页面无法打开，提示需要联网或刷新。多数教程将原因归咎于系统更新或 DNS 设置，但实际上是你的 IE 设置被更改了。 特别是国内的网银用户，每次登录建行，U 盾都会修改 Internet 选项，从而导致 TLS 版本过低无法连接应用商店。</description>
      <category>系统</category>
      <pubDate>Sat, 19 Feb 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Microsoft store 页面无法打开，提示需要联网或刷新。多数教程将原因归咎于系统更新或 DNS 设置，但实际上是你的 <strong>IE 设置被更改了</strong>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-16-48-55.png?imageMogr2/thumbnail/!40p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>特别是国内的网银用户，<strong>每次登录建行，U 盾都会修改 Internet 选项</strong>，从而导致 TLS 版本过低无法连接应用商店。</p>
<h2> 解决方法</h2>
<ol>
<li>
<p>选择「开始菜单」&gt;「搜索栏」，搜索「Internet 选项」。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-01-23.png?imageMogr2/thumbnail/!50p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>Internet 属性中点击「高级」。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-01-48.png?imageMogr2/thumbnail/!50p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>勾选「使用 TLS 1.2」和「使用 TLS 1.3」。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-02-01.png?imageMogr2/thumbnail/!50p" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ol>
<p>网银用户会重复出现该问题，重新执行上方步骤勾选 TLS 即可。</p>
<p>如果你依然无法访问，则尝试重置网络连接、DNS、缓存、应用商店设置，操作参考 <a href="https://answers.microsoft.com/zh-hans/windows/forum/all/microsoft/43acd62e-a11e-449c-9fa4-50931ad38565" target="_blank" rel="noopener noreferrer">Microsoft Store 打不开，代码：0x80131500</a>。</p>
<h2> 解决流程 GIF</h2>
<figure><img src="http://tc.seoipo.com/IE_SSL_Setting_win11.webp" alt="win11-ie 高级设置.gif" tabindex="0" loading="lazy"><figcaption>win11-ie 高级设置.gif</figcaption></figure>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-16-48-55.png?imageMogr2/thumbnail/!40p" type="image/"/>
    </item>
    <item>
      <title>联想黑金超核会员情报分享</title>
      <link>https://mars.run/posts/2022-03-09-lenovo_black_card_member.html</link>
      <guid>https://mars.run/posts/2022-03-09-lenovo_black_card_member.html</guid>
      <source url="https://mars.run/rss.xml">联想黑金超核会员情报分享</source>
      <description>不要买联想黑金卡！不要买联想黑金卡！不要买联想黑金卡！ 京东抢购总是秒无，为了刃 9000K 3080 的台式机，299 入手联想黄牛卡 - 黑金超核卡。 幻想着花了钱，就可以选自己理想的电脑。 但买完后，才发现坑。黑卡会员在 8-16 日入，才提供优购权限。而我 24 日买会员，没有任何优购机型，只能等到下个月 8 日的更新。 每月 8 日会员中心 - 黑金超核卡会员专区将预告当期优购码适用的机型种类；每月 16 日 10:00 会员中心 - 黑金超核卡会员专区仅向黑金超核卡会员开放优购码领取通道，数量有限，先到先得。</description>
      <category>购物</category>
      <pubDate>Wed, 09 Mar 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><strong>不要买联想黑金卡！不要买联想黑金卡！不要买联想黑金卡！</strong></p>
<p>京东抢购总是秒无，为了刃 9000K 3080 的台式机，299 入手联想黄牛卡 - 黑金超核卡。</p>
<p>幻想着花了钱，就可以选自己理想的电脑。</p>
<p>但买完后，才发现坑。黑卡会员在 8-16 日入，才提供优购权限。而我 24 日买会员，没有任何优购机型，只能等到下个月 8 日的更新。</p>
<blockquote>
<p>每月 8 日会员中心 - 黑金超核卡会员专区将预告当期优购码适用的机型种类；每月 16 日 10:00 会员中心 - 黑金超核卡会员专区仅向黑金超核卡会员开放优购码领取通道，数量有限，先到先得。</p>
</blockquote>
<p>好不容易等到优购码预告日，发现只有一种笔记本，而且还是旧款。联想，你确定这要用优购码抢？</p>
<p>不过，会员费也不能白花了。</p>
<p>每月我会更新优购码和 99 折的具体购买权限。不能让大家继续步我后尘，因未知而入手联想黑卡了。</p>
<p>了解最新优购码种类前，<strong>一定不要买联想黑卡</strong>，否则纯属浪费钱。</p>
<p>另外，推荐联系当地的联想来酷智生活店，询问是否有现货。来酷渠道属于联想官方，来源有保证。如果来酷店没现货，会在到货后电话通知，送货上门。</p>
<h2> 8 月黑卡情报</h2>
<figure><img src="https://pic1.zhimg.com/v2-d10a6d62f7af9c94ff215a992ca978d8_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 7 月黑卡情报</h2>
<figure><img src="https://pic2.zhimg.com/v2-1f1cc252dc0961e7bc793c0d0d7a80b5_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 6 月黑卡情报</h2>
<figure><img src="https://pic1.zhimg.com/v2-b996f4204b27ee000b7e390177454b88_r.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 5 月黑卡情报</h2>
<figure><img src="https://pic1.zhimg.com/v2-01f7ee6a4f8dd5401dc8de6936fd8d04_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 4 月黑卡情报</h2>
<figure><img src="https://pic1.zhimg.com/v2-8b5b328f1eed01c937b841fbad094bdc_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 3 月黑卡情报</h2>
<figure><img src="https://pic3.zhimg.com/v2-7658373e9ba5b75fcce0b890fd407caa_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<figure><img src="https://pic3.zhimg.com/v2-d8184c084b411ecd6ad815e4d6601e42_b.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
]]></content:encoded>
      <enclosure url="https://pic1.zhimg.com/v2-d10a6d62f7af9c94ff215a992ca978d8_b.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</title>
      <link>https://mars.run/posts/2022-03-17-rss_persistent_link_collection.html</link>
      <guid>https://mars.run/posts/2022-03-17-rss_persistent_link_collection.html</guid>
      <source url="https://mars.run/rss.xml">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</source>
      <description>越来越多的网站不再提供 RSS feed，令我们无法便捷获取信息。为了避免这一情况的恶化，我选择自制 RSS，并将其汇总在本文。本文链接均为自用 RSS，链接一直有效，放心使用。 如果有兴趣自己制作 RSS，可查看文章底部教程。 每日热点 整理实时新闻热点，采集来自搜索引擎、微信文章、应急通知的资讯。 百度实时热点：http://newzone.top/rss.php?type=baidu 实时收录百度热搜内容，并显示热搜指数和简介。 国内应急新闻：http://newzone.top/rss.php?type=cneb 采集自国家应急广播，配合 rss 阅读器过滤，及时获取当地应急通知。 瓦斯阅读：http://newzone.top/rss.php?type=wasi 通过瓦斯阅读，获取当天最热门的微信文章。微信图片不支持第三方显示，因此 RSS 阅读器内只显示文字内容，点击文章链接后，可阅读完整公众号文章。</description>
      <category>自动化</category>
      <pubDate>Thu, 17 Mar 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>越来越多的网站不再提供 RSS feed，令我们无法便捷获取信息。为了避免这一情况的恶化，我选择自制 RSS，并将其汇总在本文。本文链接均为自用 RSS，链接一直有效，放心使用。</p>
<p>如果有兴趣自己制作 RSS，可查看文章底部教程。</p>
<h2> 每日热点</h2>
<p>整理实时新闻热点，采集来自搜索引擎、微信文章、应急通知的资讯。</p>
<ul>
<li>
<p><strong>百度实时热点</strong>：<code>http://newzone.top/rss.php?type=baidu</code>
实时收录百度热搜内容，并显示热搜指数和简介。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-21-49.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p><strong>国内应急新闻</strong>：<code>http://newzone.top/rss.php?type=cneb</code>
采集自<a href="http://www.cneb.gov.cn/guoneinews/" target="_blank" rel="noopener noreferrer">国家应急广播</a>，配合 rss 阅读器过滤，及时获取当地应急通知。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-22-08.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p><strong>瓦斯阅读</strong>：<code>http://newzone.top/rss.php?type=wasi</code>
通过瓦斯阅读，获取当天最热门的微信文章。微信图片不支持第三方显示，因此 RSS 阅读器内只显示文字内容，点击文章链接后，可阅读完整公众号文章。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-22-32.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
<h2> 互联网资讯</h2>
<p>整合互联网资讯媒体，偏重于前端科技、电子硬件、手机应用。</p>
<ul>
<li>
<p><strong>36kr</strong>：<code>http://newzone.top/rss.php?type=36kr</code></p>
</li>
<li>
<p><strong>虎嗅网</strong>：<code>http://newzone.top/rss.php?type=huxiu</code></p>
</li>
<li>
<p><strong>艾瑞网</strong>：<code>http://newzone.top/rss.php?type=iresearch</code></p>
</li>
<li>
<p><strong>爱范儿|AppSolution</strong>：<code>http://newzone.top/rss.php?type=AppSolution</code></p>
</li>
<li>
<p><strong>效率火箭</strong>：<code>http://newzone.top/rss.php?type=xlrocket</code></p>
</li>
</ul>
<h2> 奇思妙想</h2>
<p>每天吸收些稀奇古怪的知识，期待引发后续的灵机一动。</p>
<ul>
<li>
<p><strong>果壳网</strong>：<code>http://newzone.top/rss.php?type=guokr</code></p>
</li>
<li>
<p><strong>知乎想法热榜</strong>：<code>http://newzone.top/rss.php?type=zhihu</code></p>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>最近有人疯狂获取 RSS 链接近乎于 DDoS 攻击（频繁获取内容也不会更新，不清楚为什么这么干……），已在后台屏蔽此类 IP，建议将 RSS 更新间隔设为 1 小时。如有错误识别，可以联系我解封。</p>
</div>
<h2> 教程：自制 RSS</h2>
<p>以上 RSS 链接均通过 RSSHub 和 Huginn 制作，下方为 RSS 制作教程。</p>
<ul>
<li>
<p><a href="https://newzone.top/posts/2017-04-22-rss_feed43_feedex.html" target="_blank" rel="noopener noreferrer">RSS 入门篇：FEED43&amp;FeedEx-为静态网页定制 RSS 源</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2018-10-07-huginn_scraping_any_website.html" target="_blank" rel="noopener noreferrer">RSS 进阶篇：Huginn - 真·为任意网页定制 RSS 源（PhantomJs 抓取）</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2019-04-01-rsshub_noob.html" target="_blank" rel="noopener noreferrer">RSS 速成篇：RSSHub 捡现成的轮子</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2020-03-25-rsshub_on_vps.html" target="_blank" rel="noopener noreferrer">RSS 速成篇 2：RSSHub 自部署</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2021-10-23-nas_with_rsshub_and_huginn.html" target="_blank" rel="noopener noreferrer">RSS 完结篇：节省千元服务费，RSSHub、Huginn 转移 NAS</a></p>
</li>
<li>
<p><a href="https://newzone.top/posts/2022-03-17-rss_persistent_link_collection.html" target="_blank" rel="noopener noreferrer">RSS 汇总篇：RSS 永久链接合集，拒绝 RSS 失效</a></p>
</li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-17-21-49.png" type="image/png"/>
    </item>
    <item>
      <title>一键安装 99 个程序，Windows 最强软件管理器</title>
      <link>https://mars.run/posts/2022-03-21-winget_the_strongest_software_manager_for_windows.html</link>
      <guid>https://mars.run/posts/2022-03-21-winget_the_strongest_software_manager_for_windows.html</guid>
      <source url="https://mars.run/rss.xml">一键安装 99 个程序，Windows 最强软件管理器</source>
      <description>矿难、WIN11、DDR5、40 代显卡纷至沓来，更换电脑的高峰期马上来临。可惜我的生产力工具等不了，只能 49 年入国军，隔离期间装配上 i7+3080Ti 主机。硬件配好了，软件又成了个大问题。常用软件超过 60 个，之前每个软件，都去对应官网寻找最新版，然后单独进行设置安装，需要耗费大量的时间精力。 曾经一度尝试过国内的软件管理器，能批量下载软件，但依旧免不了单独安装设置。另外，让 360、金山、腾讯来管理你的软件系统，你真的放心？相较而言，Windows 原生程序管理工具 winget 和 WebGUI winstall 使用更简单，应用均为官方来源下载，一键批量静默安装应用，是快速部署程序的绝佳方案。</description>
      <category>系统</category>
      <pubDate>Mon, 21 Mar 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>矿难、WIN11、DDR5、40 代显卡纷至沓来，更换电脑的高峰期马上来临。可惜我的生产力工具等不了，只能 49 年入国军，隔离期间装配上 i7+3080Ti 主机。硬件配好了，软件又成了个大问题。常用软件超过 60 个，之前每个软件，都去对应官网寻找最新版，然后单独进行设置安装，需要耗费大量的时间精力。</p>
<p>曾经一度尝试过国内的软件管理器，能批量下载软件，但依旧免不了单独安装设置。另外，让 360、金山、腾讯来管理你的软件系统，你真的放心？相较而言，Windows 原生程序管理工具 winget 和 WebGUI winstall 使用更简单，<strong>应用均为官方来源下载，一键批量静默安装应用，是快速部署程序的绝佳方案</strong>。</p>
<h2> 原生程序管理-winget</h2>
<p><a href="https://docs.microsoft.com/zh-cn/windows/package-manager/winget/" target="_blank" rel="noopener noreferrer">winget</a> 是 Windows 程序包管理器的命令行工具。在 Windows 10 和 Windows 11 计算机上，使用 winget 命令行工具来发现、安装、升级、删除和配置应用程序。早期版本的 Windows 不支持 winget，需在 <a href="https://github.com/microsoft/winget-cli/releases" target="_blank" rel="noopener noreferrer">winget 官方</a>或<a href="https://wwz.lanzouf.com/ixZL701smc4d" target="_blank" rel="noopener noreferrer">国内搬运</a> 下载后缀为 <code>.msixbundle</code> 的应用安装程序。</p>
<p>安装应用安装程序后，可以通过在命令提示符 (cmd) 下键入「winget」来运行程序命令。</p>
<h3> winget install appName</h3>
<p>执行 winget install 命令，就能完成指定程序的下载、哈希验证、静默设置安装三个步骤，不需要人工干预。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-13-24.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> winget search appName</h3>
<p>当未找到或不确定 appName 时，使用 winget search 可以锁定程序名称。以「飞书」为例，飞书不支持中文锁定，搜索后发现有国内版「Feishu」和海外版「Lark」两个版本，国内版使用命令 <code>winget install feishu</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-13-45.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> winget upgrade --all</h3>
<ul>
<li><code>winget upgrade</code> 列出所有支持 winget 升级的程序，然后使用 <code>winget upgrade ID</code> 升级指定程序。</li>
<li><code>winget upgrade --all</code> 会静默升级所有支持 winget 的程序，适合更新强迫症患者。不过，该升级流程暂时没有筛选办法，无法单独剔除应用。</li>
<li><code>winget upgrade --all --include-unknown</code> 升级包括未知版本在内的所有应用，一般用不到，适用于强迫症患者。</li>
</ul>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-14-00.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h3> Microsoft Store 应用</h3>
<p>Microsoft Store 不支持 winget 官方源，因此 winget 不能使用应用名称安装商店应用。</p>
<p>winget 安装 Microsoft Store 应用前，需要 <code>winget search</code> 命令找到应用 id 和来源。msstore 源指 Miscrosoft Store，其使用唯一标识符作为程序包的“Id”。因此，snipaste 安装命令为 <code>winget install 9P1WXPKB68KX -s msstore</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-14-23.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>安装中会要求接受协议，点 Y 确认即可。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-14-35.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 批量部署程序-winstall</h2>
<p><a href="https://winstall.app/" target="_blank" rel="noopener noreferrer">winstall</a> 是 winget install 的网页管理工具。借助 winstall，用户不懂代码，也能轻松使用 winget，一次性安装所有应用程序。</p>
<p>操作非常简单，winstall 页面选中程序，即可打包程序组或生成批量安装命令。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-14-50.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>winstall 的应用搜索继承了 winget 的问题，部分国产软件不支持中文搜索，比如「坚果云」只支持英文名称「Nutstore」。希望这一问题，可以随着国内用户群增多而被解决。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-15-09.png" alt="winget 搜索" tabindex="0" loading="lazy"><figcaption>winget 搜索</figcaption></figure>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-15-37.png" alt="winstall 搜索" tabindex="0" loading="lazy"><figcaption>winstall 搜索</figcaption></figure>
<p>winstall 页面选好程序后，导出自动生成的批量安装命令，并在命令提示符 (cmd) 中执行，系统将自动下载并静默配置程序。</p>
<figure><img src="http://tc.seoipo.com/2022-05-05-17-15-55.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> 常见问题</h2>
<h3> 尝试更新源时失败</h3>
<p>国内使用 winget 容易出现问题「尝试更新源时失败」，下载 <a href="https://github.com/microsoft/winget-cli/releases" target="_blank" rel="noopener noreferrer">winget 官方最新包</a>可解决问题。</p>
<p>另一个可能是 Internet 选项的 TLS 版本设置过低，开启 TLS 1.2 即可恢复，具体操作查看 <a href="https://newzone.top/posts/2022-02-19-microsoft_store_fixed.html#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95" target="_blank" rel="noopener noreferrer">Windows 应用商店 (Microsoft store) 打不开？</a>。</p>
<h3> 其他问题</h3>
<ul>
<li>批量安装应用中，winstall 不定期出现崩溃，原因未知。</li>
<li>winget install 不能检测当前版本软件是否安装，容易造成重复安装应用，拖慢部署时间。</li>
<li>部分应用安装后容易有 bug，比如剪映有卡顿问题，手动安装后恢复正常。</li>
</ul>
<h2> 总结</h2>
<p>在我的常用软件列表中有 50 个应用支持 winget 批量静默安装，剩余 10 个需手工安装，覆盖率在 80% 以上，足够满足大部分人的需求。</p>
<p>winget 用一个命令行能静默安装上百个软件，节省了大量装机时间。对于系统重装、批量装机、快速设置新工作环境，winget 和 winstall 是必不可少的装机神器。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-17-13-24.png" type="image/png"/>
    </item>
    <item>
      <title>上海没吃的？割裂的城市，我真的生活在上海吗？</title>
      <link>https://mars.run/posts/2022-04-20-survivorship_bias_in_shanghai_2022.html</link>
      <guid>https://mars.run/posts/2022-04-20-survivorship_bias_in_shanghai_2022.html</guid>
      <source url="https://mars.run/rss.xml">上海没吃的？割裂的城市，我真的生活在上海吗？</source>
      <description>够吃吗？还能买到东西吗？ 所有人都问我这句话，因为你在上海。在舆论中，上海似乎回到 100 年前。第一次感受到，什么叫「灾区人民」。 但真是这样吗？我真的生活在「上海」吗？ 亲身体验 VS 网上「上海」 3 月 28 日，新闻公告浦西将于 4 月 1 日开始封控 4 天。接到通知后，我进行了大采购，把冰箱塞满。3 月 30 日，物业通知小区提前封控，就此进入宅家状态。此时，物资储备一周。 过了几天，上海疫情彻底爆发，封控时间被延长。物资只出不进，我也进入焦虑状态，开始线上抢购。基本每天都能抢到，物资可维持两周。</description>
      <category>观察随笔</category>
      <pubDate>Wed, 20 Apr 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p><em>够吃吗？还能买到东西吗？</em></p>
<p>所有人都问我这句话，因为你在上海。在舆论中，上海似乎回到 100 年前。第一次感受到，什么叫「灾区人民」。</p>
<p>但真是这样吗？我真的生活在「上海」吗？</p>
<h2> 亲身体验 VS 网上「上海」</h2>
<p>3 月 28 日，新闻公告浦西将于 4 月 1 日开始封控 4 天。接到通知后，我进行了大采购，把冰箱塞满。3 月 30 日，物业通知小区提前封控，就此进入宅家状态。此时，物资储备一周。</p>
<p>过了几天，上海疫情彻底爆发，封控时间被延长。物资只出不进，我也进入焦虑状态，开始线上抢购。基本每天都能抢到，物资可维持两周。</p>
<p>4 月 5 日，小区团购群兴起，开始大量采购，物资可维持三周。同时，街道开始小量发放物资。</p>
<p>4 月 10 日后，街道开始加大物资发放量，甚至包括厕纸、沐浴露。我完全没想到，街道发这么多物资。其中的蔬菜无法长时间保存，我开始自学做酱菜和蔬菜饼。物资可维持一个月。</p>
<figure><img src="http://tc.seoipo.com/2022-04-20-21-43-24.png" alt="街道发放的部分物资" tabindex="0" loading="lazy"><figcaption>街道发放的部分物资</figcaption></figure>
<p>此时，网上的上海则是另一个世界。“混乱，吃不了饭，快饿死？”</p>
<p>因为这些谣传，家人、朋友、甚至网友都开始问文章开头的话。「够吃吗？还能买到东西吗？」</p>
<h2> 幸存者偏差</h2>
<p>难道物资充足只是我个人的感受，其他人都处于物资短缺的状态吗？</p>
<p>接着，我问了同在上海的朋友。大家反馈，物资都没我多，但基本的生活是能满足，最少能吃饱。</p>
<p>那为什么网上关于上海的现状都是「没人管，没吃的」？</p>
<p>我开始大量查看上海疫情的相关资讯，发现是「幸存者偏差」放大了上海的物资短缺。</p>
<blockquote>
<p>幸存者偏差（Survivorship Bias），人们所获得的有些信息可能会因为信息的提供方的匮乏（只有那些“幸存”下来的人会提供信息，“死人不会说话”），而使得由这些信息得出的结论缺乏普适性。但人们往往会忽视这一点，忽视而把获得的信息过度概括。</p>
</blockquote>
<p>4 月开始，上海 2500 万人全部进入封控状态。这一庞大的供给需求一下子砸到街道社区头上，基层组织关系接近崩溃。</p>
<p>大多数物资储备充足，能网上抢菜的人，安静地在家封控，自然也不会在网上发言。</p>
<p>可是，老人等弱势群体大都未接到物资储备的消息，也缺少线上抢购手段，只能通过尽可能多的渠道发声来求救。</p>
<p>2500 万人即使只有万分之一的遗漏，也有 2500 人遇到困难。</p>
<p>当这批人开始发声，就形成了「饥饿的上海」形象，这也就是为什么舆论中的上海与实际生活完全不同的原因。</p>
<p>那么，排除掉「幸存者偏差」因素，上海真实在发生什么？</p>
<h2> 上海的困难</h2>
<blockquote>
<p>时代中的一粒灰，落在个人头上，就是一座山。</p>
</blockquote>
<p>除了初期的物资匮乏，上海面临的困难还远不止此，核酸混乱、政策多变、食品安全、物价高企、就医困难，都是摆在上海人面前的大山。</p>
<p>当这些消息集中释放后，即使不是当事人也感到极度压抑。估计解除封控后，大家都得去心理咨询了。</p>
<p>居家隔离前，我觉得隔离也不错，有吃有喝，还白拿工资。之前，我甚至还写了一篇文章，认为浦东封控放假，而浦西就得住在公司加班，不公平。</p>
<p>但是，当亲身体验到长时间隔离，才知道失去自由的代价高于一切。</p>
<p><strong>上海真正面临的困难，是长时间隔离带来的压抑情绪</strong>。这是每个上海居民面临的最大困难。物资已经逐渐充裕，困难也逐渐克服，但压抑的情绪却一直在紧绷。</p>
<p>东方台当时搞抗疫晚会，想必也是想给长时间封控在家里的我们带来一些振奋的情绪吧。</p>
<p>但它没理解，我们需要的不是晚会，而是真正的好消息 - <strong>疫情结束</strong>。</p>
<h2> 疫情中的希望</h2>
<p>为了写这篇文章，看了许多上海疫情所发生的悲剧，我的情绪也完全进入低谷。可想而知，当事人得有多么痛苦。</p>
<p>但对普通人，希望大家别去关注，这些坏消息真的会让人抑郁。当这股压抑情绪来临时，我真切地感受到「什么是灾民」。这不是物质上的匮乏，而是精神上的压抑，这给人的创伤更大。开始理解，被网暴的上海女儿为什么要自杀了，想必是压抑至极又碰上网暴而无法承受。</p>
<p>希望歧视上海的段子能少些，压抑的情绪中已经到了临界。</p>
<p>希望正能量的消息能多些，我们此刻真的很需要一点激励。</p>
<p>希望上海疫情能早点结束，让生活恢复正常。</p>
<p>也希望疫情结束后，上海能好好复盘，记住教训，不要让历史重演。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-04-20-21-43-24.png" type="image/png"/>
    </item>
    <item>
      <title>不想学 Python，零基础也能用的自动化工具-UI.Vision RPA</title>
      <link>https://mars.run/posts/2022-04-21-uivision_rpa.html</link>
      <guid>https://mars.run/posts/2022-04-21-uivision_rpa.html</guid>
      <source url="https://mars.run/rss.xml">不想学 Python，零基础也能用的自动化工具-UI.Vision RPA</source>
      <description>无需懂编程代码，只需安装浏览器插件，3 分钟速成爬虫攻略。 Python 被认为是次时代必学语言，也就成为贩卖知识焦虑最好的标靶，各大平台隔三差五就想让我们买课程。 但普通人真的有必要学 Python 吗？量化交易、人工智能、数据分析，你用得到哪个？ 当然，程序员、金融等相关从业者学 Python 无可厚非。可是，请不要推荐小白学 Python，90% 的人学了只是浪费时间。花 3 个月编程，也不一定能解决我们的基础功能需求。 请把你的时间花在更重要的事情上，克服知识焦虑。学一百种热门语言，不如熟练掌握一个好的工具。</description>
      <category>自动化</category>
      <pubDate>Thu, 21 Apr 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>无需懂编程代码，只需安装浏览器插件，3 分钟速成爬虫攻略。</p>
</blockquote>
<p>Python 被认为是次时代必学语言，也就成为贩卖知识焦虑最好的标靶，各大平台隔三差五就想让我们买课程。</p>
<p>但普通人真的有必要学 Python 吗？量化交易、人工智能、数据分析，你用得到哪个？</p>
<p>当然，程序员、金融等相关从业者学 Python 无可厚非。可是，请不要推荐小白学 Python，90% 的人学了只是浪费时间。花 3 个月编程，也不一定能解决我们的基础功能需求。</p>
<p>请把你的时间花在更重要的事情上，克服知识焦虑。<strong>学一百种热门语言，不如熟练掌握一个好的工具。</strong></p>
<figure><img src="http://tc.seoipo.com/2022-05-05-14-45-43.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>以下内容只适合不想学 Python，不懂编程，又想使用自动化和爬虫的小白，高手可以关闭页面了。</p>
<p>UI.Vision RPA 是一款开源的全平台自动化工具，<strong>无需懂编程</strong>，即可完成<strong>网页和桌面自动化操作</strong>，包括文件上传、表单填写、内容抓取、定时截图、爬虫抓取等。</p>
<h2> 安装 UI.Vision</h2>
<p>UI.Vision RPA 的主体是浏览器插件，只需去应用商店即可完成安装。</p>
<ul>
<li>Chrome 插件：<a href="https://chrome.google.com/webstore/detail/uivision-rpa/gcbalfbdmfieckjlnblleoemohcganoc" target="_blank" rel="noopener noreferrer">https://chrome.google.com/webstore/detail/uivision-rpa/gcbalfbdmfieckjlnblleoemohcganoc</a></li>
<li>Firefox 插件：<a href="https://addons.mozilla.org/zh-CN/firefox/addon/rpa/" target="_blank" rel="noopener noreferrer">https://addons.mozilla.org/zh-CN/firefox/addon/rpa/</a></li>
<li>Edge 插件：<a href="https://microsoftedge.microsoft.com/addons/detail/uivision-rpa-%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/goapmjinbaeomoemgdcnnhoedopjnddd" target="_blank" rel="noopener noreferrer">https://microsoftedge.microsoft.com/addons/detail/uivision-rpa-浏览器自动化工具/goapmjinbaeomoemgdcnnhoedopjnddd</a></li>
</ul>
<h2> 零门槛入门</h2>
<p>UI.Vision RPA 的运行脚本叫做「宏」。界面很简单，左侧是宏的范例库和本地文件，右侧是宏的运行和反馈区。</p>
<figure><img src="http://tc.seoipo.com/2022-04-21-16-52-29.png" alt="UI.Vision 应用界面" tabindex="0" loading="lazy"><figcaption>UI.Vision 应用界面</figcaption></figure>
<p>打开 UI.Vision 插件，点击右上角按钮「Record」，插件会把你的操作录制为宏脚本。</p>
<p>执行时，选中左侧保存的宏，然后点击右上角的按钮「Play Macro」，即可回放指定宏。点击「Play Loop」，则可让宏循环运行。</p>
<figure><img src="http://tc.seoipo.com/2022-04-21-20-25-31.gif" alt="自动化运行 GIF" tabindex="0" loading="lazy"><figcaption>自动化运行 GIF</figcaption></figure>
<h2> 第一次使用</h2>
<p>以范例库中的 DemoAutofill 为例，这是网页自动填充在线表格的宏，点击右上方的「Step」按钮逐步运行宏。有进阶需求的话，把范例一个个拆解学习，了解命令的使用方式。</p>
<ul>
<li>
<p>前 1-3 步使用「store」命令，对宏进行基本设置，如运行速度、超时等待、页面最长载入时间。点击命令右侧的「info for this command」可查看当前命令的官方文档。</p>
</li>
<li>
<p>第 4 步使用「open」命令，打开指定网址。</p>
</li>
<li>
<p>第 5-8 步使用「click」命令，依次点击指定按钮。</p>
<figure><img src="http://tc.seoipo.com/2022-04-21-17-15-59.png" alt="UI.Vision 点击命令" tabindex="0" loading="lazy"><figcaption>UI.Vision 点击命令</figcaption></figure>
</li>
<li>
<p>第 9 步使用「pause」命令，延时 500 毫秒。</p>
</li>
<li>
<p>第 10 步使用「captureScreenshot」命令，对可见网页部分截图，记录运行步骤。</p>
</li>
<li>
<p>第 11 步使用「clickAndWait」命令，单击指定按钮后等待页面加载。</p>
</li>
<li>
<p>第 12-13 步使用「type」命令，在指定区域输出指定文字。</p>
</li>
<li>
<p>第 14 步使用「captureScreenshot」命令，对可见网页部分截图，记录运行步骤。</p>
<p>第 15 步使用「pause」命令，延时 1000 毫秒。</p>
<p>第 16 步使用「clickAndWait」命令，单击指定按钮后等待页面加载。</p>
<p>第 17 步使用「captureScreenshot」命令，对可见网页部分截图，记录运行步骤。</p>
</li>
<li>
<p>第 18 步使用「echo」命令，调用浏览器通知模块，弹出指定提示。</p>
</li>
<li>
<p>第 19 步使用「comment」命令，注释当前步骤，无实际作用。</p>
<p>第 20 步使用「open」命令，打开指定网址。</p>
</li>
<li>
<p>最后一步使用「assertTitle」命令，获取网站的标题，并检查是否与指定文本相符合，判断宏是否运行成功。</p>
</li>
</ul>
<h2> 不同变量重复运行</h2>
<p>用不同的变量文本进行重复的网页操作，需要使用 UI.Vision 的 <a href="https://ui.vision/rpa/docs/selenium-ide/csvread" target="_blank" rel="noopener noreferrer">csvRead</a> 命令。下面以「依次打开不同链接」为例。</p>
<ol>
<li>点击 UI.Vision 右下角的「CSV」&gt;「Import CSV」，用 CSV 文件导入批量处理内容。</li>
<li>使用「csvReadArray」命令，Target 输入文件名「1.csv」，Value 输入分组名「link」。</li>
<li>使用「executeScript」命令，Target 输入计算脚本 <code>return ${!LOOP} - 1;</code>，Value 输入自定义变量名 <code>num</code>。数组序号以 0 开始而循环序号 <code>${!LOOP}</code> 以 1 起始，所以数组序号为 <code>${!LOOP}-1</code>。</li>
<li>使用「open」命令，Target 输入变量参数 <code>${link[${num}]}</code>，<code>${link[x]}</code> 指 link 数组中序号为 x 的成员。</li>
<li>使用「pause」命令，Target 输入延时时间，单位为毫秒。</li>
<li>点击右上角「Play Macro」旁边的下拉按钮，然后点击「Play Loop」，有多少行文本需要处理，就循环多少次。</li>
</ol>
<h2> 常见问题</h2>
<h3> 录制脚本无法使用</h3>
<p>如果脚本中使用了热键，这是无法被录制的，需要你手工添加 <code>XType</code> 命令。</p>
<p>如果脚本点击不成功，可以将对映步骤的 <code>Click</code> 命令改为 <code>XClick</code>。</p>
<h3> 浏览器外使用 RPA</h3>
<ol>
<li>地址栏输入 <code>chrome://extensions/</code>，找到扩展 UI.Vision RPA，点击按钮「详情」，启用「允许访问文件网址」。</li>
<li>右键单击指定脚本，点击「Create autorun HTML」，将自动输出两个 html 文件。</li>
<li>点击与脚本同名的 html 即可启动脚本。</li>
</ol>
<h3> 本地运行自动化报错</h3>
<p>本地运行自动化文件，报错 <code>No tab with id</code>。</p>
<p>这是自动化内存泄漏造成的报错，需要手动点击右上角的「Play Macro」按钮执行命令。
如果你不想手动执行，可以用编辑器打开与脚本同名的 html 文件，找到 <code>href="ui.vision.html?direct=1</code>，在这后面加入参数 <code>&amp;continueInLastUsedTab=0</code>。</p>
<h2> 总结</h2>
<p>UI.Vision RPA 操作简单，定制脚本宏只需录制和完善两步。</p>
<ul>
<li>录制：手动操作一次并录制宏，该环节基本能完成 80% 的功能转换。</li>
<li>完善：补充或修改部分命令宏，多为延时、截图等不被录制的简单命令。</li>
</ul>
<p>除 UI.Vision RPA 外，iMacros 和 Selenium IDE 也是热门的全平台自动化工具，都依托于浏览器插件。</p>
<p>这类自动化工具不用花大量时间学习，直接帮你解决问题，但并不能完全取代 Python 等编程语言。如果你依然有进阶需求，那努力去学编程吧，否则请先学会用工具。</p>
<p><strong>参考资料</strong>：</p>
<ul>
<li><a href="https://www.appinn.com/ui-vision-rpa/" target="_blank" rel="noopener noreferrer">UI.Vision RPA 浏览器自动化工具：表单填写、网页内容抓取、网页操作录制</a></li>
<li><a href="https://ui.vision/rpa/docs/selenium-ide" target="_blank" rel="noopener noreferrer">UI.Vision 命令官方文档</a></li>
<li><a href="https://github.com/LoveOctocat/UI.Vision-Kantu-ZH" target="_blank" rel="noopener noreferrer">白话 UI.Vision Kantu 插件</a></li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-05-14-45-43.png" type="image/png"/>
    </item>
    <item>
      <title>疫情封控两个月后，我对自己开始 24 小时的自我监控录像</title>
      <link>https://mars.run/posts/2022-05-22-surveillance_video_for_myself.html</link>
      <guid>https://mars.run/posts/2022-05-22-surveillance_video_for_myself.html</guid>
      <source url="https://mars.run/rss.xml">疫情封控两个月后，我对自己开始 24 小时的自我监控录像</source>
      <description>疫情封控两个月后，人变得愈发懒散，每天的成果只有吃饭睡觉。为了摆脱这种状态，我决定在书房对自己进行 24 小时的监控录像，督促自己提升效率。 自我监控方案有两点需求：首先，软硬件必须在本地操作、储存，绝对不能联网；其次工作中途经常离开书房，回放时能跳过无人片段。 寻找监控工具： 视频剪辑软件：自动识别长时间静止的画面，删除或加速相关视频帧。 录屏软件：带移动侦测功能，检测到人则开启录像，无人则自动暂停，无需联网就能使用。 播放软件：自动跳过超过 10s 的静止画面。 直连电脑的摄像机：不联网，不用 SD 卡将视频直接存储在电脑上。虽然萤石、小米有移动侦测功能，但视频需上传云端，风险过大。</description>
      <category>头脑驿站</category>
      <pubDate>Sun, 22 May 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>疫情封控两个月后，人变得愈发懒散，每天的成果只有吃饭睡觉。为了摆脱这种状态，我决定在书房对自己进行 24 小时的监控录像，督促自己提升效率。</p>
<p>自我监控方案有两点需求：首先，软硬件必须在本地操作、储存，绝对不能联网；其次工作中途经常离开书房，回放时能跳过无人片段。</p>
<p><strong>寻找监控工具</strong>：</p>
<ul>
<li>视频剪辑软件：自动识别长时间静止的画面，删除或加速相关视频帧。</li>
<li>录屏软件：带移动侦测功能，检测到人则开启录像，无人则自动暂停，无需联网就能使用。</li>
<li>播放软件：自动跳过超过 10s 的静止画面。</li>
<li>直连电脑的摄像机：不联网，不用 SD 卡将视频直接存储在电脑上。虽然萤石、小米有移动侦测功能，但视频需上传云端，风险过大。</li>
</ul>
<p>找了许久，始终找不到合适的工具。监控摄像头和行车记录仪能跳过静止画面，但这类工具都不能直连电脑，且限制很多，不方便后期回放剪辑。</p>
<p>最后靠着少数派群友 @chen 的推荐，尝试 DVR-Scan，补完了自我监控方案。</p>
<h2> 自我监控方案</h2>
<ol>
<li><strong>晨间唤醒</strong>：起床后，用手机单独录一句话。这句话在前一天准备好，包括日期、当日目标，也可以引入美好的回忆、憧憬的未来、向往的地方、喜欢的艺术 (音乐、名画、诗句)。
晨间唤醒参考了<a href="https://www.xuetangx.com/course/THU07111001088/" target="_blank" rel="noopener noreferrer">积极心理学</a>，收集积极情绪材料，给自己创造美好的情绪。</li>
<li><strong>录制视频</strong>：用 VLC 和摄像头录制视频，按计划开始工作学习。</li>
<li><strong>过滤视频</strong>：晚上 11 点，DVR-Scan 过滤静止视频片段，记录录制时长和处理后的视频时长。
<img src="http://tc.seoipo.com/2022-05-22-10-05-04.png" alt="视频时长记录表格" loading="lazy"></li>
<li><strong>视频回放</strong>：100x 倍速回放工作视频，检查工作效率和成果。如果需要听声音，则使用 PotPlayer 播放降噪，剪辑出要使用的片段。原始视频和过滤视频保存一月，定期清理。</li>
<li><strong>当日回顾</strong>：记录 3 件好事，总结好事发生的原因。
这可以是日常生活中常见的小事，比如读到一本好书、吃到一道好菜、听到一个亲友的好消息、在公交车上有人为你让座、孩子今天会走路了，等等。</li>
</ol>
<p>接下来，将详述自我监控方案的准备、流程及遇到的问题。</p>
<h2> 监控准备</h2>
<p>自我监控方案的硬件需要摄像头、电脑，软件则使用 VLC、DVR-Scan、PotPlayer。</p>
<p>摄像头预算一百左右就行，之前买过上千的罗技摄像头，画质并未有明显区别。</p>
<p>收音设备使用的是摄像头自带的麦克风。之所以不用桌面的声卡外接话筒，是因为容易有回音，杂音更重。</p>
<h2> 录制视频：VLC</h2>
<p>摄像头录像方案较少，大多是录屏软件的附带功能，我尝试了以下 9 种：</p>
<ul>
<li>相机：Windows 自带应用，录制方便，但输出选项少，限制多。</li>
<li><a href="https://www.flashbackrecorder.com/zh/express/" target="_blank" rel="noopener noreferrer">FlashBack Express</a>：能调节帧率，镜像，虚化背景，但免费版只支持 2 小时内的录制。</li>
<li><a href="https://www.bandicam.cn/" target="_blank" rel="noopener noreferrer">Bandicam</a>：录制时能降噪，内录扬声器音频，自由调节编码、帧率，但免费版只支持录制 10 分钟且有水印，输出文件名自定义规则极少。Bandicam 支持定时录制计划，但录制的开始和结束都必须由该计划执行，否则录制计划将不会执行。比如使用 Bandicam 的开机录制后，定时录制计划就会失效，需借助 Windows 的任务计划程序来定时录制停止，操作参考 <a href="https://www.bandicam.cn/support/tips/timer-recording/" target="_blank" rel="noopener noreferrer">Bandicam 官方文档</a>。</li>
<li><a href="https://mirillis.com/zh/products/action.html" target="_blank" rel="noopener noreferrer">Mirillis Action!</a>：高帧率录制游戏，自动分割视频，自定义叠加元素，但输入帧率不能自由调整，最低只能 15 帧，试用期 30 天。</li>
<li><a href="https://ohsoft.net/eng/ocam/intro.php?cate=1002" target="_blank" rel="noopener noreferrer">oCam</a>：打着免费招牌但有弹窗广告，且录制视频偏大。</li>
<li><a href="https://getsharex.com/" target="_blank" rel="noopener noreferrer">ShareX</a>：免费开源强大的截图软件，也具备录屏功能，能调节编码和帧率，但只能单一录屏或录像。</li>
<li><a href="https://github.com/MathewSachin/Captura/releases/tag/v8.0.0" target="_blank" rel="noopener noreferrer">Capture</a>：免费开源，使用前需手动 <a href="https://blog.csdn.net/dglx_/article/details/122389601" target="_blank" rel="noopener noreferrer">配置 FFmpeg</a>，自定义叠加元素，但项目已停止更新。测试时，Capture 经常莫名其妙的报错，重启大概率恢复正常，只能偶尔用用，不能用于工作环境。</li>
<li><a href="https://obsproject.com/" target="_blank" rel="noopener noreferrer">OBS</a>：免费开源直播软件，也可以录制视频，操作性极强，但输出限制多，也难以在直播的同时进行桌面录制。</li>
<li><a href="https://www.videolan.org/vlc/" target="_blank" rel="noopener noreferrer">VLC</a>：免费开源视频软件，能调节输出视频的编码、帧率、格式，但操作麻烦，只能单一录屏或录像，暂停录制容易有 bug。</li>
</ul>
<p>Bandicam、Mirillis Action！录制时，电脑无法进入睡眠，ManicTime 也不能检测到你的离开状态。</p>
<p>监控方案的单次录制时间在 12 小时以上，需要调低帧率以控制视频大小，选择了 VLC 作为录制软件。如果你要同时录屏和录像，可以使用 OBS、Capture 或 oCam。</p>
<p><strong>录制过程：</strong></p>
<ol>
<li>
<p>打开 VLC 的 Media -&gt; Open Capture Device，将 <code>Video device name</code> 和 <code>Audio device name</code> 选为摄像头，然后点击底部 <code>Play</code> 按钮旁边的下拉菜单，选中 <code>Convert</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-21-22-09-08.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>Settings -&gt; Profile 中选择视频输出方案，推荐选择 <code>Video - H.264 + MP3 (MP4)</code>，接着点击旁边的扳手按钮，修改输出方案。</p>
<figure><img src="http://tc.seoipo.com/2022-05-21-22-11-09.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>Profile edition -&gt; Video codec -&gt; Encoding parameters，依次调整视频的编码、比特率、画面质量、帧率，编码建议使用 H-264，码率推荐 10 fps。</p>
<figure><img src="http://tc.seoipo.com/2022-05-21-22-12-32.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
<li>
<p>Destination file 设置输出路径和视频名称。</p>
</li>
</ol>
<h2> 剪辑视频：DVR-Scan</h2>
<p>过滤视频的静态画面，是监控方案中的核心环节。开始我考虑用 QuickCut 过滤，但它是通过声音来判断视频是否静止（与飞书妙记的「跳过空白片段」原理类似），监控视频中大部分时间是没声音的，不适合用 QuickCut 剪辑。</p>
<p>群里 @chen 推荐了 <a href="https://github.com/Breakthrough/DVR-Scan" target="_blank" rel="noopener noreferrer">DVR-Scan</a>，能从画面判断是否需要过滤。</p>
<blockquote>
<p>DVR-Scan 是一个跨平台命令行（CLI）应用程序，可以自动检测视频文件中的运动事件（例如安全摄像头镜头）。除了定位每个运动事件的时间和持续时间外，DVR 扫描还将每个运动事件的片段保存到一个新的单独的视频剪辑中。DVR-Scan 免费开源软件（FOSS）是用 Python 编写的，并且基于 Numpy 和 OpenCV，而且可以扩展和黑客入侵。</p>
</blockquote>
<p>DVR-Scan 操作很简单，视频目录内右键单击「在终端打开」，执行默认输出命令即可得到过滤后的视频。12 小时的视频，处理用时二十分钟，会占用大量 CPU。有点要注意，DVR-Scan 有个限制，只能导出为<code>.avi</code>视频。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DVR-Scan 不同命令的测试效果如下：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>耗时（s）</th>
<th>输出视频（mins）</th>
</tr>
</thead>
<tbody>
<tr>
<td>默认</td>
<td>124</td>
<td>07:15</td>
</tr>
<tr>
<td>-t 0.5</td>
<td>125</td>
<td>06:52</td>
</tr>
<tr>
<td>-b CNT</td>
<td>107</td>
<td>10:05</td>
</tr>
<tr>
<td>-t 0.5 -b CNT</td>
<td>104</td>
<td>08:39</td>
</tr>
</tbody>
</table>
<p>另外，DVR-Scan 可以使用 <code>-roi</code> 命令，指定监测区域，只对该区域的动作进行监测。</p>
<p>DVR-Scan 进阶命令查看<a href="https://dvr-scan.readthedocs.io/en/latest/guide/examples/" target="_blank" rel="noopener noreferrer">官方文档</a>。</p>
<h2> 播放降噪：PotPlayer</h2>
<p>桌面录音容易有较大的噪音，重新处理的话需要大量时间，因此我将降噪环节放在视频播放器中处理。</p>
<ul>
<li>
<p><strong>开启降噪</strong>：风噪等一系列噪声会消失，但是带过降噪耳机的都知道，开启降噪会有一种很糊的感觉，这时视频的声音就会变得无比无比的糊。</p>
</li>
<li>
<p><strong>开启语音增强</strong>：语音增强会在很糊的声音中明显听到人的声音，但是还是略显不足，还是有点杂，而且声音特别大。</p>
</li>
<li>
<p><strong>关闭规格化</strong>：这时声音就不会那么大，也不会过于杂了，这时的声音已经相比处理前干净多了。</p>
</li>
<li>
<p><strong>开启超高音</strong>：打开均衡器，选择「超高音」方案。</p>
<figure><img src="http://tc.seoipo.com/2022-05-19-10-47-18.png" alt="PotPlayer 播放降噪设置" tabindex="0" loading="lazy"><figcaption>PotPlayer 播放降噪设置</figcaption></figure>
</li>
</ul>
<p>设置完成后，播放时 PotPlayer 会自动对视频进行降噪，无需额外花时间处理视频。</p>
<h2> 总结</h2>
<p>自我监控分为 5 步，晨间唤醒：计划 --&gt; 录制视频：VLC --&gt; 过滤视频：DVR-Scan --&gt; 视频回放：PotPlayer --&gt; 当日回顾。录制与过滤环节可以由脚本自动完成，我设定开机自动录制视频，然后晚上 9 点停止录制并自动过滤当天视频。</p>
<p>经过几天的自我监控后，我对于自己的活动有了更清晰的认知，方便进行控制、修正。监控视频存储在本地，不对第三方开放，也可以很放心地做自己。每日回顾中，直面自己的缺点、错误，积极地调整。</p>
<p><strong>参考资料：</strong></p>
<ul>
<li><a href="https://askubuntu.com/questions/422341/how-can-i-detect-motion-in-a-long-mostly-dull-video/423028#423028" target="_blank" rel="noopener noreferrer">How can I detect motion in a long, mostly dull video?</a></li>
<li><a href="https://blog.csdn.net/NeiHan2020/article/details/118368739" target="_blank" rel="noopener noreferrer">如何设置 potplayer 播放器把人声凸显出来并降噪？</a></li>
<li><a href="https://www.xuetangx.com/course/THU07111001088/" target="_blank" rel="noopener noreferrer">网课：积极心理学</a></li>
</ul>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/2022-05-22-10-05-04.png" type="image/png"/>
    </item>
    <item>
      <title>集自动发布、本地管理于一身：WordPress 博客管理方案分享</title>
      <link>https://mars.run/posts/2022-06-07-blog_md_to_wordpress.html</link>
      <guid>https://mars.run/posts/2022-06-07-blog_md_to_wordpress.html</guid>
      <source url="https://mars.run/rss.xml">集自动发布、本地管理于一身：WordPress 博客管理方案分享</source>
      <description>博客探索 2005 年，我开始用博客记录感想，发布在 MSN space 平台和短命的 Google Sidewiki 上。六年后，MSN space 关闭，博客被转移到 WordPress 托管，我改用 Blogger，没多久就暂停了博客。​ 2018 年，我偶然接触到 Jekyll，被其简洁的界面和便捷性打动，重新恢复了博客记录。博客方向从感想记录转变到知识整理输出。Jekyll 方案需要首先在本地用 Markdown 编辑排版，然后同步到 github 发布，最后以 Markdown 格式手动分发到各个渠道。当文章较少时，这套方案的体验感特别好。​</description>
      <category>博客</category>
      <pubDate>Tue, 07 Jun 2022 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 博客探索</h2>
<p>2005 年，我开始用博客记录感想，发布在 MSN space 平台和短命的 Google Sidewiki 上。六年后，MSN space 关闭，博客被转移到 WordPress 托管，我改用 Blogger，没多久就暂停了博客。​</p>
<p>2018 年，我偶然接触到 <a href="https://jekyllrb.com/" target="_blank" rel="noopener noreferrer">Jekyll</a>，被其简洁的界面和便捷性打动，重新恢复了博客记录。博客方向从感想记录转变到知识整理输出。Jekyll 方案需要首先在本地用 Markdown 编辑排版，然后同步到 github 发布，最后以 Markdown 格式手动分发到各个渠道。当文章较少时，这套方案的体验感特别好。​</p>
<p>到了 2021 年，<strong>随着文章和发布渠道的增多，文章的修改和管理变得愈加困难</strong>。慢慢地，我开始习惯本地 Markdown 只做初稿排版，更新则只在外部平台上进行。​</p>
<p>我的文章都是工具教程类，要随着工具的更新而修改，有时甚至要对几年前发布的文章进行更新。因此，针对少量平台更新的策略，带来了文章版本混乱，让博客偏离了知识记录的初衷。为了保证文章版本统一，我把博客从 Jekyll 迁移到 WordPress，准备以 WordPress 作为统一版。</p>
<figure><img src="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!40p" alt="Jekyll 博客" tabindex="0" loading="lazy"><figcaption>Jekyll 博客</figcaption></figure>
<p>然而，WordPress 方案很快就被放弃了。原因除了 WordPress 糟糕的编辑体验，更重要的是，我遇到了 Notion。其界面美观，编辑方便，支持对外展示，能导出为 Markdown、HTML 文件。​</p>
<p>可是，没什么平台是完美的。Notion 不支持同步本地 markdown 内容，图床不能在站外使用，国内访问速度成谜。这令 <strong>Notion 只适合个人分享，而非博客网站</strong>。我用 Notion，纯属垂涎美色。​</p>
<p>2022 年，由于疫情被封控在家两个月。时间多了，我继续折腾博客，希望找到一个界面美观，能自动发布且具备本地管理功能的博客方案。</p>
<h2> 博客方案</h2>
<p>最初，我幻想着修改一篇文章同步到多个平台，但找了许久也没有合适的。网上所谓的一键分发软件，实际上是通过网页操作来完成发布，并不能自动修改更新。​</p>
<p>剔除掉这类不现实的想法后，新的博客方案以 Markdown 版本为主，自动同步 WordPress，最后手动同步主要分发平台。​</p>
<p><strong>最终方案</strong>如下：​</p>
<ol>
<li>
<p>初稿：Markdown 本地编辑文章，使用七牛云自建图床。​</p>
</li>
<li>
<p>发布：同步本地 Markdown 文本，自动发布，保持主要平台内容为最新。​</p>
</li>
<li>
<p>管理：本地更新修改 Markdown 文件，docsify 页面整合文本内容，博客后台管理文章版本。​</p>
</li>
<li>
<p>订阅：用户能通过 RSS、邮件或微信来订阅博客更新。</p>
</li>
</ol>
<h2> WP 发布工具</h2>
<h3> 工具说明</h3>
<p><a href="https://github.com/zhaoolee/WordPressXMLRPCTools" target="_blank" rel="noopener noreferrer">WordPressXMLRPCTools</a> 能用 Markdown 生成博客，推送更新到 Github 后，通过 Github Actions 自动将文章更新到 WordPress，并将 WordPress 网站的文章索引更新到 Github 仓库的 <a href="http://README.md" target="_blank" rel="noopener noreferrer">README.md</a>，供搜索引擎收录，方便 Windows 用户使用。iOS 用户有更成熟的发布工具，无需代码即可到同步 WordPress，比如 @ern 推荐的 MWeb/Ulysses。</p>
<p>基于 WordPressXMLRPCTools，我做了三点修改：​</p>
<ul>
<li>
<p>发布设置：修改 <code>main.py</code> 文件。</p>
<ul>
<li>修复无法覆盖更新文章的 bug。</li>
<li>调整项目页的时间格式。</li>
<li>页首添加文章编辑时间，默认为格林尼治标准时间，比北京晚 8 小时。</li>
<li>将文章页尾部的本文永久更新地址从标题格式调整为常规字母。</li>
</ul>
</li>
<li>
<p>草稿箱：<code>_post</code> 路径内新建 <code>TEMP</code> 文件夹，用于存放文章草稿。WordPress 推送程序会忽略 <code>_post</code> 子文件夹的内容，换言之，<code>TEMP</code> 文件夹不会发布到 WordPress 网站。</p>
</li>
<li>
<p>文章聚合页：主路径添加 <code>.nojekyll</code>、<code>index.html</code> 和 <code>_sidebar.md</code> 三个文件，引入了文档生成工具 docsify，使得博客文章能聚合在一个页面，方便快速定位和位置管理。示例：<a href="https://rockbenben.github.io/Blog_WP/" target="_blank" rel="noopener noreferrer">https://rockbenben.github.io/Blog_WP/</a>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-26-20-12-56.png" alt="" tabindex="0" loading="lazy"><figcaption>docsify 页面效果</figcaption></figure>
</li>
</ul>
<h3> 使用流程</h3>
<ol>
<li>进入 <a href="https://github.com/rockbenben/Blog_WP" target="_blank" rel="noopener noreferrer">项目页面</a>，点击「Use this template」，复制模板文件。</li>
<li>回到你新建的 repo，删除 _post 文件夹中的所有文件，参照主目录下 <code>example_article.md</code> 的格式编辑文章。注意：md 文件名不能包含大写字母。</li>
<li>按 <a href="https://github.com/zhaoolee/WordPressXMLRPCTools#%E7%94%A8github-actions%E5%86%99markdown%E6%96%87%E7%AB%A0%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%B0wordpress" target="_blank" rel="noopener noreferrer">WordPressXMLRPCTools 安装步骤</a> 执行，如遇报错，查看下方使用问题。注意检查 WordPress 登录授权和 Github Actions secret，这两步极易遗漏。</li>
<li>修改主目录下的 <code>index.html</code> 和 <code>_sidebar.md</code> 文件，调整 docsify 网页设置。
<ul>
<li><code>index.html</code> 修改 docsify 网页标题、描述和关键词。</li>
<li><code>_sidebar.md</code> 修改 docsify 网页侧边栏，加入博客文章的标题和位置。</li>
</ul>
</li>
</ol>
<h2> WP 发布常见问题</h2>
<h3> 文章发布不成功</h3>
<p><code>_post</code> 文件夹添加了文档，但同步后，<code>README.md</code> 和 WordPress 并没有添加文章。</p>
<p>检查以下两点：</p>
<ul>
<li>
<p>文章后缀必须为「.md」，不支持「.markdown」或其他后缀格式。</p>
</li>
<li>
<p>进入 repo 页面中的 <code>Actions</code>，检查最近一次的 update 是否正确。根据报错代码，寻找错误原因。</p>
<figure><img src="http://tc.seoipo.com/2022-05-26-20-36-56.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
</li>
</ul>
<h3> Error: git denied to github-actions[bot]</h3>
<p>遇到 GitHub Actions 报错：<code>git denied to github-actions[bot]</code> 或 <code>Process completed with exit code 128</code>。</p>
<p>点击该 repository 的「Setting」&gt;「Code and automation」&gt;「Actions」&gt;「General」，然后在 Workflow permissions 中开启「Read and write permissions」。</p>
<h3> Error: Process completed with exit code 1</h3>
<p>遇到 GitHub Actions 报错：<code>Error: Process completed with exit code 1</code>，可能是文章内容触发了服务器的安全规则，拒绝了文章的同步。</p>
<p>如果出现该项报错，暂时关闭服务器防火墙，可解决问题。同步完成后，记得重新开启防火墙。</p>
<h3> 无法覆盖更新原文章 ​</h3>
<p>修改旧文章并同步后，WordPress 站的文章没同步修改，而是新增了一篇相同的文章。</p>
<ul>
<li>检查 md 文件名有没有出现大写字母，有没有更改文件名。</li>
<li>进入 WordPress 后台，点击「设置」&gt;「固定链接」，选中自定义结构，并将文章链接设为 <code>/p/%postname%</code>。</li>
</ul>
<p>如果修改版在检查后依然出现此问题，建议手动将新文章内容覆盖旧文章，然后删除新文章。​ 这个 bug 可以当作是强提醒。当 WordPress 新增了旧文章，你就被提醒要在其他平台修改该文章，让文章版本保持统一。</p>
<h3> WordPress 发布时间与实际不符 ​</h3>
<p>同步文章后，WordPress 显示的文章发布时间是 GitHub push 时间，而非文章真实的发布时间。​</p>
<p>如果你将旧文章转移到 WordPress，文章的发布时间需在 WordPress 后台手动修改，无法在 Markdown 文件中指定 WordPress 显示的发布时间。</p>
<h3> 有序列表编号有误</h3>
<p>文章中设定的编号是 <code>3</code>，但同步到 WordPress 后，变成了 <code>1</code>。</p>
<p>有序列表中穿插了图片、段落，编号就会重置到 <code>1</code>。去除图片与旧序列的空行，就能识别正确编号。</p>
<h3> 无序列表只有一个层级</h3>
<p>Markdown 转 WordPRess 文章时，默认规则无法识别缩进级别。多层级列表只会显示一个层级，其他层级的列表都被提到第一层级。</p>
<h2> 本地管理 Markdown 文章</h2>
<p>如果用 Windows 资源管理器管理 Markdown 文章，会存在 3 个问题：</p>
<ul>
<li>资源管理器的视觉效果非常难看。</li>
<li>Markdown 文件名称不能展示关键信息，较难定位文档。文章越多，管理越困难。</li>
<li>无法对文章内容进行本地检索，只能通过文件名称猜测内容。</li>
</ul>
<figure><img src="http://tc.seoipo.com/2022-05-30-19-00-15.png" alt="" tabindex="0" loading="lazy"><figcaption>难以管理的本地文档</figcaption></figure>
<p>为解决这些问题，我借助飞书表格、RunAny 和 docsify 重构本地文章管理方案。</p>
<h3> 飞书文档管理</h3>
<p>飞书文档功能与 Notion、Airtable 类似，可将文字、链接、图片聚合在同一页面，操作便捷。</p>
<p>打开飞书多维表格，填入本地 Markdown 文章的标题、本地位置、链接、标签和封面，即可聚合本地文章的关键信息。将表格视图切换为「画册视图」，文档管理界面更达到 90% 的 Notion 视觉效果。</p>
<figure><img src="http://tc.seoipo.com/2022-05-06-12-43-36.png" alt="" tabindex="0" loading="lazy"><figcaption>飞书表格视图</figcaption></figure>
<figure><img src="http://tc.seoipo.com/2022-05-06-12-28-41.png" alt="" tabindex="0" loading="lazy"><figcaption>飞书画册视图</figcaption></figure>
<h3> RunAny 文档直达 ​</h3>
<p>在线文档中，无法像打开超链接一样直接打开本地文件。若要节省中间打开时间，可以使用 RunAny。​</p>
<p><a href="https://hui-zz.gitee.io/runany/#/" target="_blank" rel="noopener noreferrer">RunAny</a> 是基于 AutoHotkey 的一键启动软件。按下方配置后，点击飞书表格中的「本地位置」，即可使用默认编辑器打开 md 文件。如果你的默认编辑器是 notepad++，则将下方命令中的 <code>Code.exe</code> 替换为 <code>notepad++.exe</code>。</p>
<div class="language-ini line-numbers-mode" data-ext="ini"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> docsify 全文检索</h3>
<p>飞书表格可以搜索关键元素，但不能对检索全文。这时，我们需要使用 <a href="https://docsify.js.org/#/" target="_blank" rel="noopener noreferrer">docsify</a>，一款能将 markdown 文档自动生成网站的工具，相当于轻量级的 GitBook。​</p>
<p>docsify 使用简单，如果使用了前文我修改过的<a href="https://github.com/rockbenben/Blog_WP" target="_blank" rel="noopener noreferrer">发布工具</a>，则无需配置。在发布工具文件夹内的空白区域，右键打开终端，执行命令<code>docsify serve</code>即可生成全文检索网页，默认管理链接为 <code>http://localhost:3000/</code>。</p>
<figure><img src="http://tc.seoipo.com/2022-05-30-20-03-19.png" alt="docsify 本地运行" tabindex="0" loading="lazy"><figcaption>docsify 本地运行</figcaption></figure>
<p>如果你设置了 Github Pages，项目会默认启动在线 docsify 网页，页面链接取决于 Github 的设置。比如我的用户名是 rockbenben，项目名是 Blog_WP，所以 docsify 管理页面就是 <a href="https://rockbenben.github.io/Blog_WP/" target="_blank" rel="noopener noreferrer">https://rockbenben.github.io/Blog_WP/</a>。</p>
<h2> 订阅管理：WordPress</h2>
<p>40% 的网站基于 WordPress 架构，因此 WordPress 有超多的主题和插件，可以实现你想要的功能，比如 RSS、Newsletter。</p>
<p>如果你拥有较多的粉丝，可以使用 <a href="https://substack.com/" target="_blank" rel="noopener noreferrer">Substack</a> 和<a href="https://zhubai.love/" target="_blank" rel="noopener noreferrer">竹白</a>来分发博客。这两者都支持 Newsletter 付费订阅。只针对国内用户的话，竹白可支持微信订阅。</p>
<h2> 后续</h2>
<p>比起原来的 Jekyll，新方案的配置要复杂些，但使用并不难，推荐稿件多的人采用。</p>
<p>折腾新方案的过程中，我发现了篇 2021 年初写的文章。当时，稿子写到 90%，我就去忙其他事，忘了这篇文章。等到这次被发现，它已经在草稿箱待了一年半。</p>
<p>用了新方案，稿件管理会变得很简单，稿件遗忘、找不到的情况也会减少许多。最近我出稿速度大增，也都跟这有关，都是从草稿箱捡回来的半成品。</p>
<p>写完这篇稿子，疫情封控也正好结束，终于可以出门了，希望永远别再给「免费假期」了。</p>
]]></content:encoded>
      <enclosure url="http://tc.seoipo.com/20210128124408.png?imageMogr2/thumbnail/!40p" type="image/"/>
    </item>
  </channel>
</rss>